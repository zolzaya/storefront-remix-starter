{
  "version": 3,
  "sources": ["<stdin>", "node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx", "app/root.tsx", "app/providers/collections/collections.ts", "app/graphqlWrapper.ts", "app/constants.ts", "app/generated/graphql.ts", "app/servers/session.server.ts", "app/providers/channel/channel.ts", "app/components/cart/CartTray.tsx", "app/components/cart/CartContents.tsx", "app/components/products/Price.tsx", "app/components/products/QuantitySelector.tsx", "app/utils/class-names.ts", "app/providers/customer/customer.ts", "app/utils/use-active-order.tsx", "app/components/home/Header.tsx", "app/components/home/Footer.tsx", "app/routes/verify-email-address-change.tsx", "app/providers/account/account.ts", "app/routes/api/active-order.tsx", "app/providers/orders/order.ts", "app/utils/validation.ts", "app/routes/sign-up/success.tsx", "app/routes/password-reset.tsx", "app/components/Input.tsx", "app/components/FormElement.tsx", "app/validators.ts", "app/route-containers/authentication/reset-password.server.ts", "app/routes/sign-up/index.tsx", "app/utils/registration-helper.ts", "app/routes/track-order.tsx", "app/routes/api/logout.ts", "app/routes/subscribe.ts", "app/routes/checkout.tsx", "app/components/cart/CartTotals.tsx", "app/routes/checkout/confirmation.$orderCode.tsx", "app/routes/checkout/payment.tsx", "app/route-containers/checkout/payment.server.ts", "app/providers/checkout/checkout.ts", "app/components/checkout/DirectDepositPayment.tsx", "app/components/HighlightedButton.tsx", "app/routes/checkout/index.tsx", "app/components/account/AddressForm.tsx", "app/components/checkout/ShippingMethodSelector.tsx", "app/components/checkout/ShippingAddressSelector.tsx", "app/routes/account.tsx", "app/routes/account/addresses.tsx", "app/components/account/AddAddressCard.tsx", "app/components/account/EditAddressCard.tsx", "app/components/ErrorMessage.tsx", "app/components/modal/Modal.tsx", "app/components/modal/modal-context.tsx", "app/routes/account/addresses/$addressId.tsx", "app/utils/use-toggle-state.tsx", "app/components/account/CustomerAddressForm.tsx", "app/components/Select.tsx", "app/routes/account/addresses/new.tsx", "app/routes/account/password.tsx", "app/components/SuccessMessage.tsx", "app/utils/validation-helper.ts", "app/routes/account/orders.tsx", "app/components/Button.tsx", "app/components/account/OrderHistoryItem.tsx", "app/components/account/OrderStateBadge.tsx", "app/route-containers/account/orders.server.ts", "app/routes/account/index.tsx", "app/routes/p/$slug.tsx", "app/providers/products/products.ts", "app/components/Breadcrumbs.tsx", "app/components/Alert.tsx", "app/components/products/StockLevelLabel.tsx", "app/components/products/ScrollableContainer.tsx", "app/routes/sign-in.tsx", "app/route-containers/authentication/login.server.ts", "app/routes/t/$slug.tsx", "app/components/FiltersButton.tsx", "app/components/collections/CollectionCard.tsx", "app/components/facet-filter/FacetFilterControls.tsx", "app/components/facet-filter/facet-filter-tracker.ts", "app/components/products/ProductCard.tsx", "app/route-containers/collections.server.ts", "app/utils/filtered-search-loader.ts", "app/routes/search.tsx", "app/routes/verify.tsx", "app/routes/index.tsx", "app/components/home/Banners.tsx", "app/components/home/Hero.tsx", "app/components/home/NewsletterBox.tsx", "app/components/home/ScrollableProducts.tsx", "app/components/products/ProductCard2.tsx", "app/components/products/ProductCardHorizontal.tsx", "app/route-containers/home.server.ts", "app/routes/help.tsx", "app/routes/tos.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\nisRouteErrorResponse,\nLink,\nLinks,\nLiveReload,\nMeta,\nOutlet,\nScripts,\nScrollRestoration,\nShouldReloadFunction,\nuseLoaderData,\nuseRouteError } from\n'@remix-run/react';\nimport styles from './styles/app.css';\nimport {\nDataFunctionArgs,\njson } from\n'@remix-run/server-runtime';\nimport { getCollections } from '~/providers/collections/collections';\nimport { activeChannel } from '~/providers/channel/channel';\nimport { APP_META_DESCRIPTION, APP_META_TITLE } from '~/constants';\nimport { useEffect, useState } from 'react';\nimport { CartTray } from '~/components/cart/CartTray';\nimport { getActiveCustomer } from '~/providers/customer/customer';\nimport { useActiveOrder } from '~/utils/use-active-order';\nimport { setApiUrl } from '~/graphqlWrapper';\nimport Header from './components/home/Header';\nimport Footer from './components/home/Footer';\n\nexport function meta() {\n  return [{ title: APP_META_TITLE, description: APP_META_DESCRIPTION }];\n};\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}\n\nconst devMode =\ntypeof process !== 'undefined' && process.env.NODE_ENV === 'development';\n\n// The root data does not change once loaded.\nexport const unstable_shouldReload: ShouldReloadFunction = ({\n  url,\n  prevUrl,\n  params,\n  submission\n}) => {\n  if (prevUrl.pathname === '/sign-in') {\n    // just logged in\n    return true;\n  }\n  if (prevUrl.pathname === '/account' && url.pathname === '/') {\n    // just logged out\n    return true;\n  }\n  if (submission?.action === '/checkout/payment') {\n    // submitted payment for order\n    return true;\n  }\n  return false;\n};\n\nexport type RootLoaderData = {\n  activeCustomer: Awaited<ReturnType<typeof getActiveCustomer>>;\n  activeChannel: Awaited<ReturnType<typeof activeChannel>>;\n  collections: Awaited<ReturnType<typeof getCollections>>;\n};\n\nexport async function loader({ request, params, context }: DataFunctionArgs) {\n  if (typeof context.VENDURE_API_URL === 'string') {\n    // Set the API URL for Cloudflare Pages\n    setApiUrl(context.VENDURE_API_URL);\n  }\n  const collections = await getCollections(request);\n  const topLevelCollections = collections.filter(\n  (collection) => collection.parent?.name === '__root_collection__'\n  );\n  const activeCustomer = await getActiveCustomer({ request });\n  const loaderData: RootLoaderData = {\n    activeCustomer,\n    activeChannel: await activeChannel({ request }),\n    collections: topLevelCollections\n  };\n  return json(loaderData, { headers: activeCustomer._headers });\n}\n\nexport default function App() {\n  const [open, setOpen] = useState(false);\n  const loaderData = useLoaderData<RootLoaderData>();\n  const { collections } = loaderData;\n  const {\n    activeOrderFetcher,\n    activeOrder,\n    adjustOrderLine,\n    removeItem,\n    refresh\n  } = useActiveOrder();\n\n  useEffect(() => {\n    // When the loader has run, this implies we should refresh the contents\n    // of the activeOrder as the user may have signed in or out.\n    refresh();\n  }, [loaderData]);\n\n  return (\n    <html lang=\"en\" id=\"app\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/png\"></link>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n\n        <Header\n        onCartIconClick={() => setOpen(!open)}\n        cartQuantity={activeOrder?.totalQuantity ?? 0}\n        collections={collections} />\n\n\n        <Outlet\n        context={{\n          activeOrderFetcher,\n          activeOrder,\n          adjustOrderLine,\n          removeItem\n        }} />\n\n\n        <Footer collections={collections} />\n\n        <CartTray\n        open={open}\n        onClose={setOpen}\n        activeOrder={activeOrder}\n        adjustOrderLine={adjustOrderLine}\n        removeItem={removeItem} />\n\n        <ScrollRestoration />\n        <Scripts />\n\n        {devMode && <LiveReload />}\n      </body>\n    </html>);\n\n}\n\n\n\ntype DefaultSparseErrorPageProps = {\n  tagline: string;\n  headline: string;\n  description: string;\n};\n/**\n * You should replace this in your actual storefront to provide a better user experience.\n * You probably want to still show your footer and navigation. You will also need fallbacks\n * for your data dependant components in case your shop instance / CMS isnt responding.\n * See: https://remix.run/docs/en/main/route/error-boundary\n */\nfunction DefaultSparseErrorPage({ tagline, headline, description }: DefaultSparseErrorPageProps) {\n  return (\n    <html lang=\"en\" id=\"app\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/png\"></link>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <main className=\"flex flex-col items-center px-4 py-16 sm:py-32 text-center\">\n          <span className=\"text-sm font-semibold text-gray-500 uppercase tracking-wide\">{tagline}</span>\n          <h1 className=\"mt-2 font-bold text-gray-900 tracking-tight text-4xl sm:text-5xl\">{headline}</h1>\n          <p className=\"mt-4 text-base text-gray-500 max-w-full break-words\">{description}</p>\n          <div className=\"mt-6\">\n            <Link\n            to=\"/\"\n            className=\"text-base font-medium text-indigo-600 hover:text-indigo-500 inline-flex gap-2\">\n\n              \u042D\u0445\u043B\u044D\u043B \u0445\u0443\u0443\u0434\u0430\u0441 \u0440\u0443\u0443 \u0431\u0443\u0446\u0430\u0445\n            </Link>\n          </div>\n        </main>\n        <ScrollRestoration />\n        <Scripts />\n        {devMode && <LiveReload />}\n      </body>\n    </html>);\n\n}\n\n/**\n * As mentioned in the jsdoc for `DefaultSparseErrorPage` you should replace this to suit your needs.\n */\nexport function ErrorBoundary() {\n  let tagline = \"Oops!\";\n  let headline = \"\u0410\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430!\";\n  let description = \"\u0411\u0438\u0434 \u0442\u0430\u043D\u044B \u0445\u04AF\u0441\u044D\u043B\u0442\u0438\u0439\u0433 \u0431\u0438\u0435\u043B\u04AF\u04AF\u043B\u0436 \u0447\u0430\u0434\u0441\u0430\u043D\u0433\u04AF\u0439. \u0414\u0430\u0440\u0430\u0430 \u0434\u0430\u0445\u0438\u043D \u043E\u0440\u043E\u043B\u0434\u043E\u0436 \u04AF\u0437\u043D\u044D \u04AF\u04AF.\";\n\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    tagline = `${error.status} error`;\n    headline = error.statusText;\n    description = error.data;\n  }\n\n  return <DefaultSparseErrorPage tagline={tagline} headline={headline} description={description} />;\n}\n\n/**\n * In Remix v2 there will only be a `ErrorBoundary`\n * As mentioned in the jsdoc for `DefaultSparseErrorPage` you should replace this to suit your needs.\n * Relevant for the future: https://remix.run/docs/en/main/route/error-boundary-v2\n */\nexport function CatchBoundary() {\n  return ErrorBoundary();\n}", "import gql from 'graphql-tag';\nimport { sdk } from '../../graphqlWrapper';\nimport { listedProductFragment } from '../products/products';\n\nexport function getCollections(request: Request) {\n  return sdk\n    .collections(undefined, { request })\n    .then((result) => result.collections?.items);\n}\n\ngql`\n  query collections {\n    collections {\n      items {\n        id\n        name\n        slug\n        parent {\n          name\n        }\n        featuredAsset {\n          id\n          preview\n        }\n        children {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }\n`;\n\ngql`\n  query collection($slug: String, $id: ID) {\n    collection(slug: $slug, id: $id) {\n      id\n      name\n      slug\n      breadcrumbs {\n        id\n        name\n        slug\n      }\n      children {\n        id\n        name\n        slug\n        featuredAsset {\n          id\n          preview\n        }\n      }\n    }\n  }\n`;\n", "import { DocumentNode, print } from 'graphql';\nimport { DEMO_API_URL } from './constants';\nimport { getSdk } from './generated/graphql';\nimport { sessionStorage } from './servers/session.server';\n\nlet API_URL =\n  typeof process !== 'undefined'\n    ? process.env.VENDURE_API_URL ?? DEMO_API_URL\n    : DEMO_API_URL;\n\nexport interface QueryOptions {\n  request: Request;\n}\n\nexport interface GraphqlResponse<Response> {\n  errors: any[];\n  data: Response;\n}\n\nexport type WithHeaders<T> = T & { _headers: Headers };\n\nconst AUTH_TOKEN_SESSION_KEY = 'authToken';\n\n/**\n * This function is used when running in Cloudflare Pages in order to set the API URL\n * based on an environment variable. Env vars work differently in CF Pages and are not available\n * on the `process` object (which does not exist). Instead, it needs to be accessed from the loader\n * context, and if defined we use it here to set the API_URL var which will be used by the\n * GraphQL calls.\n *\n * See https://developers.cloudflare.com/workers/platform/environment-variables/#environmental-variables-with-module-workers\n */\nexport function setApiUrl(apiUrl: string) {\n  API_URL = apiUrl;\n}\n\nasync function sendQuery<Response, Variables = {}>(options: {\n  query: string;\n  variables?: Variables;\n  headers?: Headers;\n  request?: Request;\n}): Promise<GraphqlResponse<Response> & { headers: Headers }> {\n  const headers = new Headers(options.headers);\n  const req = options.request;\n  headers.append('Content-Type', 'application/json');\n  const session = await sessionStorage.getSession(\n    options.request?.headers.get('Cookie'),\n  );\n  if (session) {\n    // If we have a vendure auth token stored in the Remix session, then we\n    // add it as a bearer token to the API request being sent to Vendure.\n    const token = session.get(AUTH_TOKEN_SESSION_KEY);\n    if (token) {\n      headers.append('Authorization', `Bearer ${token}`);\n    }\n  }\n\n  return fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(options),\n    headers,\n  }).then(async (res) => ({\n    ...(await res.json()),\n    headers: res.headers,\n  }));\n}\n\nconst baseSdk = getSdk<QueryOptions>(requester);\n\ntype Sdk = typeof baseSdk;\ntype SdkWithHeaders = {\n  [k in keyof Sdk]: (\n    ...args: Parameters<Sdk[k]>\n  ) => Promise<Awaited<ReturnType<Sdk[k]>> & { _headers: Headers }>;\n};\n\nexport const sdk: SdkWithHeaders = baseSdk as any;\n\nfunction requester<R, V>(\n  doc: DocumentNode,\n  vars?: V,\n  options?: { headers?: Headers; request?: Request },\n): Promise<R & { _headers: Headers }> {\n  return sendQuery<R, V>({\n    query: print(doc),\n    variables: vars,\n    ...options,\n  }).then(async (response) => {\n    const token = response.headers.get('vendure-auth-token');\n    const headers: Record<string, string> = {};\n    if (token) {\n      // If Vendure responded with an auth token, it means a new Vendure session\n      // has started. In this case, we will store that auth token in the Remix session\n      // so that we can attach it as an Authorization header in all subsequent requests.\n      const session = await sessionStorage.getSession(\n        options?.request?.headers.get('Cookie'),\n      );\n      if (session) {\n        session.set(AUTH_TOKEN_SESSION_KEY, token);\n        headers['Set-Cookie'] = await sessionStorage.commitSession(session);\n      }\n    }\n    headers['x-vendure-api-url'] = API_URL;\n    if (response.errors) {\n      console.log(\n        response.errors[0].extensions?.exception?.stacktrace.join('\\n') ??\n          response.errors,\n      );\n      throw new Error(JSON.stringify(response.errors[0]));\n    }\n    return { ...response.data, _headers: new Headers(headers) };\n  });\n}\n", "export const APP_META_TITLE = 'superb.mn - Powered by me';\nexport const APP_META_DESCRIPTION =\n  'A headless commerce storefront starter kit built with Remix & Vendure';\n// export const DEMO_API_URL = 'https://readonlydemo.vendure.io/shop-api';\n// export const DEMO_API_URL = 'http://docker.for.mac.host.internal:3000/shop-api';\nexport const DEMO_API_URL = 'https://superb.mn/shop-api';\n\nexport const ALLOWED_PAGINATION_LIMITS = new Set<number>([10, 20, 30]);\n", "import { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type ActiveOrderResult = NoActiveOrderError | Order;\n\nexport type AddPaymentToOrderResult = IneligiblePaymentMethodError | NoActiveOrderError | Order | OrderPaymentStateError | OrderStateTransitionError | PaymentDeclinedError | PaymentFailedError;\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  city?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  country: Country;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  fullName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  amount: Scalars['Int'];\n  description: Scalars['String'];\n  type: AdjustmentType;\n};\n\nexport enum AdjustmentType {\n  DistributedOrderPromotion = 'DISTRIBUTED_ORDER_PROMOTION',\n  Other = 'OTHER',\n  Promotion = 'PROMOTION'\n}\n\n/** Returned when attempting to set the Customer for an Order when already logged in. */\nexport type AlreadyLoggedInError = ErrorResult & {\n  __typename?: 'AlreadyLoggedInError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type ApplyCouponCodeResult = CouponCodeExpiredError | CouponCodeInvalidError | CouponCodeLimitError | Order;\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  fileSize: Scalars['Int'];\n  focalPoint?: Maybe<Coordinate>;\n  height: Scalars['Int'];\n  id: Scalars['ID'];\n  mimeType: Scalars['String'];\n  name: Scalars['String'];\n  preview: Scalars['String'];\n  source: Scalars['String'];\n  type: AssetType;\n  updatedAt: Scalars['DateTime'];\n  width: Scalars['Int'];\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum AssetType {\n  Binary = 'BINARY',\n  Image = 'IMAGE',\n  Video = 'VIDEO'\n}\n\nexport type AuthenticationInput = {\n  native?: InputMaybe<NativeAuthInput>;\n};\n\nexport type AuthenticationMethod = Node & {\n  __typename?: 'AuthenticationMethod';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  strategy: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type AuthenticationResult = CurrentUser | InvalidCredentialsError | NotVerifiedError;\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\n/** Operators for filtering on a list of Boolean fields */\nexport type BooleanListOperators = {\n  inList: Scalars['Boolean'];\n};\n\n/** Operators for filtering on a Boolean field */\nexport type BooleanOperators = {\n  eq?: InputMaybe<Scalars['Boolean']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  defaultLanguageCode: LanguageCode;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultTaxZone?: Maybe<Zone>;\n  id: Scalars['ID'];\n  pricesIncludeTax: Scalars['Boolean'];\n  token: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  assets: Array<Asset>;\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  children?: Maybe<Array<Collection>>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  filters: Array<ConfigurableOperation>;\n  id: Scalars['ID'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  parent?: Maybe<Collection>;\n  position: Scalars['Int'];\n  productVariants: ProductVariantList;\n  slug: Scalars['String'];\n  translations: Array<CollectionTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: InputMaybe<ProductVariantListOptions>;\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionFilterParameter = {\n  createdAt?: InputMaybe<DateOperators>;\n  description?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  position?: InputMaybe<NumberOperators>;\n  slug?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CollectionListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<CollectionFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<CollectionSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\n/**\n * Which Collections are present in the products returned\n * by the search, and in what quantity.\n */\nexport type CollectionResult = {\n  __typename?: 'CollectionResult';\n  collection: Collection;\n  count: Scalars['Int'];\n};\n\nexport type CollectionSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  description?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  position?: InputMaybe<SortOrder>;\n  slug?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  defaultValue?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  required: Scalars['Boolean'];\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  /** A JSON stringified representation of the actual value */\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  args: Array<ConfigArg>;\n  code: Scalars['String'];\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  args: Array<ConfigArgDefinition>;\n  code: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  arguments: Array<ConfigArgInput>;\n  code: Scalars['String'];\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type Country = Node & {\n  __typename?: 'Country';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<CountryTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CountryTranslation = {\n  __typename?: 'CountryTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeExpiredError = ErrorResult & {\n  __typename?: 'CouponCodeExpiredError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeInvalidError = ErrorResult & {\n  __typename?: 'CouponCodeInvalidError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeLimitError = ErrorResult & {\n  __typename?: 'CouponCodeLimitError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  limit: Scalars['Int'];\n  message: Scalars['String'];\n};\n\nexport type CreateAddressInput = {\n  city?: InputMaybe<Scalars['String']>;\n  company?: InputMaybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  customFields?: InputMaybe<Scalars['JSON']>;\n  defaultBillingAddress?: InputMaybe<Scalars['Boolean']>;\n  defaultShippingAddress?: InputMaybe<Scalars['Boolean']>;\n  fullName?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  postalCode?: InputMaybe<Scalars['String']>;\n  province?: InputMaybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: InputMaybe<Scalars['String']>;\n};\n\nexport type CreateCustomerInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n  emailAddress: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  Aed = 'AED',\n  /** Afghan afghani */\n  Afn = 'AFN',\n  /** Albanian lek */\n  All = 'ALL',\n  /** Armenian dram */\n  Amd = 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang = 'ANG',\n  /** Angolan kwanza */\n  Aoa = 'AOA',\n  /** Argentine peso */\n  Ars = 'ARS',\n  /** Australian dollar */\n  Aud = 'AUD',\n  /** Aruban florin */\n  Awg = 'AWG',\n  /** Azerbaijani manat */\n  Azn = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam = 'BAM',\n  /** Barbados dollar */\n  Bbd = 'BBD',\n  /** Bangladeshi taka */\n  Bdt = 'BDT',\n  /** Bulgarian lev */\n  Bgn = 'BGN',\n  /** Bahraini dinar */\n  Bhd = 'BHD',\n  /** Burundian franc */\n  Bif = 'BIF',\n  /** Bermudian dollar */\n  Bmd = 'BMD',\n  /** Brunei dollar */\n  Bnd = 'BND',\n  /** Boliviano */\n  Bob = 'BOB',\n  /** Brazilian real */\n  Brl = 'BRL',\n  /** Bahamian dollar */\n  Bsd = 'BSD',\n  /** Bhutanese ngultrum */\n  Btn = 'BTN',\n  /** Botswana pula */\n  Bwp = 'BWP',\n  /** Belarusian ruble */\n  Byn = 'BYN',\n  /** Belize dollar */\n  Bzd = 'BZD',\n  /** Canadian dollar */\n  Cad = 'CAD',\n  /** Congolese franc */\n  Cdf = 'CDF',\n  /** Swiss franc */\n  Chf = 'CHF',\n  /** Chilean peso */\n  Clp = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny = 'CNY',\n  /** Colombian peso */\n  Cop = 'COP',\n  /** Costa Rican colon */\n  Crc = 'CRC',\n  /** Cuban convertible peso */\n  Cuc = 'CUC',\n  /** Cuban peso */\n  Cup = 'CUP',\n  /** Cape Verde escudo */\n  Cve = 'CVE',\n  /** Czech koruna */\n  Czk = 'CZK',\n  /** Djiboutian franc */\n  Djf = 'DJF',\n  /** Danish krone */\n  Dkk = 'DKK',\n  /** Dominican peso */\n  Dop = 'DOP',\n  /** Algerian dinar */\n  Dzd = 'DZD',\n  /** Egyptian pound */\n  Egp = 'EGP',\n  /** Eritrean nakfa */\n  Ern = 'ERN',\n  /** Ethiopian birr */\n  Etb = 'ETB',\n  /** Euro */\n  Eur = 'EUR',\n  /** Fiji dollar */\n  Fjd = 'FJD',\n  /** Falkland Islands pound */\n  Fkp = 'FKP',\n  /** Pound sterling */\n  Gbp = 'GBP',\n  /** Georgian lari */\n  Gel = 'GEL',\n  /** Ghanaian cedi */\n  Ghs = 'GHS',\n  /** Gibraltar pound */\n  Gip = 'GIP',\n  /** Gambian dalasi */\n  Gmd = 'GMD',\n  /** Guinean franc */\n  Gnf = 'GNF',\n  /** Guatemalan quetzal */\n  Gtq = 'GTQ',\n  /** Guyanese dollar */\n  Gyd = 'GYD',\n  /** Hong Kong dollar */\n  Hkd = 'HKD',\n  /** Honduran lempira */\n  Hnl = 'HNL',\n  /** Croatian kuna */\n  Hrk = 'HRK',\n  /** Haitian gourde */\n  Htg = 'HTG',\n  /** Hungarian forint */\n  Huf = 'HUF',\n  /** Indonesian rupiah */\n  Idr = 'IDR',\n  /** Israeli new shekel */\n  Ils = 'ILS',\n  /** Indian rupee */\n  Inr = 'INR',\n  /** Iraqi dinar */\n  Iqd = 'IQD',\n  /** Iranian rial */\n  Irr = 'IRR',\n  /** Icelandic kr\u00F3na */\n  Isk = 'ISK',\n  /** Jamaican dollar */\n  Jmd = 'JMD',\n  /** Jordanian dinar */\n  Jod = 'JOD',\n  /** Japanese yen */\n  Jpy = 'JPY',\n  /** Kenyan shilling */\n  Kes = 'KES',\n  /** Kyrgyzstani som */\n  Kgs = 'KGS',\n  /** Cambodian riel */\n  Khr = 'KHR',\n  /** Comoro franc */\n  Kmf = 'KMF',\n  /** North Korean won */\n  Kpw = 'KPW',\n  /** South Korean won */\n  Krw = 'KRW',\n  /** Kuwaiti dinar */\n  Kwd = 'KWD',\n  /** Cayman Islands dollar */\n  Kyd = 'KYD',\n  /** Kazakhstani tenge */\n  Kzt = 'KZT',\n  /** Lao kip */\n  Lak = 'LAK',\n  /** Lebanese pound */\n  Lbp = 'LBP',\n  /** Sri Lankan rupee */\n  Lkr = 'LKR',\n  /** Liberian dollar */\n  Lrd = 'LRD',\n  /** Lesotho loti */\n  Lsl = 'LSL',\n  /** Libyan dinar */\n  Lyd = 'LYD',\n  /** Moroccan dirham */\n  Mad = 'MAD',\n  /** Moldovan leu */\n  Mdl = 'MDL',\n  /** Malagasy ariary */\n  Mga = 'MGA',\n  /** Macedonian denar */\n  Mkd = 'MKD',\n  /** Myanmar kyat */\n  Mmk = 'MMK',\n  /** Mongolian t\u00F6gr\u00F6g */\n  Mnt = 'MNT',\n  /** Macanese pataca */\n  Mop = 'MOP',\n  /** Mauritanian ouguiya */\n  Mru = 'MRU',\n  /** Mauritian rupee */\n  Mur = 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr = 'MVR',\n  /** Malawian kwacha */\n  Mwk = 'MWK',\n  /** Mexican peso */\n  Mxn = 'MXN',\n  /** Malaysian ringgit */\n  Myr = 'MYR',\n  /** Mozambican metical */\n  Mzn = 'MZN',\n  /** Namibian dollar */\n  Nad = 'NAD',\n  /** Nigerian naira */\n  Ngn = 'NGN',\n  /** Nicaraguan c\u00F3rdoba */\n  Nio = 'NIO',\n  /** Norwegian krone */\n  Nok = 'NOK',\n  /** Nepalese rupee */\n  Npr = 'NPR',\n  /** New Zealand dollar */\n  Nzd = 'NZD',\n  /** Omani rial */\n  Omr = 'OMR',\n  /** Panamanian balboa */\n  Pab = 'PAB',\n  /** Peruvian sol */\n  Pen = 'PEN',\n  /** Papua New Guinean kina */\n  Pgk = 'PGK',\n  /** Philippine peso */\n  Php = 'PHP',\n  /** Pakistani rupee */\n  Pkr = 'PKR',\n  /** Polish z\u0142oty */\n  Pln = 'PLN',\n  /** Paraguayan guaran\u00ED */\n  Pyg = 'PYG',\n  /** Qatari riyal */\n  Qar = 'QAR',\n  /** Romanian leu */\n  Ron = 'RON',\n  /** Serbian dinar */\n  Rsd = 'RSD',\n  /** Russian ruble */\n  Rub = 'RUB',\n  /** Rwandan franc */\n  Rwf = 'RWF',\n  /** Saudi riyal */\n  Sar = 'SAR',\n  /** Solomon Islands dollar */\n  Sbd = 'SBD',\n  /** Seychelles rupee */\n  Scr = 'SCR',\n  /** Sudanese pound */\n  Sdg = 'SDG',\n  /** Swedish krona/kronor */\n  Sek = 'SEK',\n  /** Singapore dollar */\n  Sgd = 'SGD',\n  /** Saint Helena pound */\n  Shp = 'SHP',\n  /** Sierra Leonean leone */\n  Sll = 'SLL',\n  /** Somali shilling */\n  Sos = 'SOS',\n  /** Surinamese dollar */\n  Srd = 'SRD',\n  /** South Sudanese pound */\n  Ssp = 'SSP',\n  /** S\u00E3o Tom\u00E9 and Pr\u00EDncipe dobra */\n  Stn = 'STN',\n  /** Salvadoran col\u00F3n */\n  Svc = 'SVC',\n  /** Syrian pound */\n  Syp = 'SYP',\n  /** Swazi lilangeni */\n  Szl = 'SZL',\n  /** Thai baht */\n  Thb = 'THB',\n  /** Tajikistani somoni */\n  Tjs = 'TJS',\n  /** Turkmenistan manat */\n  Tmt = 'TMT',\n  /** Tunisian dinar */\n  Tnd = 'TND',\n  /** Tongan pa\u02BBanga */\n  Top = 'TOP',\n  /** Turkish lira */\n  Try = 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd = 'TTD',\n  /** New Taiwan dollar */\n  Twd = 'TWD',\n  /** Tanzanian shilling */\n  Tzs = 'TZS',\n  /** Ukrainian hryvnia */\n  Uah = 'UAH',\n  /** Ugandan shilling */\n  Ugx = 'UGX',\n  /** United States dollar */\n  Usd = 'USD',\n  /** Uruguayan peso */\n  Uyu = 'UYU',\n  /** Uzbekistan som */\n  Uzs = 'UZS',\n  /** Venezuelan bol\u00EDvar soberano */\n  Ves = 'VES',\n  /** Vietnamese \u0111\u1ED3ng */\n  Vnd = 'VND',\n  /** Vanuatu vatu */\n  Vuv = 'VUV',\n  /** Samoan tala */\n  Wst = 'WST',\n  /** CFA franc BEAC */\n  Xaf = 'XAF',\n  /** East Caribbean dollar */\n  Xcd = 'XCD',\n  /** CFA franc BCEAO */\n  Xof = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf = 'XPF',\n  /** Yemeni rial */\n  Yer = 'YER',\n  /** South African rand */\n  Zar = 'ZAR',\n  /** Zambian kwacha */\n  Zmw = 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl = 'ZWL'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  channels: Array<CurrentUserChannel>;\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  code: Scalars['String'];\n  id: Scalars['ID'];\n  permissions: Array<Permission>;\n  token: Scalars['String'];\n};\n\nexport type CustomField = {\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type CustomFieldConfig = BooleanCustomFieldConfig | DateTimeCustomFieldConfig | FloatCustomFieldConfig | IntCustomFieldConfig | LocaleStringCustomFieldConfig | RelationCustomFieldConfig | StringCustomFieldConfig | TextCustomFieldConfig;\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  addresses?: Maybe<Array<Address>>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  emailAddress: Scalars['String'];\n  firstName: Scalars['String'];\n  id: Scalars['ID'];\n  lastName: Scalars['String'];\n  orders: OrderList;\n  phoneNumber?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n  user?: Maybe<User>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: InputMaybe<OrderListOptions>;\n};\n\nexport type CustomerFilterParameter = {\n  createdAt?: InputMaybe<DateOperators>;\n  emailAddress?: InputMaybe<StringOperators>;\n  firstName?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  lastName?: InputMaybe<StringOperators>;\n  phoneNumber?: InputMaybe<StringOperators>;\n  title?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  customers: CustomerList;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: InputMaybe<CustomerListOptions>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<CustomerFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<CustomerSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type CustomerSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  emailAddress?: InputMaybe<SortOrder>;\n  firstName?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  lastName?: InputMaybe<SortOrder>;\n  phoneNumber?: InputMaybe<SortOrder>;\n  title?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\n/** Operators for filtering on a list of Date fields */\nexport type DateListOperators = {\n  inList: Scalars['DateTime'];\n};\n\n/** Operators for filtering on a DateTime field */\nexport type DateOperators = {\n  after?: InputMaybe<Scalars['DateTime']>;\n  before?: InputMaybe<Scalars['DateTime']>;\n  between?: InputMaybe<DateRange>;\n  eq?: InputMaybe<Scalars['DateTime']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type DateRange = {\n  end: Scalars['DateTime'];\n  start: Scalars['DateTime'];\n};\n\n/**\n * Expects the same validation formats as the `<input type=\"datetime-local\">` HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['String']>;\n  min?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  step?: Maybe<Scalars['Int']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  message?: Maybe<Scalars['String']>;\n  result: DeletionResult;\n};\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  Deleted = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted = 'NOT_DELETED'\n}\n\nexport type Discount = {\n  __typename?: 'Discount';\n  adjustmentSource: Scalars['String'];\n  amount: Scalars['Int'];\n  amountWithTax: Scalars['Int'];\n  description: Scalars['String'];\n  type: AdjustmentType;\n};\n\n/** Returned when attempting to create a Customer with an email address already registered to an existing User. */\nexport type EmailAddressConflictError = ErrorResult & {\n  __typename?: 'EmailAddressConflictError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport enum ErrorCode {\n  AlreadyLoggedInError = 'ALREADY_LOGGED_IN_ERROR',\n  CouponCodeExpiredError = 'COUPON_CODE_EXPIRED_ERROR',\n  CouponCodeInvalidError = 'COUPON_CODE_INVALID_ERROR',\n  CouponCodeLimitError = 'COUPON_CODE_LIMIT_ERROR',\n  EmailAddressConflictError = 'EMAIL_ADDRESS_CONFLICT_ERROR',\n  IdentifierChangeTokenExpiredError = 'IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR',\n  IdentifierChangeTokenInvalidError = 'IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR',\n  IneligiblePaymentMethodError = 'INELIGIBLE_PAYMENT_METHOD_ERROR',\n  IneligibleShippingMethodError = 'INELIGIBLE_SHIPPING_METHOD_ERROR',\n  InsufficientStockError = 'INSUFFICIENT_STOCK_ERROR',\n  InvalidCredentialsError = 'INVALID_CREDENTIALS_ERROR',\n  MissingPasswordError = 'MISSING_PASSWORD_ERROR',\n  NativeAuthStrategyError = 'NATIVE_AUTH_STRATEGY_ERROR',\n  NegativeQuantityError = 'NEGATIVE_QUANTITY_ERROR',\n  NotVerifiedError = 'NOT_VERIFIED_ERROR',\n  NoActiveOrderError = 'NO_ACTIVE_ORDER_ERROR',\n  OrderLimitError = 'ORDER_LIMIT_ERROR',\n  OrderModificationError = 'ORDER_MODIFICATION_ERROR',\n  OrderPaymentStateError = 'ORDER_PAYMENT_STATE_ERROR',\n  OrderStateTransitionError = 'ORDER_STATE_TRANSITION_ERROR',\n  PasswordAlreadySetError = 'PASSWORD_ALREADY_SET_ERROR',\n  PasswordResetTokenExpiredError = 'PASSWORD_RESET_TOKEN_EXPIRED_ERROR',\n  PasswordResetTokenInvalidError = 'PASSWORD_RESET_TOKEN_INVALID_ERROR',\n  PasswordValidationError = 'PASSWORD_VALIDATION_ERROR',\n  PaymentDeclinedError = 'PAYMENT_DECLINED_ERROR',\n  PaymentFailedError = 'PAYMENT_FAILED_ERROR',\n  UnknownError = 'UNKNOWN_ERROR',\n  VerificationTokenExpiredError = 'VERIFICATION_TOKEN_EXPIRED_ERROR',\n  VerificationTokenInvalidError = 'VERIFICATION_TOKEN_INVALID_ERROR'\n}\n\nexport type ErrorResult = {\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<FacetTranslation>;\n  updatedAt: Scalars['DateTime'];\n  values: Array<FacetValue>;\n};\n\nexport type FacetFilterParameter = {\n  code?: InputMaybe<StringOperators>;\n  createdAt?: InputMaybe<DateOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<FacetFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<FacetSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type FacetSortParameter = {\n  code?: InputMaybe<SortOrder>;\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  facet: Facet;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\n/**\n * Used to construct boolean expressions for filtering search results\n * by FacetValue ID. Examples:\n *\n * * ID=1 OR ID=2: `{ facetValueFilters: [{ or: [1,2] }] }`\n * * ID=1 AND ID=2: `{ facetValueFilters: [{ and: 1 }, { and: 2 }] }`\n * * ID=1 AND (ID=2 OR ID=3): `{ facetValueFilters: [{ and: 1 }, { or: [2,3] }] }`\n */\nexport type FacetValueFilterInput = {\n  and?: InputMaybe<Scalars['ID']>;\n  or?: InputMaybe<Array<Scalars['ID']>>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  count: Scalars['Int'];\n  facetValue: FacetValue;\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['Float']>;\n  min?: Maybe<Scalars['Float']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  step?: Maybe<Scalars['Float']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  method: Scalars['String'];\n  orderItems: Array<OrderItem>;\n  state: Scalars['String'];\n  summary: Array<FulfillmentLineSummary>;\n  trackingCode?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FulfillmentLineSummary = {\n  __typename?: 'FulfillmentLineSummary';\n  orderLine: OrderLine;\n  quantity: Scalars['Int'];\n};\n\nexport enum GlobalFlag {\n  False = 'FALSE',\n  Inherit = 'INHERIT',\n  True = 'TRUE'\n}\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  createdAt: Scalars['DateTime'];\n  data: Scalars['JSON'];\n  id: Scalars['ID'];\n  type: HistoryEntryType;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type HistoryEntryFilterParameter = {\n  createdAt?: InputMaybe<DateOperators>;\n  id?: InputMaybe<IdOperators>;\n  type?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type HistoryEntryListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<HistoryEntryFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<HistoryEntrySortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type HistoryEntrySortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport enum HistoryEntryType {\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote = 'CUSTOMER_NOTE',\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerVerified = 'CUSTOMER_VERIFIED',\n  OrderCancellation = 'ORDER_CANCELLATION',\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED',\n  OrderFulfillment = 'ORDER_FULFILLMENT',\n  OrderFulfillmentTransition = 'ORDER_FULFILLMENT_TRANSITION',\n  OrderModified = 'ORDER_MODIFIED',\n  OrderNote = 'ORDER_NOTE',\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\n  OrderStateTransition = 'ORDER_STATE_TRANSITION'\n}\n\n/** Operators for filtering on a list of ID fields */\nexport type IdListOperators = {\n  inList: Scalars['ID'];\n};\n\n/** Operators for filtering on an ID field */\nexport type IdOperators = {\n  eq?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<Scalars['String']>>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  notEq?: InputMaybe<Scalars['String']>;\n  notIn?: InputMaybe<Array<Scalars['String']>>;\n};\n\n/**\n * Returned if the token used to change a Customer's email address is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type IdentifierChangeTokenExpiredError = ErrorResult & {\n  __typename?: 'IdentifierChangeTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to change a Customer's email address is either\n * invalid or does not match any expected tokens.\n */\nexport type IdentifierChangeTokenInvalidError = ErrorResult & {\n  __typename?: 'IdentifierChangeTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add a Payment using a PaymentMethod for which the Order is not eligible. */\nexport type IneligiblePaymentMethodError = ErrorResult & {\n  __typename?: 'IneligiblePaymentMethodError';\n  eligibilityCheckerMessage?: Maybe<Scalars['String']>;\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to set a ShippingMethod for which the Order is not eligible */\nexport type IneligibleShippingMethodError = ErrorResult & {\n  __typename?: 'IneligibleShippingMethodError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add more items to the Order than are available */\nexport type InsufficientStockError = ErrorResult & {\n  __typename?: 'InsufficientStockError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  order: Order;\n  quantityAvailable: Scalars['Int'];\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  step?: Maybe<Scalars['Int']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\n/** Returned if the user authentication credentials are not valid */\nexport type InvalidCredentialsError = ErrorResult & {\n  __typename?: 'InvalidCredentialsError';\n  authenticationError: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  Af = 'af',\n  /** Akan */\n  Ak = 'ak',\n  /** Amharic */\n  Am = 'am',\n  /** Arabic */\n  Ar = 'ar',\n  /** Assamese */\n  As = 'as',\n  /** Azerbaijani */\n  Az = 'az',\n  /** Belarusian */\n  Be = 'be',\n  /** Bulgarian */\n  Bg = 'bg',\n  /** Bambara */\n  Bm = 'bm',\n  /** Bangla */\n  Bn = 'bn',\n  /** Tibetan */\n  Bo = 'bo',\n  /** Breton */\n  Br = 'br',\n  /** Bosnian */\n  Bs = 'bs',\n  /** Catalan */\n  Ca = 'ca',\n  /** Chechen */\n  Ce = 'ce',\n  /** Corsican */\n  Co = 'co',\n  /** Czech */\n  Cs = 'cs',\n  /** Church Slavic */\n  Cu = 'cu',\n  /** Welsh */\n  Cy = 'cy',\n  /** Danish */\n  Da = 'da',\n  /** German */\n  De = 'de',\n  /** Austrian German */\n  DeAt = 'de_AT',\n  /** Swiss High German */\n  DeCh = 'de_CH',\n  /** Dzongkha */\n  Dz = 'dz',\n  /** Ewe */\n  Ee = 'ee',\n  /** Greek */\n  El = 'el',\n  /** English */\n  En = 'en',\n  /** Australian English */\n  EnAu = 'en_AU',\n  /** Canadian English */\n  EnCa = 'en_CA',\n  /** British English */\n  EnGb = 'en_GB',\n  /** American English */\n  EnUs = 'en_US',\n  /** Esperanto */\n  Eo = 'eo',\n  /** Spanish */\n  Es = 'es',\n  /** European Spanish */\n  EsEs = 'es_ES',\n  /** Mexican Spanish */\n  EsMx = 'es_MX',\n  /** Estonian */\n  Et = 'et',\n  /** Basque */\n  Eu = 'eu',\n  /** Persian */\n  Fa = 'fa',\n  /** Dari */\n  FaAf = 'fa_AF',\n  /** Fulah */\n  Ff = 'ff',\n  /** Finnish */\n  Fi = 'fi',\n  /** Faroese */\n  Fo = 'fo',\n  /** French */\n  Fr = 'fr',\n  /** Canadian French */\n  FrCa = 'fr_CA',\n  /** Swiss French */\n  FrCh = 'fr_CH',\n  /** Western Frisian */\n  Fy = 'fy',\n  /** Irish */\n  Ga = 'ga',\n  /** Scottish Gaelic */\n  Gd = 'gd',\n  /** Galician */\n  Gl = 'gl',\n  /** Gujarati */\n  Gu = 'gu',\n  /** Manx */\n  Gv = 'gv',\n  /** Hausa */\n  Ha = 'ha',\n  /** Hebrew */\n  He = 'he',\n  /** Hindi */\n  Hi = 'hi',\n  /** Croatian */\n  Hr = 'hr',\n  /** Haitian Creole */\n  Ht = 'ht',\n  /** Hungarian */\n  Hu = 'hu',\n  /** Armenian */\n  Hy = 'hy',\n  /** Interlingua */\n  Ia = 'ia',\n  /** Indonesian */\n  Id = 'id',\n  /** Igbo */\n  Ig = 'ig',\n  /** Sichuan Yi */\n  Ii = 'ii',\n  /** Icelandic */\n  Is = 'is',\n  /** Italian */\n  It = 'it',\n  /** Japanese */\n  Ja = 'ja',\n  /** Javanese */\n  Jv = 'jv',\n  /** Georgian */\n  Ka = 'ka',\n  /** Kikuyu */\n  Ki = 'ki',\n  /** Kazakh */\n  Kk = 'kk',\n  /** Kalaallisut */\n  Kl = 'kl',\n  /** Khmer */\n  Km = 'km',\n  /** Kannada */\n  Kn = 'kn',\n  /** Korean */\n  Ko = 'ko',\n  /** Kashmiri */\n  Ks = 'ks',\n  /** Kurdish */\n  Ku = 'ku',\n  /** Cornish */\n  Kw = 'kw',\n  /** Kyrgyz */\n  Ky = 'ky',\n  /** Latin */\n  La = 'la',\n  /** Luxembourgish */\n  Lb = 'lb',\n  /** Ganda */\n  Lg = 'lg',\n  /** Lingala */\n  Ln = 'ln',\n  /** Lao */\n  Lo = 'lo',\n  /** Lithuanian */\n  Lt = 'lt',\n  /** Luba-Katanga */\n  Lu = 'lu',\n  /** Latvian */\n  Lv = 'lv',\n  /** Malagasy */\n  Mg = 'mg',\n  /** Maori */\n  Mi = 'mi',\n  /** Macedonian */\n  Mk = 'mk',\n  /** Malayalam */\n  Ml = 'ml',\n  /** Mongolian */\n  Mn = 'mn',\n  /** Marathi */\n  Mr = 'mr',\n  /** Malay */\n  Ms = 'ms',\n  /** Maltese */\n  Mt = 'mt',\n  /** Burmese */\n  My = 'my',\n  /** Norwegian Bokm\u00E5l */\n  Nb = 'nb',\n  /** North Ndebele */\n  Nd = 'nd',\n  /** Nepali */\n  Ne = 'ne',\n  /** Dutch */\n  Nl = 'nl',\n  /** Flemish */\n  NlBe = 'nl_BE',\n  /** Norwegian Nynorsk */\n  Nn = 'nn',\n  /** Nyanja */\n  Ny = 'ny',\n  /** Oromo */\n  Om = 'om',\n  /** Odia */\n  Or = 'or',\n  /** Ossetic */\n  Os = 'os',\n  /** Punjabi */\n  Pa = 'pa',\n  /** Polish */\n  Pl = 'pl',\n  /** Pashto */\n  Ps = 'ps',\n  /** Portuguese */\n  Pt = 'pt',\n  /** Brazilian Portuguese */\n  PtBr = 'pt_BR',\n  /** European Portuguese */\n  PtPt = 'pt_PT',\n  /** Quechua */\n  Qu = 'qu',\n  /** Romansh */\n  Rm = 'rm',\n  /** Rundi */\n  Rn = 'rn',\n  /** Romanian */\n  Ro = 'ro',\n  /** Moldavian */\n  RoMd = 'ro_MD',\n  /** Russian */\n  Ru = 'ru',\n  /** Kinyarwanda */\n  Rw = 'rw',\n  /** Sanskrit */\n  Sa = 'sa',\n  /** Sindhi */\n  Sd = 'sd',\n  /** Northern Sami */\n  Se = 'se',\n  /** Sango */\n  Sg = 'sg',\n  /** Sinhala */\n  Si = 'si',\n  /** Slovak */\n  Sk = 'sk',\n  /** Slovenian */\n  Sl = 'sl',\n  /** Samoan */\n  Sm = 'sm',\n  /** Shona */\n  Sn = 'sn',\n  /** Somali */\n  So = 'so',\n  /** Albanian */\n  Sq = 'sq',\n  /** Serbian */\n  Sr = 'sr',\n  /** Southern Sotho */\n  St = 'st',\n  /** Sundanese */\n  Su = 'su',\n  /** Swedish */\n  Sv = 'sv',\n  /** Swahili */\n  Sw = 'sw',\n  /** Congo Swahili */\n  SwCd = 'sw_CD',\n  /** Tamil */\n  Ta = 'ta',\n  /** Telugu */\n  Te = 'te',\n  /** Tajik */\n  Tg = 'tg',\n  /** Thai */\n  Th = 'th',\n  /** Tigrinya */\n  Ti = 'ti',\n  /** Turkmen */\n  Tk = 'tk',\n  /** Tongan */\n  To = 'to',\n  /** Turkish */\n  Tr = 'tr',\n  /** Tatar */\n  Tt = 'tt',\n  /** Uyghur */\n  Ug = 'ug',\n  /** Ukrainian */\n  Uk = 'uk',\n  /** Urdu */\n  Ur = 'ur',\n  /** Uzbek */\n  Uz = 'uz',\n  /** Vietnamese */\n  Vi = 'vi',\n  /** Volap\u00FCk */\n  Vo = 'vo',\n  /** Wolof */\n  Wo = 'wo',\n  /** Xhosa */\n  Xh = 'xh',\n  /** Yiddish */\n  Yi = 'yi',\n  /** Yoruba */\n  Yo = 'yo',\n  /** Chinese */\n  Zh = 'zh',\n  /** Simplified Chinese */\n  ZhHans = 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant = 'zh_Hant',\n  /** Zulu */\n  Zu = 'zu'\n}\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  length?: Maybe<Scalars['Int']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport enum LogicalOperator {\n  And = 'AND',\n  Or = 'OR'\n}\n\n/** Returned when attempting to register or verify a customer account without a password, when one is required. */\nexport type MissingPasswordError = ErrorResult & {\n  __typename?: 'MissingPasswordError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Adds an item to the order. If custom fields are defined on the OrderLine entity, a third argument 'customFields' will be available. */\n  addItemToOrder: UpdateOrderItemsResult;\n  /** Add a Payment to the Order */\n  addPaymentToOrder: AddPaymentToOrderResult;\n  /** Adjusts an OrderLine. If custom fields are defined on the OrderLine entity, a third argument 'customFields' of type `OrderLineCustomFieldsInput` will be available. */\n  adjustOrderLine: UpdateOrderItemsResult;\n  /** Applies the given coupon code to the active Order */\n  applyCouponCode: ApplyCouponCodeResult;\n  /** Authenticates the user using a named authentication strategy */\n  authenticate: AuthenticationResult;\n  /** Create a new Customer Address */\n  createCustomerAddress: Address;\n  createStripePaymentIntent?: Maybe<Scalars['String']>;\n  /** Delete an existing Address */\n  deleteCustomerAddress: Success;\n  /** Authenticates the user using the native authentication strategy. This mutation is an alias for `authenticate({ native: { ... }})` */\n  login: NativeAuthenticationResult;\n  /** End the current authenticated session */\n  logout: Success;\n  /** Regenerate and send a verification token for a new Customer registration. Only applicable if `authOptions.requireVerification` is set to true. */\n  refreshCustomerVerification: RefreshCustomerVerificationResult;\n  /**\n   * Register a Customer account with the given credentials. There are three possible registration flows:\n   *\n   * _If `authOptions.requireVerification` is set to `true`:_\n   *\n   * 1. **The Customer is registered _with_ a password**. A verificationToken will be created (and typically emailed to the Customer). That\n   *    verificationToken would then be passed to the `verifyCustomerAccount` mutation _without_ a password. The Customer is then\n   *    verified and authenticated in one step.\n   * 2. **The Customer is registered _without_ a password**. A verificationToken will be created (and typically emailed to the Customer). That\n   *    verificationToken would then be passed to the `verifyCustomerAccount` mutation _with_ the chosen password of the Customer. The Customer is then\n   *    verified and authenticated in one step.\n   *\n   * _If `authOptions.requireVerification` is set to `false`:_\n   *\n   * 3. The Customer _must_ be registered _with_ a password. No further action is needed - the Customer is able to authenticate immediately.\n   */\n  registerCustomerAccount: RegisterCustomerAccountResult;\n  /** Remove all OrderLine from the Order */\n  removeAllOrderLines: RemoveOrderItemsResult;\n  /** Removes the given coupon code from the active Order */\n  removeCouponCode?: Maybe<Order>;\n  /** Remove an OrderLine from the Order */\n  removeOrderLine: RemoveOrderItemsResult;\n  /** Requests a password reset email to be sent */\n  requestPasswordReset?: Maybe<RequestPasswordResetResult>;\n  /**\n   * Request to update the emailAddress of the active Customer. If `authOptions.requireVerification` is enabled\n   * (as is the default), then the `identifierChangeToken` will be assigned to the current User and\n   * a IdentifierChangeRequestEvent will be raised. This can then be used e.g. by the EmailPlugin to email\n   * that verification token to the Customer, which is then used to verify the change of email address.\n   */\n  requestUpdateCustomerEmailAddress: RequestUpdateCustomerEmailAddressResult;\n  /** Resets a Customer's password based on the provided token */\n  resetPassword: ResetPasswordResult;\n  /** Set the Customer for the Order. Required only if the Customer is not currently logged in */\n  setCustomerForOrder: SetCustomerForOrderResult;\n  /** Sets the billing address for this order */\n  setOrderBillingAddress: ActiveOrderResult;\n  /** Allows any custom fields to be set for the active order */\n  setOrderCustomFields: ActiveOrderResult;\n  /** Sets the shipping address for this order */\n  setOrderShippingAddress: ActiveOrderResult;\n  /** Sets the shipping method by id, which can be obtained with the `eligibleShippingMethods` query */\n  setOrderShippingMethod: SetOrderShippingMethodResult;\n  /** Transitions an Order to a new state. Valid next states can be found by querying `nextOrderStates` */\n  transitionOrderToState?: Maybe<TransitionOrderToStateResult>;\n  /** Update an existing Customer */\n  updateCustomer: Customer;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /**\n   * Confirm the update of the emailAddress with the provided token, which has been generated by the\n   * `requestUpdateCustomerEmailAddress` mutation.\n   */\n  updateCustomerEmailAddress: UpdateCustomerEmailAddressResult;\n  /** Update the password of the active Customer */\n  updateCustomerPassword: UpdateCustomerPasswordResult;\n  /**\n   * Verify a Customer email address with the token sent to that address. Only applicable if `authOptions.requireVerification` is set to true.\n   *\n   * If the Customer was not registered with a password in the `registerCustomerAccount` mutation, the password _must_ be\n   * provided here.\n   */\n  verifyCustomerAccount: VerifyCustomerAccountResult;\n};\n\n\nexport type MutationAddItemToOrderArgs = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\n\nexport type MutationAddPaymentToOrderArgs = {\n  input: PaymentInput;\n};\n\n\nexport type MutationAdjustOrderLineArgs = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\n\nexport type MutationApplyCouponCodeArgs = {\n  couponCode: Scalars['String'];\n};\n\n\nexport type MutationAuthenticateArgs = {\n  input: AuthenticationInput;\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n  username: Scalars['String'];\n};\n\n\nexport type MutationRefreshCustomerVerificationArgs = {\n  emailAddress: Scalars['String'];\n};\n\n\nexport type MutationRegisterCustomerAccountArgs = {\n  input: RegisterCustomerInput;\n};\n\n\nexport type MutationRemoveCouponCodeArgs = {\n  couponCode: Scalars['String'];\n};\n\n\nexport type MutationRemoveOrderLineArgs = {\n  orderLineId: Scalars['ID'];\n};\n\n\nexport type MutationRequestPasswordResetArgs = {\n  emailAddress: Scalars['String'];\n};\n\n\nexport type MutationRequestUpdateCustomerEmailAddressArgs = {\n  newEmailAddress: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationSetCustomerForOrderArgs = {\n  input: CreateCustomerInput;\n};\n\n\nexport type MutationSetOrderBillingAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationSetOrderCustomFieldsArgs = {\n  input: UpdateOrderInput;\n};\n\n\nexport type MutationSetOrderShippingAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationSetOrderShippingMethodArgs = {\n  shippingMethodId: Scalars['ID'];\n};\n\n\nexport type MutationTransitionOrderToStateArgs = {\n  state: Scalars['String'];\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerEmailAddressArgs = {\n  token: Scalars['String'];\n};\n\n\nexport type MutationUpdateCustomerPasswordArgs = {\n  currentPassword: Scalars['String'];\n  newPassword: Scalars['String'];\n};\n\n\nexport type MutationVerifyCustomerAccountArgs = {\n  password?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\nexport type NativeAuthInput = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n/** Returned when attempting an operation that relies on the NativeAuthStrategy, if that strategy is not configured. */\nexport type NativeAuthStrategyError = ErrorResult & {\n  __typename?: 'NativeAuthStrategyError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type NativeAuthenticationResult = CurrentUser | InvalidCredentialsError | NativeAuthStrategyError | NotVerifiedError;\n\n/** Returned when attempting to set a negative OrderLine quantity. */\nexport type NegativeQuantityError = ErrorResult & {\n  __typename?: 'NegativeQuantityError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned when invoking a mutation which depends on there being an active Order on the\n * current session.\n */\nexport type NoActiveOrderError = ErrorResult & {\n  __typename?: 'NoActiveOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\n/**\n * Returned if `authOptions.requireVerification` is set to `true` (which is the default)\n * and an unverified user attempts to authenticate.\n */\nexport type NotVerifiedError = ErrorResult & {\n  __typename?: 'NotVerifiedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Operators for filtering on a list of Number fields */\nexport type NumberListOperators = {\n  inList: Scalars['Float'];\n};\n\n/** Operators for filtering on a Int or Float field */\nexport type NumberOperators = {\n  between?: InputMaybe<NumberRange>;\n  eq?: InputMaybe<Scalars['Float']>;\n  gt?: InputMaybe<Scalars['Float']>;\n  gte?: InputMaybe<Scalars['Float']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  lt?: InputMaybe<Scalars['Float']>;\n  lte?: InputMaybe<Scalars['Float']>;\n};\n\nexport type NumberRange = {\n  end: Scalars['Float'];\n  start: Scalars['Float'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  billingAddress?: Maybe<OrderAddress>;\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  /** An array of all coupon codes applied to the Order */\n  couponCodes: Array<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  customer?: Maybe<Customer>;\n  discounts: Array<Discount>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  lines: Array<OrderLine>;\n  /**\n   * The date & time that the Order was placed, i.e. the Customer\n   * completed the checkout and the Order is no longer \"active\"\n   */\n  orderPlacedAt?: Maybe<Scalars['DateTime']>;\n  payments?: Maybe<Array<Payment>>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  shipping: Scalars['Int'];\n  shippingAddress?: Maybe<OrderAddress>;\n  shippingLines: Array<ShippingLine>;\n  shippingWithTax: Scalars['Int'];\n  state: Scalars['String'];\n  /**\n   * The subTotal is the total of all OrderLines in the Order. This figure also includes any Order-level\n   * discounts which have been prorated (proportionally distributed) amongst the OrderItems.\n   * To get a total of all OrderLines which does not account for prorated discounts, use the\n   * sum of `OrderLine.discountedLinePrice` values.\n   */\n  subTotal: Scalars['Int'];\n  /** Same as subTotal, but inclusive of tax */\n  subTotalWithTax: Scalars['Int'];\n  /**\n   * Surcharges are arbitrary modifications to the Order total which are neither\n   * ProductVariants nor discounts resulting from applied Promotions. For example,\n   * one-off discounts based on customer interaction, or surcharges based on payment\n   * methods.\n   */\n  surcharges: Array<Surcharge>;\n  /** A summary of the taxes being applied to this Order */\n  taxSummary: Array<OrderTaxSummary>;\n  /** Equal to subTotal plus shipping */\n  total: Scalars['Int'];\n  totalQuantity: Scalars['Int'];\n  /** The final payable amount. Equal to subTotalWithTax plus shippingWithTax */\n  totalWithTax: Scalars['Int'];\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: InputMaybe<HistoryEntryListOptions>;\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  city?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  fullName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n};\n\nexport type OrderFilterParameter = {\n  active?: InputMaybe<BooleanOperators>;\n  code?: InputMaybe<StringOperators>;\n  createdAt?: InputMaybe<DateOperators>;\n  currencyCode?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  orderPlacedAt?: InputMaybe<DateOperators>;\n  shipping?: InputMaybe<NumberOperators>;\n  shippingWithTax?: InputMaybe<NumberOperators>;\n  state?: InputMaybe<StringOperators>;\n  subTotal?: InputMaybe<NumberOperators>;\n  subTotalWithTax?: InputMaybe<NumberOperators>;\n  total?: InputMaybe<NumberOperators>;\n  totalQuantity?: InputMaybe<NumberOperators>;\n  totalWithTax?: InputMaybe<NumberOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type OrderItem = Node & {\n  __typename?: 'OrderItem';\n  adjustments: Array<Adjustment>;\n  cancelled: Scalars['Boolean'];\n  createdAt: Scalars['DateTime'];\n  /**\n   * The price of a single unit including discounts, excluding tax.\n   *\n   * If Order-level discounts have been applied, this will not be the\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\n   * correct price to display to customers to avoid confusion\n   * about the internal handling of distributed Order-level discounts.\n   */\n  discountedUnitPrice: Scalars['Int'];\n  /** The price of a single unit including discounts and tax */\n  discountedUnitPriceWithTax: Scalars['Int'];\n  fulfillment?: Maybe<Fulfillment>;\n  id: Scalars['ID'];\n  /**\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportionally-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\n   * and refund calculations.\n   */\n  proratedUnitPrice: Scalars['Int'];\n  /** The proratedUnitPrice including tax */\n  proratedUnitPriceWithTax: Scalars['Int'];\n  refundId?: Maybe<Scalars['ID']>;\n  taxLines: Array<TaxLine>;\n  taxRate: Scalars['Float'];\n  /** The price of a single unit, excluding tax and discounts */\n  unitPrice: Scalars['Int'];\n  /** The price of a single unit, including tax but excluding discounts */\n  unitPriceWithTax: Scalars['Int'];\n  unitTax: Scalars['Int'];\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Returned when the maximum order size limit has been reached. */\nexport type OrderLimitError = ErrorResult & {\n  __typename?: 'OrderLimitError';\n  errorCode: ErrorCode;\n  maxItems: Scalars['Int'];\n  message: Scalars['String'];\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  /** The price of the line including discounts, excluding tax */\n  discountedLinePrice: Scalars['Int'];\n  /** The price of the line including discounts and tax */\n  discountedLinePriceWithTax: Scalars['Int'];\n  /**\n   * The price of a single unit including discounts, excluding tax.\n   *\n   * If Order-level discounts have been applied, this will not be the\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\n   * correct price to display to customers to avoid confusion\n   * about the internal handling of distributed Order-level discounts.\n   */\n  discountedUnitPrice: Scalars['Int'];\n  /** The price of a single unit including discounts and tax */\n  discountedUnitPriceWithTax: Scalars['Int'];\n  discounts: Array<Discount>;\n  featuredAsset?: Maybe<Asset>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  id: Scalars['ID'];\n  items: Array<OrderItem>;\n  /** The total price of the line excluding tax and discounts. */\n  linePrice: Scalars['Int'];\n  /** The total price of the line including tax but excluding discounts. */\n  linePriceWithTax: Scalars['Int'];\n  /** The total tax on this line */\n  lineTax: Scalars['Int'];\n  order: Order;\n  productVariant: ProductVariant;\n  /**\n   * The actual line price, taking into account both item discounts _and_ prorated (proportionally-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderLine, and is used in tax\n   * and refund calculations.\n   */\n  proratedLinePrice: Scalars['Int'];\n  /** The proratedLinePrice including tax */\n  proratedLinePriceWithTax: Scalars['Int'];\n  /**\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportionally-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\n   * and refund calculations.\n   */\n  proratedUnitPrice: Scalars['Int'];\n  /** The proratedUnitPrice including tax */\n  proratedUnitPriceWithTax: Scalars['Int'];\n  quantity: Scalars['Int'];\n  taxLines: Array<TaxLine>;\n  taxRate: Scalars['Float'];\n  /** The price of a single unit, excluding tax and discounts */\n  unitPrice: Scalars['Int'];\n  /** Non-zero if the unitPrice has changed since it was initially added to Order */\n  unitPriceChangeSinceAdded: Scalars['Int'];\n  /** The price of a single unit, including tax but excluding discounts */\n  unitPriceWithTax: Scalars['Int'];\n  /** Non-zero if the unitPriceWithTax has changed since it was initially added to Order */\n  unitPriceWithTaxChangeSinceAdded: Scalars['Int'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type OrderListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<OrderFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<OrderSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\n/** Returned when attempting to modify the contents of an Order that is not in the `AddingItems` state. */\nexport type OrderModificationError = ErrorResult & {\n  __typename?: 'OrderModificationError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add a Payment to an Order that is not in the `ArrangingPayment` state. */\nexport type OrderPaymentStateError = ErrorResult & {\n  __typename?: 'OrderPaymentStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type OrderSortParameter = {\n  code?: InputMaybe<SortOrder>;\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  orderPlacedAt?: InputMaybe<SortOrder>;\n  shipping?: InputMaybe<SortOrder>;\n  shippingWithTax?: InputMaybe<SortOrder>;\n  state?: InputMaybe<SortOrder>;\n  subTotal?: InputMaybe<SortOrder>;\n  subTotalWithTax?: InputMaybe<SortOrder>;\n  total?: InputMaybe<SortOrder>;\n  totalQuantity?: InputMaybe<SortOrder>;\n  totalWithTax?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\n/** Returned if there is an error in transitioning the Order state */\nexport type OrderStateTransitionError = ErrorResult & {\n  __typename?: 'OrderStateTransitionError';\n  errorCode: ErrorCode;\n  fromState: Scalars['String'];\n  message: Scalars['String'];\n  toState: Scalars['String'];\n  transitionError: Scalars['String'];\n};\n\n/**\n * A summary of the taxes being applied to this order, grouped\n * by taxRate.\n */\nexport type OrderTaxSummary = {\n  __typename?: 'OrderTaxSummary';\n  /** A description of this tax */\n  description: Scalars['String'];\n  /** The total net price or OrderItems to which this taxRate applies */\n  taxBase: Scalars['Int'];\n  /** The taxRate as a percentage */\n  taxRate: Scalars['Float'];\n  /** The total tax being applied to the Order at this taxRate */\n  taxTotal: Scalars['Int'];\n};\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\n/** Returned when attempting to verify a customer account with a password, when a password has already been set. */\nexport type PasswordAlreadySetError = ErrorResult & {\n  __typename?: 'PasswordAlreadySetError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to reset a Customer's password is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type PasswordResetTokenExpiredError = ErrorResult & {\n  __typename?: 'PasswordResetTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to reset a Customer's password is either\n * invalid or does not match any expected tokens.\n */\nexport type PasswordResetTokenInvalidError = ErrorResult & {\n  __typename?: 'PasswordResetTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to register or verify a customer account where the given password fails password validation. */\nexport type PasswordValidationError = ErrorResult & {\n  __typename?: 'PasswordValidationError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  validationErrorMessage: Scalars['String'];\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  amount: Scalars['Int'];\n  createdAt: Scalars['DateTime'];\n  errorMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n  method: Scalars['String'];\n  refunds: Array<Refund>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Returned when a Payment is declined by the payment provider. */\nexport type PaymentDeclinedError = ErrorResult & {\n  __typename?: 'PaymentDeclinedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Returned when a Payment fails due to an error. */\nexport type PaymentFailedError = ErrorResult & {\n  __typename?: 'PaymentFailedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Passed as input to the `addPaymentToOrder` mutation. */\nexport type PaymentInput = {\n  /**\n   * This field should contain arbitrary data passed to the specified PaymentMethodHandler's `createPayment()` method\n   * as the \"metadata\" argument. For example, it could contain an ID for the payment and other\n   * data generated by the payment provider.\n   */\n  metadata: Scalars['JSON'];\n  /** This field should correspond to the `code` property of a PaymentMethod. */\n  method: Scalars['String'];\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  checker?: Maybe<ConfigurableOperation>;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  handler: ConfigurableOperation;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type PaymentMethodQuote = {\n  __typename?: 'PaymentMethodQuote';\n  code: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  eligibilityMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  isEligible: Scalars['Boolean'];\n  name: Scalars['String'];\n};\n\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * ## Understanding Permission.Owner\n *\n * `Permission.Owner` is a special permission which is used in some Vendure resolvers to indicate that that resolver should only\n * be accessible to the \"owner\" of that resource.\n *\n * For example, the Shop API `activeCustomer` query resolver should only return the Customer object for the \"owner\" of that Customer, i.e.\n * based on the activeUserId of the current session. As a result, the resolver code looks like this:\n *\n * @example\n * ```TypeScript\n * \\@Query()\n * \\@Allow(Permission.Owner)\n * async activeCustomer(\\@Ctx() ctx: RequestContext): Promise<Customer | undefined> {\n *   const userId = ctx.activeUserId;\n *   if (userId) {\n *     return this.customerService.findOneByUserId(ctx, userId);\n *   }\n * }\n * ```\n *\n * Here we can see that the \"ownership\" must be enforced by custom logic inside the resolver. Since \"ownership\" cannot be defined generally\n * nor statically encoded at build-time, any resolvers using `Permission.Owner` **must** include logic to enforce that only the owner\n * of the resource has access. If not, then it is the equivalent of using `Permission.Public`.\n *\n *\n * @docsCategory common\n */\nexport enum Permission {\n  /** Authenticated means simply that the user is logged in */\n  Authenticated = 'Authenticated',\n  /** Grants permission to create Administrator */\n  CreateAdministrator = 'CreateAdministrator',\n  /** Grants permission to create Asset */\n  CreateAsset = 'CreateAsset',\n  /** Grants permission to create Products, Facets, Assets, Collections */\n  CreateCatalog = 'CreateCatalog',\n  /** Grants permission to create Channel */\n  CreateChannel = 'CreateChannel',\n  /** Grants permission to create Collection */\n  CreateCollection = 'CreateCollection',\n  /** Grants permission to create Country */\n  CreateCountry = 'CreateCountry',\n  /** Grants permission to create Customer */\n  CreateCustomer = 'CreateCustomer',\n  /** Grants permission to create CustomerGroup */\n  CreateCustomerGroup = 'CreateCustomerGroup',\n  /** Grants permission to create Facet */\n  CreateFacet = 'CreateFacet',\n  /** Grants permission to create Order */\n  CreateOrder = 'CreateOrder',\n  /** Grants permission to create PaymentMethod */\n  CreatePaymentMethod = 'CreatePaymentMethod',\n  /** Grants permission to create Product */\n  CreateProduct = 'CreateProduct',\n  /** Grants permission to create Promotion */\n  CreatePromotion = 'CreatePromotion',\n  /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  CreateSettings = 'CreateSettings',\n  /** Grants permission to create ShippingMethod */\n  CreateShippingMethod = 'CreateShippingMethod',\n  /** Grants permission to create System */\n  CreateSystem = 'CreateSystem',\n  /** Grants permission to create Tag */\n  CreateTag = 'CreateTag',\n  /** Grants permission to create TaxCategory */\n  CreateTaxCategory = 'CreateTaxCategory',\n  /** Grants permission to create TaxRate */\n  CreateTaxRate = 'CreateTaxRate',\n  /** Grants permission to create Zone */\n  CreateZone = 'CreateZone',\n  /** Grants permission to delete Administrator */\n  DeleteAdministrator = 'DeleteAdministrator',\n  /** Grants permission to delete Asset */\n  DeleteAsset = 'DeleteAsset',\n  /** Grants permission to delete Products, Facets, Assets, Collections */\n  DeleteCatalog = 'DeleteCatalog',\n  /** Grants permission to delete Channel */\n  DeleteChannel = 'DeleteChannel',\n  /** Grants permission to delete Collection */\n  DeleteCollection = 'DeleteCollection',\n  /** Grants permission to delete Country */\n  DeleteCountry = 'DeleteCountry',\n  /** Grants permission to delete Customer */\n  DeleteCustomer = 'DeleteCustomer',\n  /** Grants permission to delete CustomerGroup */\n  DeleteCustomerGroup = 'DeleteCustomerGroup',\n  /** Grants permission to delete Facet */\n  DeleteFacet = 'DeleteFacet',\n  /** Grants permission to delete Order */\n  DeleteOrder = 'DeleteOrder',\n  /** Grants permission to delete PaymentMethod */\n  DeletePaymentMethod = 'DeletePaymentMethod',\n  /** Grants permission to delete Product */\n  DeleteProduct = 'DeleteProduct',\n  /** Grants permission to delete Promotion */\n  DeletePromotion = 'DeletePromotion',\n  /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  DeleteSettings = 'DeleteSettings',\n  /** Grants permission to delete ShippingMethod */\n  DeleteShippingMethod = 'DeleteShippingMethod',\n  /** Grants permission to delete System */\n  DeleteSystem = 'DeleteSystem',\n  /** Grants permission to delete Tag */\n  DeleteTag = 'DeleteTag',\n  /** Grants permission to delete TaxCategory */\n  DeleteTaxCategory = 'DeleteTaxCategory',\n  /** Grants permission to delete TaxRate */\n  DeleteTaxRate = 'DeleteTaxRate',\n  /** Grants permission to delete Zone */\n  DeleteZone = 'DeleteZone',\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  /** Public means any unauthenticated user may perform the operation */\n  Public = 'Public',\n  /** Grants permission to read Administrator */\n  ReadAdministrator = 'ReadAdministrator',\n  /** Grants permission to read Asset */\n  ReadAsset = 'ReadAsset',\n  /** Grants permission to read Products, Facets, Assets, Collections */\n  ReadCatalog = 'ReadCatalog',\n  /** Grants permission to read Channel */\n  ReadChannel = 'ReadChannel',\n  /** Grants permission to read Collection */\n  ReadCollection = 'ReadCollection',\n  /** Grants permission to read Country */\n  ReadCountry = 'ReadCountry',\n  /** Grants permission to read Customer */\n  ReadCustomer = 'ReadCustomer',\n  /** Grants permission to read CustomerGroup */\n  ReadCustomerGroup = 'ReadCustomerGroup',\n  /** Grants permission to read Facet */\n  ReadFacet = 'ReadFacet',\n  /** Grants permission to read Order */\n  ReadOrder = 'ReadOrder',\n  /** Grants permission to read PaymentMethod */\n  ReadPaymentMethod = 'ReadPaymentMethod',\n  /** Grants permission to read Product */\n  ReadProduct = 'ReadProduct',\n  /** Grants permission to read Promotion */\n  ReadPromotion = 'ReadPromotion',\n  /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  ReadSettings = 'ReadSettings',\n  /** Grants permission to read ShippingMethod */\n  ReadShippingMethod = 'ReadShippingMethod',\n  /** Grants permission to read System */\n  ReadSystem = 'ReadSystem',\n  /** Grants permission to read Tag */\n  ReadTag = 'ReadTag',\n  /** Grants permission to read TaxCategory */\n  ReadTaxCategory = 'ReadTaxCategory',\n  /** Grants permission to read TaxRate */\n  ReadTaxRate = 'ReadTaxRate',\n  /** Grants permission to read Zone */\n  ReadZone = 'ReadZone',\n  /** SuperAdmin has unrestricted access to all operations */\n  SuperAdmin = 'SuperAdmin',\n  /** Grants permission to update Administrator */\n  UpdateAdministrator = 'UpdateAdministrator',\n  /** Grants permission to update Asset */\n  UpdateAsset = 'UpdateAsset',\n  /** Grants permission to update Products, Facets, Assets, Collections */\n  UpdateCatalog = 'UpdateCatalog',\n  /** Grants permission to update Channel */\n  UpdateChannel = 'UpdateChannel',\n  /** Grants permission to update Collection */\n  UpdateCollection = 'UpdateCollection',\n  /** Grants permission to update Country */\n  UpdateCountry = 'UpdateCountry',\n  /** Grants permission to update Customer */\n  UpdateCustomer = 'UpdateCustomer',\n  /** Grants permission to update CustomerGroup */\n  UpdateCustomerGroup = 'UpdateCustomerGroup',\n  /** Grants permission to update Facet */\n  UpdateFacet = 'UpdateFacet',\n  /** Grants permission to update GlobalSettings */\n  UpdateGlobalSettings = 'UpdateGlobalSettings',\n  /** Grants permission to update Order */\n  UpdateOrder = 'UpdateOrder',\n  /** Grants permission to update PaymentMethod */\n  UpdatePaymentMethod = 'UpdatePaymentMethod',\n  /** Grants permission to update Product */\n  UpdateProduct = 'UpdateProduct',\n  /** Grants permission to update Promotion */\n  UpdatePromotion = 'UpdatePromotion',\n  /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  UpdateSettings = 'UpdateSettings',\n  /** Grants permission to update ShippingMethod */\n  UpdateShippingMethod = 'UpdateShippingMethod',\n  /** Grants permission to update System */\n  UpdateSystem = 'UpdateSystem',\n  /** Grants permission to update Tag */\n  UpdateTag = 'UpdateTag',\n  /** Grants permission to update TaxCategory */\n  UpdateTaxCategory = 'UpdateTaxCategory',\n  /** Grants permission to update TaxRate */\n  UpdateTaxRate = 'UpdateTaxRate',\n  /** Grants permission to update Zone */\n  UpdateZone = 'UpdateZone'\n}\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  max: Scalars['Int'];\n  min: Scalars['Int'];\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  assets: Array<Asset>;\n  collections: Array<Collection>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  facetValues: Array<FacetValue>;\n  featuredAsset?: Maybe<Asset>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  optionGroups: Array<ProductOptionGroup>;\n  slug: Scalars['String'];\n  translations: Array<ProductTranslation>;\n  updatedAt: Scalars['DateTime'];\n  /** Returns a paginated, sortable, filterable list of ProductVariants */\n  variantList: ProductVariantList;\n  /** Returns all ProductVariants */\n  variants: Array<ProductVariant>;\n};\n\n\nexport type ProductVariantListArgs = {\n  options?: InputMaybe<ProductVariantListOptions>;\n};\n\nexport type ProductFilterParameter = {\n  createdAt?: InputMaybe<DateOperators>;\n  description?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  slug?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<ProductFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<ProductSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  group: ProductOptionGroup;\n  groupId: Scalars['ID'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<ProductOptionTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  description?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  slug?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  assets: Array<Asset>;\n  createdAt: Scalars['DateTime'];\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  facetValues: Array<FacetValue>;\n  featuredAsset?: Maybe<Asset>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  product: Product;\n  productId: Scalars['ID'];\n  sku: Scalars['String'];\n  stockLevel: Scalars['String'];\n  taxCategory: TaxCategory;\n  taxRateApplied: TaxRate;\n  translations: Array<ProductVariantTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductVariantFilterParameter = {\n  createdAt?: InputMaybe<DateOperators>;\n  currencyCode?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  price?: InputMaybe<NumberOperators>;\n  priceWithTax?: InputMaybe<NumberOperators>;\n  productId?: InputMaybe<IdOperators>;\n  sku?: InputMaybe<StringOperators>;\n  stockLevel?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<ProductVariantFilterParameter>;\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<ProductVariantSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type ProductVariantSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  price?: InputMaybe<SortOrder>;\n  priceWithTax?: InputMaybe<SortOrder>;\n  productId?: InputMaybe<SortOrder>;\n  sku?: InputMaybe<SortOrder>;\n  stockLevel?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  actions: Array<ConfigurableOperation>;\n  conditions: Array<ConfigurableOperation>;\n  couponCode?: Maybe<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  enabled: Scalars['Boolean'];\n  endsAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** The active Channel */\n  activeChannel: Channel;\n  /** The active Customer */\n  activeCustomer?: Maybe<Customer>;\n  /**\n   * The active Order. Will be `null` until an Order is created via `addItemToOrder`. Once an Order reaches the\n   * state of `PaymentAuthorized` or `PaymentSettled`, then that Order is no longer considered \"active\" and this\n   * query will once again return `null`.\n   */\n  activeOrder?: Maybe<Order>;\n  /** An array of supported Countries */\n  availableCountries: Array<Country>;\n  /** Returns a Collection either by its id or slug. If neither 'id' nor 'slug' is specified, an error will result. */\n  collection?: Maybe<Collection>;\n  /** A list of Collections available to the shop */\n  collections: CollectionList;\n  /** Returns a list of payment methods and their eligibility based on the current active Order */\n  eligiblePaymentMethods: Array<PaymentMethodQuote>;\n  /** Returns a list of eligible shipping methods based on the current active Order */\n  eligibleShippingMethods: Array<ShippingMethodQuote>;\n  /** Returns a Facet by its id */\n  facet?: Maybe<Facet>;\n  /** A list of Facets available to the shop */\n  facets: FacetList;\n  generateBraintreeClientToken?: Maybe<Scalars['String']>;\n  /** Returns information about the current authenticated User */\n  me?: Maybe<CurrentUser>;\n  /** Returns the possible next states that the activeOrder can transition to */\n  nextOrderStates: Array<Scalars['String']>;\n  /**\n   * Returns an Order based on the id. Note that in the Shop API, only orders belonging to the\n   * currently-authenticated User may be queried.\n   */\n  order?: Maybe<Order>;\n  /**\n   * Returns an Order based on the order `code`. For guest Orders (i.e. Orders placed by non-authenticated Customers)\n   * this query will only return the Order within 2 hours of the Order being placed. This allows an Order confirmation\n   * screen to be shown immediately after completion of a guest checkout, yet prevents security risks of allowing\n   * general anonymous access to Order data.\n   */\n  orderByCode?: Maybe<Order>;\n  /** Get a Product either by id or slug. If neither 'id' nor 'slug' is specified, an error will result. */\n  product?: Maybe<Product>;\n  /** Get a list of Products */\n  products: ProductList;\n  /** Search Products based on the criteria set by the `SearchInput` */\n  search: SearchResponse;\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: InputMaybe<CollectionListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: InputMaybe<FacetListOptions>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrderByCodeArgs = {\n  code: Scalars['String'];\n};\n\n\nexport type QueryProductArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: InputMaybe<ProductListOptions>;\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\nexport type RefreshCustomerVerificationResult = NativeAuthStrategyError | Success;\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  adjustment: Scalars['Int'];\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  items: Scalars['Int'];\n  metadata?: Maybe<Scalars['JSON']>;\n  method?: Maybe<Scalars['String']>;\n  orderItems: Array<OrderItem>;\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n  shipping: Scalars['Int'];\n  state: Scalars['String'];\n  total: Scalars['Int'];\n  transactionId?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RegisterCustomerAccountResult = MissingPasswordError | NativeAuthStrategyError | PasswordValidationError | Success;\n\nexport type RegisterCustomerInput = {\n  emailAddress: Scalars['String'];\n  firstName?: InputMaybe<Scalars['String']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  password?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type RelationCustomFieldConfig = CustomField & {\n  __typename?: 'RelationCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  entity: Scalars['String'];\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  scalarFields: Array<Scalars['String']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type RemoveOrderItemsResult = Order | OrderModificationError;\n\nexport type RequestPasswordResetResult = NativeAuthStrategyError | Success;\n\nexport type RequestUpdateCustomerEmailAddressResult = EmailAddressConflictError | InvalidCredentialsError | NativeAuthStrategyError | Success;\n\nexport type ResetPasswordResult = CurrentUser | NativeAuthStrategyError | NotVerifiedError | PasswordResetTokenExpiredError | PasswordResetTokenInvalidError | PasswordValidationError;\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  channels: Array<Channel>;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  permissions: Array<Permission>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type SearchInput = {\n  collectionId?: InputMaybe<Scalars['ID']>;\n  collectionSlug?: InputMaybe<Scalars['String']>;\n  facetValueFilters?: InputMaybe<Array<FacetValueFilterInput>>;\n  facetValueIds?: InputMaybe<Array<Scalars['ID']>>;\n  facetValueOperator?: InputMaybe<LogicalOperator>;\n  groupByProduct?: InputMaybe<Scalars['Boolean']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  sort?: InputMaybe<SearchResultSortParameter>;\n  take?: InputMaybe<Scalars['Int']>;\n  term?: InputMaybe<Scalars['String']>;\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  cacheIdentifier?: Maybe<SearchResponseCacheIdentifier>;\n  collections: Array<CollectionResult>;\n  facetValues: Array<FacetValueResult>;\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n};\n\n/**\n * This type is here to allow us to easily purge the Stellate cache\n * of any search results where the collectionSlug is used. We cannot rely on\n * simply purging the SearchResult type, because in the case of an empty 'items'\n * array, Stellate cannot know that that particular query now needs to be purged.\n */\nexport type SearchResponseCacheIdentifier = {\n  __typename?: 'SearchResponseCacheIdentifier';\n  collectionSlug?: Maybe<Scalars['String']>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  productAsset?: Maybe<SearchResultAsset>;\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  /** A relevance score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  focalPoint?: Maybe<Coordinate>;\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\nexport type SearchResultSortParameter = {\n  name?: InputMaybe<SortOrder>;\n  price?: InputMaybe<SortOrder>;\n};\n\nexport type SetCustomerForOrderResult = AlreadyLoggedInError | EmailAddressConflictError | NoActiveOrderError | Order;\n\nexport type SetOrderShippingMethodResult = IneligibleShippingMethodError | NoActiveOrderError | Order | OrderModificationError;\n\nexport type ShippingLine = {\n  __typename?: 'ShippingLine';\n  discountedPrice: Scalars['Int'];\n  discountedPriceWithTax: Scalars['Int'];\n  discounts: Array<Discount>;\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  shippingMethod: ShippingMethod;\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  calculator: ConfigurableOperation;\n  checker: ConfigurableOperation;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  fulfillmentHandlerCode: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<ShippingMethodTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  code: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  /** Any optional metadata returned by the ShippingCalculator in the ShippingCalculationResult */\n  metadata?: Maybe<Scalars['JSON']>;\n  name: Scalars['String'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n};\n\nexport type ShippingMethodTranslation = {\n  __typename?: 'ShippingMethodTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Int'];\n};\n\nexport enum SortOrder {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  length?: Maybe<Scalars['Int']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  options?: Maybe<Array<StringFieldOption>>;\n  pattern?: Maybe<Scalars['String']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  label?: Maybe<Array<LocalizedString>>;\n  value: Scalars['String'];\n};\n\n/** Operators for filtering on a list of String fields */\nexport type StringListOperators = {\n  inList: Scalars['String'];\n};\n\n/** Operators for filtering on a String field */\nexport type StringOperators = {\n  contains?: InputMaybe<Scalars['String']>;\n  eq?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<Scalars['String']>>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  notContains?: InputMaybe<Scalars['String']>;\n  notEq?: InputMaybe<Scalars['String']>;\n  notIn?: InputMaybe<Array<Scalars['String']>>;\n  regex?: InputMaybe<Scalars['String']>;\n};\n\n/** Indicates that an operation succeeded, where we do not want to return any more specific information. */\nexport type Success = {\n  __typename?: 'Success';\n  success: Scalars['Boolean'];\n};\n\nexport type Surcharge = Node & {\n  __typename?: 'Surcharge';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  sku?: Maybe<Scalars['String']>;\n  taxLines: Array<TaxLine>;\n  taxRate: Scalars['Float'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Tag = Node & {\n  __typename?: 'Tag';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  updatedAt: Scalars['DateTime'];\n  value: Scalars['String'];\n};\n\nexport type TagList = PaginatedList & {\n  __typename?: 'TagList';\n  items: Array<Tag>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  isDefault: Scalars['Boolean'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type TaxLine = {\n  __typename?: 'TaxLine';\n  description: Scalars['String'];\n  taxRate: Scalars['Float'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  category: TaxCategory;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  customerGroup?: Maybe<CustomerGroup>;\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n  value: Scalars['Float'];\n  zone: Zone;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TextCustomFieldConfig = CustomField & {\n  __typename?: 'TextCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type TransitionOrderToStateResult = Order | OrderStateTransitionError;\n\nexport type UpdateAddressInput = {\n  city?: InputMaybe<Scalars['String']>;\n  company?: InputMaybe<Scalars['String']>;\n  countryCode?: InputMaybe<Scalars['String']>;\n  customFields?: InputMaybe<Scalars['JSON']>;\n  defaultBillingAddress?: InputMaybe<Scalars['Boolean']>;\n  defaultShippingAddress?: InputMaybe<Scalars['Boolean']>;\n  fullName?: InputMaybe<Scalars['String']>;\n  id: Scalars['ID'];\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  postalCode?: InputMaybe<Scalars['String']>;\n  province?: InputMaybe<Scalars['String']>;\n  streetLine1?: InputMaybe<Scalars['String']>;\n  streetLine2?: InputMaybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerEmailAddressResult = IdentifierChangeTokenExpiredError | IdentifierChangeTokenInvalidError | NativeAuthStrategyError | Success;\n\nexport type UpdateCustomerInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerPasswordResult = InvalidCredentialsError | NativeAuthStrategyError | PasswordValidationError | Success;\n\nexport type UpdateOrderInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n};\n\nexport type UpdateOrderItemsResult = InsufficientStockError | NegativeQuantityError | Order | OrderLimitError | OrderModificationError;\n\nexport type User = Node & {\n  __typename?: 'User';\n  authenticationMethods: Array<AuthenticationMethod>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n  lastLogin?: Maybe<Scalars['DateTime']>;\n  roles: Array<Role>;\n  updatedAt: Scalars['DateTime'];\n  verified: Scalars['Boolean'];\n};\n\n/**\n * Returned if the verification token (used to verify a Customer's email address) is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type VerificationTokenExpiredError = ErrorResult & {\n  __typename?: 'VerificationTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the verification token (used to verify a Customer's email address) is either\n * invalid or does not match any expected tokens.\n */\nexport type VerificationTokenInvalidError = ErrorResult & {\n  __typename?: 'VerificationTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type VerifyCustomerAccountResult = CurrentUser | MissingPasswordError | NativeAuthStrategyError | PasswordAlreadySetError | PasswordValidationError | VerificationTokenExpiredError | VerificationTokenInvalidError;\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  members: Array<Country>;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n}>;\n\n\nexport type LoginMutation = { __typename?: 'Mutation', login: { __typename: 'CurrentUser', id: string, identifier: string } | { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'NotVerifiedError', errorCode: ErrorCode, message: string } };\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = { __typename?: 'Mutation', logout: { __typename?: 'Success', success: boolean } };\n\nexport type RegisterCustomerAccountMutationVariables = Exact<{\n  input: RegisterCustomerInput;\n}>;\n\n\nexport type RegisterCustomerAccountMutation = { __typename?: 'Mutation', registerCustomerAccount: { __typename: 'MissingPasswordError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'Success', success: boolean } };\n\nexport type VerifyCustomerAccountMutationVariables = Exact<{\n  token: Scalars['String'];\n  password?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type VerifyCustomerAccountMutation = { __typename?: 'Mutation', verifyCustomerAccount: { __typename: 'CurrentUser', id: string, identifier: string } | { __typename: 'MissingPasswordError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordAlreadySetError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'VerificationTokenExpiredError', errorCode: ErrorCode, message: string } | { __typename: 'VerificationTokenInvalidError', errorCode: ErrorCode, message: string } };\n\nexport type UpdateCustomerMutationVariables = Exact<{\n  input: UpdateCustomerInput;\n}>;\n\n\nexport type UpdateCustomerMutation = { __typename?: 'Mutation', updateCustomer: { __typename: 'Customer' } };\n\nexport type RequestUpdateCustomerEmailAddressMutationVariables = Exact<{\n  password: Scalars['String'];\n  newEmailAddress: Scalars['String'];\n}>;\n\n\nexport type RequestUpdateCustomerEmailAddressMutation = { __typename?: 'Mutation', requestUpdateCustomerEmailAddress: { __typename: 'EmailAddressConflictError', errorCode: ErrorCode, message: string } | { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'Success' } };\n\nexport type UpdateCustomerEmailAddressMutationVariables = Exact<{\n  token: Scalars['String'];\n}>;\n\n\nexport type UpdateCustomerEmailAddressMutation = { __typename?: 'Mutation', updateCustomerEmailAddress: { __typename: 'IdentifierChangeTokenExpiredError', errorCode: ErrorCode, message: string } | { __typename: 'IdentifierChangeTokenInvalidError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'Success' } };\n\nexport type UpdateCustomerAddressMutationVariables = Exact<{\n  input: UpdateAddressInput;\n}>;\n\n\nexport type UpdateCustomerAddressMutation = { __typename?: 'Mutation', updateCustomerAddress: { __typename: 'Address' } };\n\nexport type CreateCustomerAddressMutationVariables = Exact<{\n  input: CreateAddressInput;\n}>;\n\n\nexport type CreateCustomerAddressMutation = { __typename?: 'Mutation', createCustomerAddress: { __typename: 'Address' } };\n\nexport type DeleteCustomerAddressMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCustomerAddressMutation = { __typename?: 'Mutation', deleteCustomerAddress: { __typename?: 'Success', success: boolean } };\n\nexport type UpdateCustomerPasswordMutationVariables = Exact<{\n  currentPassword: Scalars['String'];\n  newPassword: Scalars['String'];\n}>;\n\n\nexport type UpdateCustomerPasswordMutation = { __typename?: 'Mutation', updateCustomerPassword: { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'Success', success: boolean } };\n\nexport type ActiveChannelQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveChannelQuery = { __typename?: 'Query', activeChannel: { __typename?: 'Channel', id: string, currencyCode: CurrencyCode } };\n\nexport type EligibleShippingMethodsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type EligibleShippingMethodsQuery = { __typename?: 'Query', eligibleShippingMethods: Array<{ __typename?: 'ShippingMethodQuote', id: string, name: string, description: string, metadata?: any | null, price: number, priceWithTax: number }> };\n\nexport type EligiblePaymentMethodsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type EligiblePaymentMethodsQuery = { __typename?: 'Query', eligiblePaymentMethods: Array<{ __typename?: 'PaymentMethodQuote', id: string, code: string, name: string, description: string, eligibilityMessage?: string | null, isEligible: boolean }> };\n\nexport type NextOrderStatesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type NextOrderStatesQuery = { __typename?: 'Query', nextOrderStates: Array<string> };\n\nexport type AvailableCountriesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AvailableCountriesQuery = { __typename?: 'Query', availableCountries: Array<{ __typename?: 'Country', id: string, name: string, code: string }> };\n\nexport type AddPaymentToOrderMutationVariables = Exact<{\n  input: PaymentInput;\n}>;\n\n\nexport type AddPaymentToOrderMutation = { __typename?: 'Mutation', addPaymentToOrder: { __typename?: 'IneligiblePaymentMethodError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderPaymentStateError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderStateTransitionError', errorCode: ErrorCode, message: string } | { __typename?: 'PaymentDeclinedError', errorCode: ErrorCode, message: string } | { __typename?: 'PaymentFailedError', errorCode: ErrorCode, message: string } };\n\nexport type TransitionOrderToStateMutationVariables = Exact<{\n  state: Scalars['String'];\n}>;\n\n\nexport type TransitionOrderToStateMutation = { __typename?: 'Mutation', transitionOrderToState?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderStateTransitionError', errorCode: ErrorCode, message: string } | null };\n\nexport type CreateStripePaymentIntentMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CreateStripePaymentIntentMutation = { __typename?: 'Mutation', createStripePaymentIntent?: string | null };\n\nexport type GenerateBraintreeClientTokenQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GenerateBraintreeClientTokenQuery = { __typename?: 'Query', generateBraintreeClientToken?: string | null };\n\nexport type CollectionsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CollectionsQuery = { __typename?: 'Query', collections: { __typename?: 'CollectionList', items: Array<{ __typename?: 'Collection', id: string, name: string, slug: string, parent?: { __typename?: 'Collection', name: string } | null, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, children?: Array<{ __typename?: 'Collection', id: string, name: string, slug: string }> | null }> } };\n\nexport type CollectionQueryVariables = Exact<{\n  slug?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n}>;\n\n\nexport type CollectionQuery = { __typename?: 'Query', collection?: { __typename?: 'Collection', id: string, name: string, slug: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }>, children?: Array<{ __typename?: 'Collection', id: string, name: string, slug: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> | null } | null };\n\nexport type ActiveCustomerQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string } | null };\n\nexport type ActiveCustomerDetailsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerDetailsQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, title?: string | null, firstName: string, lastName: string, phoneNumber?: string | null, emailAddress: string } | null };\n\nexport type ActiveCustomerAddressesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerAddressesQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, addresses?: Array<{ __typename?: 'Address', id: string, company?: string | null, fullName?: string | null, streetLine1: string, streetLine2?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, phoneNumber?: string | null, defaultShippingAddress?: boolean | null, defaultBillingAddress?: boolean | null, country: { __typename?: 'Country', id: string, code: string, name: string } }> | null } | null };\n\nexport type ActiveCustomerOrderListQueryVariables = Exact<{\n  orderListOptions?: InputMaybe<OrderListOptions>;\n}>;\n\n\nexport type ActiveCustomerOrderListQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', orders: { __typename?: 'OrderList', totalItems: number, items: Array<{ __typename?: 'Order', code: string, state: string, orderPlacedAt?: any | null, currencyCode: CurrencyCode, subTotal: number, subTotalWithTax: number, total: number, totalWithTax: number, shippingWithTax: number, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number }>, taxSummary: Array<{ __typename?: 'OrderTaxSummary', taxBase: number, taxTotal: number }>, discounts: Array<{ __typename?: 'Discount', amountWithTax: number }>, lines: Array<{ __typename?: 'OrderLine', quantity: number, discountedLinePriceWithTax: number, discountedUnitPriceWithTax: number, fulfillments?: Array<{ __typename?: 'Fulfillment', updatedAt: any, state: string }> | null, featuredAsset?: { __typename?: 'Asset', name: string, source: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', name: string, sku: string, currencyCode: CurrencyCode, priceWithTax: number, product: { __typename?: 'Product', slug: string } } }> }> } } | null };\n\nexport type SetCustomerForOrderMutationVariables = Exact<{\n  input: CreateCustomerInput;\n}>;\n\n\nexport type SetCustomerForOrderMutation = { __typename?: 'Mutation', setCustomerForOrder: { __typename?: 'AlreadyLoggedInError', errorCode: ErrorCode, message: string } | { __typename?: 'EmailAddressConflictError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } };\n\nexport type SetOrderShippingAddressMutationVariables = Exact<{\n  input: CreateAddressInput;\n}>;\n\n\nexport type SetOrderShippingAddressMutation = { __typename?: 'Mutation', setOrderShippingAddress: { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } };\n\nexport type SetOrderShippingMethodMutationVariables = Exact<{\n  shippingMethodId: Scalars['ID'];\n}>;\n\n\nexport type SetOrderShippingMethodMutation = { __typename?: 'Mutation', setOrderShippingMethod: { __typename?: 'IneligibleShippingMethodError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type AddItemToOrderMutationVariables = Exact<{\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n}>;\n\n\nexport type AddItemToOrderMutation = { __typename?: 'Mutation', addItemToOrder: { __typename?: 'InsufficientStockError', errorCode: ErrorCode, message: string } | { __typename?: 'NegativeQuantityError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderLimitError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type RemoveOrderLineMutationVariables = Exact<{\n  orderLineId: Scalars['ID'];\n}>;\n\n\nexport type RemoveOrderLineMutation = { __typename?: 'Mutation', removeOrderLine: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type AdjustOrderLineMutationVariables = Exact<{\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n}>;\n\n\nexport type AdjustOrderLineMutation = { __typename?: 'Mutation', adjustOrderLine: { __typename?: 'InsufficientStockError', errorCode: ErrorCode, message: string } | { __typename?: 'NegativeQuantityError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderLimitError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type OrderDetailFragment = { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null };\n\nexport type ActiveOrderQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveOrderQuery = { __typename?: 'Query', activeOrder?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | null };\n\nexport type OrderByCodeQueryVariables = Exact<{\n  code: Scalars['String'];\n}>;\n\n\nexport type OrderByCodeQuery = { __typename?: 'Query', orderByCode?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | null };\n\nexport type DetailedProductFragment = { __typename?: 'Product', id: string, name: string, description: string, collections: Array<{ __typename?: 'Collection', id: string, slug: string, name: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }> }>, facetValues: Array<{ __typename?: 'FacetValue', id: string, code: string, name: string, facet: { __typename?: 'Facet', id: string, code: string, name: string } }>, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, assets: Array<{ __typename?: 'Asset', id: string, preview: string }>, variants: Array<{ __typename?: 'ProductVariant', id: string, name: string, priceWithTax: number, currencyCode: CurrencyCode, sku: string, stockLevel: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> };\n\nexport type ProductQueryVariables = Exact<{\n  slug?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n}>;\n\n\nexport type ProductQuery = { __typename?: 'Query', product?: { __typename?: 'Product', id: string, name: string, description: string, collections: Array<{ __typename?: 'Collection', id: string, slug: string, name: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }> }>, facetValues: Array<{ __typename?: 'FacetValue', id: string, code: string, name: string, facet: { __typename?: 'Facet', id: string, code: string, name: string } }>, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, assets: Array<{ __typename?: 'Asset', id: string, preview: string }>, variants: Array<{ __typename?: 'ProductVariant', id: string, name: string, priceWithTax: number, currencyCode: CurrencyCode, sku: string, stockLevel: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> } | null };\n\nexport type ListedProductFragment = { __typename?: 'SearchResult', productId: string, productName: string, slug: string, currencyCode: CurrencyCode, productAsset?: { __typename?: 'SearchResultAsset', id: string, preview: string } | null, priceWithTax: { __typename?: 'PriceRange', min: number, max: number } | { __typename?: 'SinglePrice', value: number } };\n\nexport type SearchQueryVariables = Exact<{\n  input: SearchInput;\n}>;\n\n\nexport type SearchQuery = { __typename?: 'Query', search: { __typename?: 'SearchResponse', totalItems: number, items: Array<{ __typename?: 'SearchResult', productId: string, productName: string, slug: string, currencyCode: CurrencyCode, productAsset?: { __typename?: 'SearchResultAsset', id: string, preview: string } | null, priceWithTax: { __typename?: 'PriceRange', min: number, max: number } | { __typename?: 'SinglePrice', value: number } }>, facetValues: Array<{ __typename?: 'FacetValueResult', count: number, facetValue: { __typename?: 'FacetValue', id: string, name: string, facet: { __typename?: 'Facet', id: string, name: string } } }> } };\n\nexport type SearchFacetValuesQueryVariables = Exact<{\n  input: SearchInput;\n}>;\n\n\nexport type SearchFacetValuesQuery = { __typename?: 'Query', search: { __typename?: 'SearchResponse', totalItems: number, facetValues: Array<{ __typename?: 'FacetValueResult', count: number, facetValue: { __typename?: 'FacetValue', id: string, name: string, facet: { __typename?: 'Facet', id: string, name: string } } }> } };\n\nexport const OrderDetailFragmentDoc = gql`\n    fragment OrderDetail on Order {\n  __typename\n  id\n  code\n  active\n  createdAt\n  state\n  currencyCode\n  totalQuantity\n  subTotal\n  subTotalWithTax\n  taxSummary {\n    description\n    taxRate\n    taxTotal\n  }\n  shippingWithTax\n  totalWithTax\n  customer {\n    id\n    firstName\n    lastName\n    emailAddress\n  }\n  shippingAddress {\n    fullName\n    streetLine1\n    streetLine2\n    company\n    city\n    province\n    postalCode\n    countryCode\n    phoneNumber\n  }\n  shippingLines {\n    shippingMethod {\n      id\n      name\n    }\n    priceWithTax\n  }\n  lines {\n    id\n    unitPriceWithTax\n    linePriceWithTax\n    quantity\n    featuredAsset {\n      id\n      preview\n    }\n    productVariant {\n      id\n      name\n      price\n      product {\n        id\n        slug\n      }\n    }\n  }\n  payments {\n    id\n    state\n    method\n    amount\n    metadata\n  }\n}\n    `;\nexport const DetailedProductFragmentDoc = gql`\n    fragment DetailedProduct on Product {\n  id\n  name\n  description\n  collections {\n    id\n    slug\n    name\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n  }\n  facetValues {\n    facet {\n      id\n      code\n      name\n    }\n    id\n    code\n    name\n  }\n  featuredAsset {\n    id\n    preview\n  }\n  assets {\n    id\n    preview\n  }\n  variants {\n    id\n    name\n    priceWithTax\n    currencyCode\n    sku\n    stockLevel\n    featuredAsset {\n      id\n      preview\n    }\n  }\n}\n    `;\nexport const ListedProductFragmentDoc = gql`\n    fragment ListedProduct on SearchResult {\n  productId\n  productName\n  slug\n  productAsset {\n    id\n    preview\n  }\n  currencyCode\n  priceWithTax {\n    ... on PriceRange {\n      min\n      max\n    }\n    ... on SinglePrice {\n      value\n    }\n  }\n}\n    `;\nexport const LoginDocument = gql`\n    mutation login($email: String!, $password: String!, $rememberMe: Boolean) {\n  login(username: $email, password: $password, rememberMe: $rememberMe) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout {\n    success\n  }\n}\n    `;\nexport const RegisterCustomerAccountDocument = gql`\n    mutation registerCustomerAccount($input: RegisterCustomerInput!) {\n  registerCustomerAccount(input: $input) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const VerifyCustomerAccountDocument = gql`\n    mutation verifyCustomerAccount($token: String!, $password: String) {\n  verifyCustomerAccount(token: $token, password: $password) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerDocument = gql`\n    mutation updateCustomer($input: UpdateCustomerInput!) {\n  updateCustomer(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const RequestUpdateCustomerEmailAddressDocument = gql`\n    mutation requestUpdateCustomerEmailAddress($password: String!, $newEmailAddress: String!) {\n  requestUpdateCustomerEmailAddress(\n    password: $password\n    newEmailAddress: $newEmailAddress\n  ) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerEmailAddressDocument = gql`\n    mutation updateCustomerEmailAddress($token: String!) {\n  updateCustomerEmailAddress(token: $token) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerAddressDocument = gql`\n    mutation updateCustomerAddress($input: UpdateAddressInput!) {\n  updateCustomerAddress(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const CreateCustomerAddressDocument = gql`\n    mutation createCustomerAddress($input: CreateAddressInput!) {\n  createCustomerAddress(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const DeleteCustomerAddressDocument = gql`\n    mutation deleteCustomerAddress($id: ID!) {\n  deleteCustomerAddress(id: $id) {\n    success\n  }\n}\n    `;\nexport const UpdateCustomerPasswordDocument = gql`\n    mutation updateCustomerPassword($currentPassword: String!, $newPassword: String!) {\n  updateCustomerPassword(\n    currentPassword: $currentPassword\n    newPassword: $newPassword\n  ) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const ActiveChannelDocument = gql`\n    query activeChannel {\n  activeChannel {\n    id\n    currencyCode\n  }\n}\n    `;\nexport const EligibleShippingMethodsDocument = gql`\n    query eligibleShippingMethods {\n  eligibleShippingMethods {\n    id\n    name\n    description\n    metadata\n    price\n    priceWithTax\n  }\n}\n    `;\nexport const EligiblePaymentMethodsDocument = gql`\n    query eligiblePaymentMethods {\n  eligiblePaymentMethods {\n    id\n    code\n    name\n    description\n    eligibilityMessage\n    isEligible\n  }\n}\n    `;\nexport const NextOrderStatesDocument = gql`\n    query nextOrderStates {\n  nextOrderStates\n}\n    `;\nexport const AvailableCountriesDocument = gql`\n    query availableCountries {\n  availableCountries {\n    id\n    name\n    code\n  }\n}\n    `;\nexport const AddPaymentToOrderDocument = gql`\n    mutation addPaymentToOrder($input: PaymentInput!) {\n  addPaymentToOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const TransitionOrderToStateDocument = gql`\n    mutation transitionOrderToState($state: String!) {\n  transitionOrderToState(state: $state) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const CreateStripePaymentIntentDocument = gql`\n    mutation createStripePaymentIntent {\n  createStripePaymentIntent\n}\n    `;\nexport const GenerateBraintreeClientTokenDocument = gql`\n    query generateBraintreeClientToken {\n  generateBraintreeClientToken\n}\n    `;\nexport const CollectionsDocument = gql`\n    query collections {\n  collections {\n    items {\n      id\n      name\n      slug\n      parent {\n        name\n      }\n      featuredAsset {\n        id\n        preview\n      }\n      children {\n        id\n        name\n        slug\n      }\n    }\n  }\n}\n    `;\nexport const CollectionDocument = gql`\n    query collection($slug: String, $id: ID) {\n  collection(slug: $slug, id: $id) {\n    id\n    name\n    slug\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n    children {\n      id\n      name\n      slug\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n}\n    `;\nexport const ActiveCustomerDocument = gql`\n    query activeCustomer {\n  activeCustomer {\n    id\n    firstName\n    lastName\n  }\n}\n    `;\nexport const ActiveCustomerDetailsDocument = gql`\n    query activeCustomerDetails {\n  activeCustomer {\n    id\n    title\n    firstName\n    lastName\n    phoneNumber\n    emailAddress\n  }\n}\n    `;\nexport const ActiveCustomerAddressesDocument = gql`\n    query activeCustomerAddresses {\n  activeCustomer {\n    id\n    addresses {\n      id\n      company\n      fullName\n      streetLine1\n      streetLine2\n      city\n      province\n      postalCode\n      country {\n        id\n        code\n        name\n      }\n      phoneNumber\n      defaultShippingAddress\n      defaultBillingAddress\n    }\n  }\n}\n    `;\nexport const ActiveCustomerOrderListDocument = gql`\n    query activeCustomerOrderList($orderListOptions: OrderListOptions) {\n  activeCustomer {\n    orders(options: $orderListOptions) {\n      totalItems\n      items {\n        code\n        state\n        orderPlacedAt\n        currencyCode\n        subTotal\n        subTotalWithTax\n        total\n        totalWithTax\n        shippingWithTax\n        shippingLines {\n          priceWithTax\n        }\n        taxSummary {\n          taxBase\n          taxTotal\n        }\n        discounts {\n          amountWithTax\n        }\n        lines {\n          quantity\n          discountedLinePriceWithTax\n          discountedUnitPriceWithTax\n          featuredAsset {\n            name\n            source\n            preview\n          }\n          productVariant {\n            name\n            sku\n            currencyCode\n            priceWithTax\n            product {\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport const SetCustomerForOrderDocument = gql`\n    mutation setCustomerForOrder($input: CreateCustomerInput!) {\n  setCustomerForOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const SetOrderShippingAddressDocument = gql`\n    mutation setOrderShippingAddress($input: CreateAddressInput!) {\n  setOrderShippingAddress(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const SetOrderShippingMethodDocument = gql`\n    mutation setOrderShippingMethod($shippingMethodId: [ID!]!) {\n  setOrderShippingMethod(shippingMethodId: $shippingMethodId) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const AddItemToOrderDocument = gql`\n    mutation addItemToOrder($productVariantId: ID!, $quantity: Int!) {\n  addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const RemoveOrderLineDocument = gql`\n    mutation removeOrderLine($orderLineId: ID!) {\n  removeOrderLine(orderLineId: $orderLineId) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const AdjustOrderLineDocument = gql`\n    mutation adjustOrderLine($orderLineId: ID!, $quantity: Int!) {\n  adjustOrderLine(orderLineId: $orderLineId, quantity: $quantity) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const ActiveOrderDocument = gql`\n    query activeOrder {\n  activeOrder {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const OrderByCodeDocument = gql`\n    query orderByCode($code: String!) {\n  orderByCode(code: $code) {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const ProductDocument = gql`\n    query product($slug: String, $id: ID) {\n  product(slug: $slug, id: $id) {\n    ...DetailedProduct\n  }\n}\n    ${DetailedProductFragmentDoc}`;\nexport const SearchDocument = gql`\n    query search($input: SearchInput!) {\n  search(input: $input) {\n    totalItems\n    items {\n      ...ListedProduct\n    }\n    facetValues {\n      count\n      facetValue {\n        id\n        name\n        facet {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    ${ListedProductFragmentDoc}`;\nexport const SearchFacetValuesDocument = gql`\n    query searchFacetValues($input: SearchInput!) {\n  search(input: $input) {\n    totalItems\n    facetValues {\n      count\n      facetValue {\n        id\n        name\n        facet {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\nexport type Requester<C = {}, E = unknown> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>\nexport function getSdk<C, E>(requester: Requester<C, E>) {\n  return {\n    login(variables: LoginMutationVariables, options?: C): Promise<LoginMutation> {\n      return requester<LoginMutation, LoginMutationVariables>(LoginDocument, variables, options) as Promise<LoginMutation>;\n    },\n    logout(variables?: LogoutMutationVariables, options?: C): Promise<LogoutMutation> {\n      return requester<LogoutMutation, LogoutMutationVariables>(LogoutDocument, variables, options) as Promise<LogoutMutation>;\n    },\n    registerCustomerAccount(variables: RegisterCustomerAccountMutationVariables, options?: C): Promise<RegisterCustomerAccountMutation> {\n      return requester<RegisterCustomerAccountMutation, RegisterCustomerAccountMutationVariables>(RegisterCustomerAccountDocument, variables, options) as Promise<RegisterCustomerAccountMutation>;\n    },\n    verifyCustomerAccount(variables: VerifyCustomerAccountMutationVariables, options?: C): Promise<VerifyCustomerAccountMutation> {\n      return requester<VerifyCustomerAccountMutation, VerifyCustomerAccountMutationVariables>(VerifyCustomerAccountDocument, variables, options) as Promise<VerifyCustomerAccountMutation>;\n    },\n    updateCustomer(variables: UpdateCustomerMutationVariables, options?: C): Promise<UpdateCustomerMutation> {\n      return requester<UpdateCustomerMutation, UpdateCustomerMutationVariables>(UpdateCustomerDocument, variables, options) as Promise<UpdateCustomerMutation>;\n    },\n    requestUpdateCustomerEmailAddress(variables: RequestUpdateCustomerEmailAddressMutationVariables, options?: C): Promise<RequestUpdateCustomerEmailAddressMutation> {\n      return requester<RequestUpdateCustomerEmailAddressMutation, RequestUpdateCustomerEmailAddressMutationVariables>(RequestUpdateCustomerEmailAddressDocument, variables, options) as Promise<RequestUpdateCustomerEmailAddressMutation>;\n    },\n    updateCustomerEmailAddress(variables: UpdateCustomerEmailAddressMutationVariables, options?: C): Promise<UpdateCustomerEmailAddressMutation> {\n      return requester<UpdateCustomerEmailAddressMutation, UpdateCustomerEmailAddressMutationVariables>(UpdateCustomerEmailAddressDocument, variables, options) as Promise<UpdateCustomerEmailAddressMutation>;\n    },\n    updateCustomerAddress(variables: UpdateCustomerAddressMutationVariables, options?: C): Promise<UpdateCustomerAddressMutation> {\n      return requester<UpdateCustomerAddressMutation, UpdateCustomerAddressMutationVariables>(UpdateCustomerAddressDocument, variables, options) as Promise<UpdateCustomerAddressMutation>;\n    },\n    createCustomerAddress(variables: CreateCustomerAddressMutationVariables, options?: C): Promise<CreateCustomerAddressMutation> {\n      return requester<CreateCustomerAddressMutation, CreateCustomerAddressMutationVariables>(CreateCustomerAddressDocument, variables, options) as Promise<CreateCustomerAddressMutation>;\n    },\n    deleteCustomerAddress(variables: DeleteCustomerAddressMutationVariables, options?: C): Promise<DeleteCustomerAddressMutation> {\n      return requester<DeleteCustomerAddressMutation, DeleteCustomerAddressMutationVariables>(DeleteCustomerAddressDocument, variables, options) as Promise<DeleteCustomerAddressMutation>;\n    },\n    updateCustomerPassword(variables: UpdateCustomerPasswordMutationVariables, options?: C): Promise<UpdateCustomerPasswordMutation> {\n      return requester<UpdateCustomerPasswordMutation, UpdateCustomerPasswordMutationVariables>(UpdateCustomerPasswordDocument, variables, options) as Promise<UpdateCustomerPasswordMutation>;\n    },\n    activeChannel(variables?: ActiveChannelQueryVariables, options?: C): Promise<ActiveChannelQuery> {\n      return requester<ActiveChannelQuery, ActiveChannelQueryVariables>(ActiveChannelDocument, variables, options) as Promise<ActiveChannelQuery>;\n    },\n    eligibleShippingMethods(variables?: EligibleShippingMethodsQueryVariables, options?: C): Promise<EligibleShippingMethodsQuery> {\n      return requester<EligibleShippingMethodsQuery, EligibleShippingMethodsQueryVariables>(EligibleShippingMethodsDocument, variables, options) as Promise<EligibleShippingMethodsQuery>;\n    },\n    eligiblePaymentMethods(variables?: EligiblePaymentMethodsQueryVariables, options?: C): Promise<EligiblePaymentMethodsQuery> {\n      return requester<EligiblePaymentMethodsQuery, EligiblePaymentMethodsQueryVariables>(EligiblePaymentMethodsDocument, variables, options) as Promise<EligiblePaymentMethodsQuery>;\n    },\n    nextOrderStates(variables?: NextOrderStatesQueryVariables, options?: C): Promise<NextOrderStatesQuery> {\n      return requester<NextOrderStatesQuery, NextOrderStatesQueryVariables>(NextOrderStatesDocument, variables, options) as Promise<NextOrderStatesQuery>;\n    },\n    availableCountries(variables?: AvailableCountriesQueryVariables, options?: C): Promise<AvailableCountriesQuery> {\n      return requester<AvailableCountriesQuery, AvailableCountriesQueryVariables>(AvailableCountriesDocument, variables, options) as Promise<AvailableCountriesQuery>;\n    },\n    addPaymentToOrder(variables: AddPaymentToOrderMutationVariables, options?: C): Promise<AddPaymentToOrderMutation> {\n      return requester<AddPaymentToOrderMutation, AddPaymentToOrderMutationVariables>(AddPaymentToOrderDocument, variables, options) as Promise<AddPaymentToOrderMutation>;\n    },\n    transitionOrderToState(variables: TransitionOrderToStateMutationVariables, options?: C): Promise<TransitionOrderToStateMutation> {\n      return requester<TransitionOrderToStateMutation, TransitionOrderToStateMutationVariables>(TransitionOrderToStateDocument, variables, options) as Promise<TransitionOrderToStateMutation>;\n    },\n    createStripePaymentIntent(variables?: CreateStripePaymentIntentMutationVariables, options?: C): Promise<CreateStripePaymentIntentMutation> {\n      return requester<CreateStripePaymentIntentMutation, CreateStripePaymentIntentMutationVariables>(CreateStripePaymentIntentDocument, variables, options) as Promise<CreateStripePaymentIntentMutation>;\n    },\n    generateBraintreeClientToken(variables?: GenerateBraintreeClientTokenQueryVariables, options?: C): Promise<GenerateBraintreeClientTokenQuery> {\n      return requester<GenerateBraintreeClientTokenQuery, GenerateBraintreeClientTokenQueryVariables>(GenerateBraintreeClientTokenDocument, variables, options) as Promise<GenerateBraintreeClientTokenQuery>;\n    },\n    collections(variables?: CollectionsQueryVariables, options?: C): Promise<CollectionsQuery> {\n      return requester<CollectionsQuery, CollectionsQueryVariables>(CollectionsDocument, variables, options) as Promise<CollectionsQuery>;\n    },\n    collection(variables?: CollectionQueryVariables, options?: C): Promise<CollectionQuery> {\n      return requester<CollectionQuery, CollectionQueryVariables>(CollectionDocument, variables, options) as Promise<CollectionQuery>;\n    },\n    activeCustomer(variables?: ActiveCustomerQueryVariables, options?: C): Promise<ActiveCustomerQuery> {\n      return requester<ActiveCustomerQuery, ActiveCustomerQueryVariables>(ActiveCustomerDocument, variables, options) as Promise<ActiveCustomerQuery>;\n    },\n    activeCustomerDetails(variables?: ActiveCustomerDetailsQueryVariables, options?: C): Promise<ActiveCustomerDetailsQuery> {\n      return requester<ActiveCustomerDetailsQuery, ActiveCustomerDetailsQueryVariables>(ActiveCustomerDetailsDocument, variables, options) as Promise<ActiveCustomerDetailsQuery>;\n    },\n    activeCustomerAddresses(variables?: ActiveCustomerAddressesQueryVariables, options?: C): Promise<ActiveCustomerAddressesQuery> {\n      return requester<ActiveCustomerAddressesQuery, ActiveCustomerAddressesQueryVariables>(ActiveCustomerAddressesDocument, variables, options) as Promise<ActiveCustomerAddressesQuery>;\n    },\n    activeCustomerOrderList(variables?: ActiveCustomerOrderListQueryVariables, options?: C): Promise<ActiveCustomerOrderListQuery> {\n      return requester<ActiveCustomerOrderListQuery, ActiveCustomerOrderListQueryVariables>(ActiveCustomerOrderListDocument, variables, options) as Promise<ActiveCustomerOrderListQuery>;\n    },\n    setCustomerForOrder(variables: SetCustomerForOrderMutationVariables, options?: C): Promise<SetCustomerForOrderMutation> {\n      return requester<SetCustomerForOrderMutation, SetCustomerForOrderMutationVariables>(SetCustomerForOrderDocument, variables, options) as Promise<SetCustomerForOrderMutation>;\n    },\n    setOrderShippingAddress(variables: SetOrderShippingAddressMutationVariables, options?: C): Promise<SetOrderShippingAddressMutation> {\n      return requester<SetOrderShippingAddressMutation, SetOrderShippingAddressMutationVariables>(SetOrderShippingAddressDocument, variables, options) as Promise<SetOrderShippingAddressMutation>;\n    },\n    setOrderShippingMethod(variables: SetOrderShippingMethodMutationVariables, options?: C): Promise<SetOrderShippingMethodMutation> {\n      return requester<SetOrderShippingMethodMutation, SetOrderShippingMethodMutationVariables>(SetOrderShippingMethodDocument, variables, options) as Promise<SetOrderShippingMethodMutation>;\n    },\n    addItemToOrder(variables: AddItemToOrderMutationVariables, options?: C): Promise<AddItemToOrderMutation> {\n      return requester<AddItemToOrderMutation, AddItemToOrderMutationVariables>(AddItemToOrderDocument, variables, options) as Promise<AddItemToOrderMutation>;\n    },\n    removeOrderLine(variables: RemoveOrderLineMutationVariables, options?: C): Promise<RemoveOrderLineMutation> {\n      return requester<RemoveOrderLineMutation, RemoveOrderLineMutationVariables>(RemoveOrderLineDocument, variables, options) as Promise<RemoveOrderLineMutation>;\n    },\n    adjustOrderLine(variables: AdjustOrderLineMutationVariables, options?: C): Promise<AdjustOrderLineMutation> {\n      return requester<AdjustOrderLineMutation, AdjustOrderLineMutationVariables>(AdjustOrderLineDocument, variables, options) as Promise<AdjustOrderLineMutation>;\n    },\n    activeOrder(variables?: ActiveOrderQueryVariables, options?: C): Promise<ActiveOrderQuery> {\n      return requester<ActiveOrderQuery, ActiveOrderQueryVariables>(ActiveOrderDocument, variables, options) as Promise<ActiveOrderQuery>;\n    },\n    orderByCode(variables: OrderByCodeQueryVariables, options?: C): Promise<OrderByCodeQuery> {\n      return requester<OrderByCodeQuery, OrderByCodeQueryVariables>(OrderByCodeDocument, variables, options) as Promise<OrderByCodeQuery>;\n    },\n    product(variables?: ProductQueryVariables, options?: C): Promise<ProductQuery> {\n      return requester<ProductQuery, ProductQueryVariables>(ProductDocument, variables, options) as Promise<ProductQuery>;\n    },\n    search(variables: SearchQueryVariables, options?: C): Promise<SearchQuery> {\n      return requester<SearchQuery, SearchQueryVariables>(SearchDocument, variables, options) as Promise<SearchQuery>;\n    },\n    searchFacetValues(variables: SearchFacetValuesQueryVariables, options?: C): Promise<SearchFacetValuesQuery> {\n      return requester<SearchFacetValuesQuery, SearchFacetValuesQueryVariables>(SearchFacetValuesDocument, variables, options) as Promise<SearchFacetValuesQuery>;\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;", "import { createCookieSessionStorage } from '@remix-run/node';\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'superb_session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: ['awdbhbjahdbaw'],\n  },\n});\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '~/graphqlWrapper';\n\nexport function activeChannel(options: QueryOptions) {\n  return sdk\n    .activeChannel(undefined, options)\n    .then(({ activeChannel }) => activeChannel);\n}\n\ngql`\n  query activeChannel {\n    activeChannel {\n      id\n      currencyCode\n    }\n  }\n`;\n", "import { Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { CartContents } from './CartContents';\nimport { Link, useLocation } from '@remix-run/react';\nimport { Price } from '~/components/products/Price';\nimport { CartLoaderData } from '~/routes/api/active-order';\nimport { CurrencyCode } from '~/generated/graphql';\n\nexport function CartTray({\n  open,\n  onClose,\n  activeOrder,\n  adjustOrderLine,\n  removeItem,\n}: {\n  open: boolean;\n  onClose: (closed: boolean) => void;\n  activeOrder: CartLoaderData['activeOrder'];\n  adjustOrderLine?: (lineId: string, quantity: number) => void;\n  removeItem?: (lineId: string) => void;\n}) {\n  const currencyCode = activeOrder?.currencyCode || CurrencyCode.Usd;\n  const location = useLocation();\n  const editable = !location.pathname.startsWith('/checkout');\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 overflow-hidden z-20\"\n        onClose={onClose}\n      >\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-in-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in-out duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-y-0 right-0 pl-10 max-w-full flex\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transform transition ease-in-out duration-300 sm:duration-300\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transform transition ease-in-out duration-300 sm:duration-300\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <div className=\"w-screen max-w-md\">\n                <div className=\"h-full flex flex-col bg-white shadow-xl overflow-y-scroll\">\n                  <div className=\"flex-1 py-6 overflow-y-auto px-4 sm:px-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <Dialog.Title className=\"text-lg font-medium text-gray-900\">\n                        \u041C\u0438\u043D\u0438\u0439 \u0421\u0430\u0433\u0441\n                      </Dialog.Title>\n                      <div className=\"ml-3 h-7 flex items-center\">\n                        <button\n                          type=\"button\"\n                          className=\"-m-2 p-2 text-gray-400 hover:text-gray-500\"\n                          onClick={() => onClose(false)}\n                        >\n                          <span className=\"sr-only\">Close panel</span>\n                          <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-8\">\n                      {activeOrder?.totalQuantity ? (\n                        <CartContents\n                          orderLines={activeOrder?.lines ?? []}\n                          currencyCode={currencyCode!}\n                          editable={editable}\n                          removeItem={removeItem}\n                          adjustOrderLine={adjustOrderLine}\n                        />\n                      ) : (\n                        <div className=\"flex items-center justify-center h-48 text-xl text-gray-400\">\n                          \u0422\u0430\u043D\u044B \u0441\u0430\u0433\u0441 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430.\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {activeOrder?.totalQuantity && editable && (\n                    <div className=\"border-t border-gray-200 py-6 px-4 sm:px-6\">\n                      <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                        <p>\u041D\u0438\u0439\u0442 \u0434\u04AF\u043D</p>\n                        <p>\n                          {currencyCode && (\n                            <Price\n                              priceWithTax={activeOrder?.subTotalWithTax ?? 0}\n                              currencyCode={currencyCode}\n                            />\n                          )}\n                        </p>\n                      </div>\n                      <p className=\"mt-0.5 text-sm text-gray-500\">\n                        \u0425\u04AF\u0440\u0433\u044D\u043B\u0442\u0438\u0439\u0433 \u0442\u04E9\u043B\u0431\u04E9\u0440 \u0442\u04E9\u043B\u04E9\u0445 \u04AF\u0435\u0434 \u0431\u043E\u0434\u043D\u043E.\n                      </p>\n                      <div className=\"mt-6\">\n                        <Link\n                          to=\"/checkout\"\n                          onClick={() => onClose(false)}\n                          className=\"flex justify-center items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                        >\n                          \u0425\u0443\u0434\u0430\u043B\u0434\u0430\u043D \u0430\u0432\u0430\u0445\n                        </Link>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n", "import { Form, Link, useFetcher, useOutletContext } from '@remix-run/react';\nimport { Price } from '~/components/products/Price';\nimport { ActiveOrderQuery, CurrencyCode } from '~/generated/graphql';\nimport { SfSelect } from '@storefront-ui/react';\nimport QuantitySelector from '../products/QuantitySelector';\n\nexport function CartContents({\n  orderLines,\n  currencyCode,\n  editable = true,\n  adjustOrderLine,\n  removeItem,\n}: {\n  orderLines: NonNullable<ActiveOrderQuery['activeOrder']>['lines'];\n  currencyCode: CurrencyCode;\n  editable: boolean;\n  adjustOrderLine?: (lineId: string, quantity: number) => void;\n  removeItem?: (lineId: string) => void;\n}) {\n  const isEditable = editable !== false;\n  return (\n    <div className=\"flow-root\">\n      <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\n        {(orderLines ?? []).map((line) => (\n          <li key={line.id} className=\"py-6 flex\">\n            <div className=\"flex-shrink-0 w-24 h-24 border border-gray-200 rounded-md overflow-hidden\">\n              <img\n                src={line.featuredAsset?.preview + '?preset=thumb'}\n                alt={line.productVariant.name}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n\n            <div className=\"ml-4 flex-1 flex flex-col\">\n              <div>\n                <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                  <h3>\n                    <Link to={`/p/${line.productVariant.product.slug}`}>\n                      {line.productVariant.name}\n                    </Link>\n                  </h3>\n                  <p className=\"ml-4\">\n                    <Price\n                      priceWithTax={line.linePriceWithTax}\n                      currencyCode={currencyCode}\n                    ></Price>\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex-1 flex items-center text-sm\">\n                {editable ? (\n                  <Form>\n                    <label htmlFor={`quantity-${line.id}`} className=\"mr-2\">\n                      \u0422\u043E\u043E \u0448\u0438\u0440\u0445\u044D\u0433\n                    </label>\n                    <QuantitySelector lineId={line.id} cssClasses=\"mt-2\" max={10} disabled={false} adjustOrderLine={adjustOrderLine} />\n                    {/* <SfSelect \n                      size=\"sm\" \n                      disabled={!isEditable}\n                      name={`quantity-${line.id}`}\n                      value={line.quantity}\n                      onChange={(e) =>\n                        adjustOrderLine &&\n                        adjustOrderLine(line.id, +e.target.value)\n                      }\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </SfSelect> */}\n                  </Form>\n                ) : (\n                  <div className=\"text-gray-800\">\n                    <span className=\"mr-1\">\u0442\u043E\u043E \u0448\u0438\u0440\u0445\u044D\u0433:</span>\n                    <span className=\"font-medium\">{line.quantity}</span>\n                  </div>\n                )}\n                <div className=\"flex-1\"></div>\n                <div className=\"flex\">\n                  {isEditable && (\n                    <button\n                      type=\"submit\"\n                      name=\"removeItem\"\n                      value={line.id}\n                      className=\"font-medium text-red-600 hover:text-red-500\"\n                      onClick={() => removeItem && removeItem(line.id)}\n                    >\n                      \u0425\u0430\u0441\u0430\u0445\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n", "import { ProductCardProps } from './ProductCard';\n\nexport function Price({\n  priceWithTax,\n  currencyCode,\n}: {\n  priceWithTax?: number | ProductCardProps['priceWithTax'];\n  currencyCode?: ProductCardProps['currencyCode'];\n}) {\n  if (priceWithTax == null || !currencyCode) {\n    return <></>;\n  }\n  if (typeof priceWithTax === 'number') {\n    return <>{formatPrice(priceWithTax)}</>;\n  }\n  if ('value' in priceWithTax) {\n    return <>{formatPrice(priceWithTax.value)}</>;\n  }\n  if (priceWithTax.min === priceWithTax.max) {\n    return <>{formatPrice(priceWithTax.min)}</>;\n  }\n  return (\n    <>\n      {formatPrice(priceWithTax.min)} -{' '}\n      {formatPrice(priceWithTax.max)}\n    </>\n  );\n}\n\nexport function formatPrice(amount: number) {\n  return new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  }).format(amount) + ' \u20AE';\n}\n", "import { SfButton, SfIconAdd, SfIconRemove } from '@storefront-ui/react';\nimport { useCounter } from 'react-use';\nimport { useId, ChangeEvent } from 'react';\nimport { clamp } from '@storefront-ui/shared';\nimport { classNames } from '~/utils/class-names';\n\nexport default function QuantitySelector({\n    lineId,\n    max,\n    min = 1,\n    disabled = false,\n    adjustOrderLine,\n    cssClasses = '',\n  }: {\n    lineId: string;\n    max: number;\n    min?: number;\n    disabled?: boolean;\n    adjustOrderLine?: (lineId: string, quantity: number) => void;\n    cssClasses?: string;\n  }) {\n  const inputId = useId();\n  const [value, { inc, dec, set, get }] = useCounter(min);\n\n  const handleOnIncrement = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    inc();\n    const currentValue = get();\n    if(adjustOrderLine && currentValue) {\n      adjustOrderLine(lineId, currentValue);\n    }\n  }\n\n  const handleOnDecrement = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    dec();\n    const currentValue = get();\n    if(adjustOrderLine && currentValue) {\n      adjustOrderLine(lineId, currentValue);\n    }\n  }\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value: currentValue } = event.target;\n    const nextValue = parseFloat(currentValue);\n    set(clamp(nextValue, min, max));\n    if(adjustOrderLine && nextValue) {\n      adjustOrderLine(lineId, nextValue);\n    }\n  }\n  return (\n    <div className={classNames(\"flex flex-col items-center\", cssClasses)}>\n      <div className=\"flex border border-neutral-300 rounded-md\">\n        <SfButton\n          type=\"button\"\n          variant=\"tertiary\"\n          square\n          size=\"sm\"\n          className=\"rounded-r-none\"\n          disabled={value <= min || disabled}\n          aria-controls={inputId}\n          aria-label=\"Decrease value\"\n          onClick={handleOnDecrement}\n        >\n          <SfIconRemove />\n        </SfButton>\n        <input\n          id={inputId}\n          type=\"number\"\n          role=\"spinbutton\"\n          className=\"appearance-none mx-2 w-8 text-center bg-transparent font-medium [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-inner-spin-button]:display-none [&::-webkit-inner-spin-button]:m-0 [&::-webkit-outer-spin-button]:display-none [&::-webkit-outer-spin-button]:m-0 [-moz-appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none disabled:placeholder-disabled-900 focus-visible:outline focus-visible:outline-offset focus-visible:rounded-sm\"\n          min={min}\n          max={max}\n          value={value}\n          disabled={disabled}\n          onChange={handleOnChange}\n        />\n        <SfButton\n          type=\"button\"\n          variant=\"tertiary\"\n          size=\"sm\"\n          square\n          className=\"rounded-l-none\"\n          disabled={value >= max || disabled}\n          aria-controls={inputId}\n          aria-label=\"Increase value\"\n          onClick={handleOnIncrement}\n        >\n          <SfIconAdd />\n        </SfButton>\n      </div>\n      {disabled ? (\n        <p className=\"text-negative-700 font-medium text-xs mt-2\">Out of stock</p>\n      ) : (\n        <p className=\"text-xs mt-2 text-neutral-500\">\n          <strong className=\"text-neutral-900\">{max}</strong> in stock\n        </p>\n      )}\n    </div>\n  );\n}\n", "import React from 'react';\n\nexport function classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function mergeClassName(\n  props: React.HTMLAttributes<any>,\n  className: string,\n) {\n  if (props.className !== undefined) {\n    return {\n      ...props,\n      className: `${props.className} ${className}`,\n    };\n  }\n\n  return {\n    ...props,\n    className: className,\n  };\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '~/graphqlWrapper';\nimport { OrderListOptions, CustomerOrdersArgs } from '~/generated/graphql';\n\nexport function getActiveCustomer(options: QueryOptions) {\n  return sdk.activeCustomer(undefined, options);\n}\n\nexport function getActiveCustomerDetails(options: QueryOptions) {\n  return sdk.activeCustomerDetails(undefined, options);\n}\n\nexport function getActiveCustomerAddresses(options: QueryOptions) {\n  return sdk.activeCustomerAddresses(undefined, options);\n}\n\nexport function getActiveCustomerOrderList(orderListOptions: OrderListOptions, options: QueryOptions) {\n  return sdk.activeCustomerOrderList({orderListOptions}, options);\n}\n\ngql`\n  query activeCustomer {\n    activeCustomer {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n\ngql`\n  query activeCustomerDetails {\n    activeCustomer {\n      id\n      title\n      firstName\n      lastName\n      phoneNumber\n      emailAddress\n    }\n  }\n`;\n\ngql`\n  query activeCustomerAddresses {\n    activeCustomer {\n      id\n      addresses {\n        id\n        company\n        fullName\n        streetLine1\n        streetLine2\n        city\n        province\n        postalCode\n        country {\n          id\n          code\n          name\n        }\n        phoneNumber\n        defaultShippingAddress\n        defaultBillingAddress\n      }\n    }\n  }\n`;\n\ngql`\n  query activeCustomerOrderList($orderListOptions: OrderListOptions) {\n    activeCustomer {\n      orders(options: $orderListOptions) {\n        totalItems\n        items {\n          code\n          state\n          orderPlacedAt\n          currencyCode\n          subTotal\n          subTotalWithTax\n          total\n          totalWithTax\n          shippingWithTax\n          shippingLines {\n            priceWithTax\n          }\n          taxSummary {\n            taxBase\n            taxTotal\n          }\n          discounts {\n            amountWithTax\n          }\n          lines {\n            quantity\n            discountedLinePriceWithTax\n            discountedUnitPriceWithTax\n            fulfillments {\n              updatedAt\n              state\n            }\n            featuredAsset {\n              name\n              source\n              preview\n            }\n            productVariant {\n              name\n              sku\n              currencyCode\n              priceWithTax\n              product {\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n", "import { useFetcher } from '@remix-run/react';\nimport { CartLoaderData } from '~/routes/api/active-order';\nimport { useEffect } from 'react';\n\nexport function useActiveOrder() {\n  const activeOrderFetcher = useFetcher<CartLoaderData>();\n  useEffect(() => {\n    // equavalent to fetcher.type === 'init'\n    if (activeOrderFetcher.state === 'idle' && !activeOrderFetcher.data) {\n      activeOrderFetcher.load('/api/active-order');\n    }\n  }, [activeOrderFetcher]);\n\n  function refresh() {\n    activeOrderFetcher.load('/api/active-order');\n  }\n\n  const { activeOrder } = activeOrderFetcher.data ?? {};\n  const removeItem = (lineId: string) => {\n    activeOrderFetcher.submit(\n      {\n        action: 'removeItem',\n        lineId,\n      },\n      {\n        method: 'post',\n        action: '/api/active-order',\n      },\n    );\n  };\n  const adjustOrderLine = (lineId: string, quantity: number) => {\n    activeOrderFetcher.submit(\n      {\n        action: 'adjustItem',\n        lineId,\n        quantity: quantity.toString(),\n      },\n      {\n        method: 'post',\n        action: '/api/active-order',\n      },\n    );\n  };\n  return {\n    activeOrderFetcher,\n    activeOrder,\n    removeItem,\n    adjustOrderLine,\n    refresh,\n  };\n}\n", "import {\n  SfIconShoppingCart,\n  SfIconFavorite,\n  SfIconPerson,\n  SfIconMenu,\n  SfIconChevronRight,\n  SfIconClose,\n  SfButton,\n  SfDrawer,\n  SfListItem,\n  useDisclosure,\n  useTrapFocus,\n} from '@storefront-ui/react';\nimport { useRef } from 'react';\nimport { useClickAway } from 'react-use';\nimport { CSSTransition } from 'react-transition-group';\nimport { Link } from '@remix-run/react';\nimport { RootLoaderData } from '~/root';\n\nconst bannerDetails = {\n  image: 'https://placeimg.com/700/700/tech',\n  title: 'New in designer watches.',\n};\n\nconst categoriesContent = [\n  {\n    heading: 'Activities',\n    items: [\n      {\n        title: 'Fitness',\n        link: '/',\n      },\n      {\n        title: 'Pilates',\n        link: '/',\n      },\n      {\n        title: 'Training',\n        link: '/',\n      },\n      {\n        title: 'Cardio workout',\n        link: '/',\n      },\n      {\n        title: 'Yoga',\n        link: '/',\n      },\n      {\n        title: 'All activities',\n        link: '/',\n      },\n    ],\n  },\n  {\n    heading: 'Categories',\n    items: [\n      {\n        title: 'Clothing',\n        link: '/',\n      },\n      {\n        title: 'Shoes',\n        link: '/',\n      },\n      {\n        title: 'Accessories',\n        link: '/',\n      },\n      {\n        title: 'Wearables',\n        link: '/',\n      },\n      {\n        title: 'Food & Drinks',\n        link: '/',\n      },\n      {\n        title: 'All categories',\n        link: '/',\n      },\n    ],\n  },\n  {\n    heading: 'Womens Deals',\n    items: [\n      {\n        title: 'Fitness Gear',\n        link: '/',\n      },\n      {\n        title: 'Outlet',\n        link: '/',\n      },\n      {\n        title: 'All Womens Deals',\n        link: '/',\n      },\n    ],\n  },\n];\n\nexport default function Header({\n  onCartIconClick,\n  cartQuantity,\n  collections,\n} : {\n  onCartIconClick: () => void;\n  cartQuantity: number;\n  collections: RootLoaderData['collections'];\n}) {\n  const { close, toggle, isOpen } = useDisclosure({ initialValue: false });\n  const drawerRef = useRef(null);\n  const menuRef = useRef(null);\n  useTrapFocus(drawerRef, { activeState: isOpen, arrowKeysOn: true });\n  useClickAway(menuRef, () => {\n    close();\n  });\n\n  return (\n    <div className=\"w-full h-full\">\n      {/* <p className=\"flex h-10 items-center justify-center bg-indigo-600 px-4 text-sm font-medium text-white sm:px-6 lg:px-8\">\n        Get free delivery on orders over $100\n      </p> */}\n      {isOpen && (\n        <div className=\"fixed inset-0 bg-neutral-500 bg-opacity-50 transition-opacity\" />\n      )}\n      <header\n        ref={menuRef}\n        className=\"flex justify-center w-full border-0 bg-primary-700 border-neutral-200 h-14 md:relative md:h-20 md:z-10\"\n      >\n        <div className=\"flex items-center flex-nowrap justify-start h-full max-w-[1536px] w-full px-4 md:px-10\">\n          <Link\n            to=\"/\"\n            aria-label=\"SF Homepage\"\n            className=\"inline-block text-white mr-2 lg:mr-10\"\n          >\n            <picture>\n              <source\n                srcSet={'https://docs.storefrontui.io/v2-react/_next/static/media/vsf_logo_white.403187b4.svg'}\n                media=\"(min-width: 767px)\"\n              />\n              <img\n                src={'https://docs.storefrontui.io/v2-react/_next/static/media/vsf_logo_white.403187b4.svg'}\n                alt=\"Superb Logo\"\n                className=\"w-8 h-8 mr-4 md:w-[12.5rem] md:h-[1.75rem]\"\n              />\n            </picture>\n          </Link>\n          <nav\n            className=\"flex w-full justify-between flex-nowrap\"\n            aria-label=\"SF Navigation\"\n          >\n            <ul>\n              <li role=\"none\">\n                <SfButton\n                  className=\"block !px-2 mr-auto text-white font-body bg-transparent hover:bg-primary-800 hover:text-white active:bg-primary-900 active:text-white\"\n                  type=\"button\"\n                  aria-haspopup=\"true\"\n                  aria-expanded={isOpen}\n                  slotSuffix={\n                    <>\n                      <SfIconChevronRight className=\"hidden rotate-90 md:inline-flex\" />\n                      <SfIconMenu className=\"inline-flex md:hidden\" />\n                    </>\n                  }\n                  variant=\"tertiary\"\n                  onClick={toggle}\n                >\n                  <span className=\"hidden md:inline-flex\">\u0411\u04AE\u0425 \u0410\u041D\u0413\u0418\u041B\u0410\u041B</span>\n                </SfButton>\n                <CSSTransition\n                  in={isOpen}\n                  timeout={500}\n                  unmountOnExit\n                  classNames={{\n                    enter: '-translate-x-full md:opacity-0 md:translate-x-0',\n                    enterActive:\n                      'translate-x-0 md:opacity-100 transition duration-500 ease-in-out',\n                    exitActive:\n                      '-translate-x-full md:opacity-0 md:translate-x-0 transition duration-500 ease-in-out',\n                  }}\n                >\n                  <SfDrawer\n                    ref={drawerRef}\n                    open\n                    disableClickAway\n                    placement=\"top\"\n                    className=\"grid grid-cols-1 gap-4 md:grid-cols-6 bg-white max-w-xs shadow-lg p-0 !fixed max-h-screen overflow-y-auto md:!absolute md:!top-[5rem] md:max-w-full md:p-8\"\n                  >\n                    <div className=\"flex items-center justify-between py-2 px-4 bg-primary-700 md:hidden\">\n                      <div className=\"flex items-center typography-text-lg font-medium text-white\">\n                        \u0411\u04AE\u0425 \u0410\u041D\u0413\u0418\u041B\u0410\u041B\n                      </div>\n                      <SfButton\n                        square\n                        variant=\"tertiary\"\n                        aria-label=\"Close navigation menu\"\n                        onClick={close}\n                        className=\"text-white\"\n                      >\n                        <SfIconClose />\n                      </SfButton>\n                    </div>\n                    {collections.map((collection) => (\n                      <div key={collection.id}>\n                        <h2\n                          role=\"presentation\"\n                          className=\"typography-text-xs font-bold text-neutral-900 tracking-widest whitespace-nowrap px-4 py-2\"\n                        >\n                          {collection.name}\n                        </h2>\n                        <hr className=\"mb-3.5\" />\n                        <ul key={`collection-${collection.id}`}>\n                          {(collection.children || []).map((item) => (\n                            <SfListItem size=\"sm\" role=\"none\" key={`collection-${collection.id}-${item.id}`}>\n                              <Link\n                                key={`category-children-${item.id}`}\n                                className=\"focus-visible:outline focus-visible:rounded-sm\"\n                                to={`/t/${item.slug}`}\n                              >\n                                {item.name}\n                              </Link>\n                            </SfListItem>\n                          ))}\n                        </ul>\n                      </div>\n                    ))}\n                    <div className=\"flex flex-col items-center justify-center bg-neutral-100 rounded-md border-neutral-300 overflow-hidden grow\">\n                      <img\n                        src={'https://docs.storefrontui.io/v2-react/_next/static/media/watch.771966a5.png'}\n                        alt={bannerDetails.title}\n                        className=\"object-contain\"\n                      />\n                      <p className=\"mb-4 mt-4 px-4 text-center typography-text-base font-medium\">\n                        {bannerDetails.title}\n                      </p>\n                    </div>\n                    <SfButton\n                      square\n                      size=\"sm\"\n                      variant=\"tertiary\"\n                      aria-label=\"Close navigation menu\"\n                      onClick={close}\n                      className=\"hidden md:block md:absolute md:right-0 hover:bg-white active:bg-white\"\n                    >\n                      <SfIconClose className=\"text-neutral-500\" />\n                    </SfButton>\n                  </SfDrawer>\n                </CSSTransition>\n              </li>\n            </ul>\n            <div className=\"flex flex-nowrap\">\n              <SfButton\n                className=\"mr-2 -ml-0.5 text-white bg-transparent hover:bg-primary-800 hover:text-white active:bg-primary-900 active:text-white\"\n                key={\"shopping-cart\"}\n                aria-label={\"\u041C\u0438\u043D\u0438\u0439 \u0421\u0430\u0433\u0441\"}\n                variant=\"tertiary\"\n                slotPrefix={<SfIconShoppingCart />}\n                slotSuffix={cartQuantity || 0}\n                onClick={onCartIconClick}\n                square\n              />\n              <SfButton\n                className=\"mr-2 -ml-0.5 text-white bg-transparent hover:bg-primary-800 hover:text-white active:bg-primary-900 active:text-white\"\n                key={\"wishlist\"}\n                aria-label={\"\u0425\u0430\u0434\u0433\u0430\u043B\u0441\u0430\u043D\"}\n                variant=\"tertiary\"\n                slotPrefix={<SfIconFavorite />}\n                square\n              />\n\n              <Link to=\"sign-in\">\n                <SfButton\n                  className=\"mr-2 -ml-0.5 text-white bg-transparent hover:bg-primary-800 hover:text-white active:bg-primary-900 active:text-white\"\n                  key={\"login\"}\n                  aria-label={\"\u041D\u044D\u0432\u0442\u0440\u044D\u0445\"}\n                  variant=\"tertiary\"\n                  slotPrefix={<SfIconPerson />}\n                  square\n                >\n                  <p className=\"hidden md:inline-flex\">\u041D\u044D\u0432\u0442\u0440\u044D\u0445</p>\n                </SfButton>\n              </Link>\n            </div>\n          </nav>\n        </div>\n      </header>\n    </div>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport {\n  SfButton,\n  SfIconFacebook,\n  SfIconInstagram,\n  SfIconTwitter,\n  SfLink,\n  SfListItem,\n} from '@storefront-ui/react';\nimport { RootLoaderData } from '~/root';\n\nconst socialMedia = [\n  {\n    label: 'Facebook',\n    link: '/facebook',\n    icon: () => <SfIconFacebook />,\n  },\n  {\n    label: 'Twitter',\n    link: '/twitter',\n    icon: () => <SfIconTwitter />,\n  },\n  {\n    label: 'Instagram',\n    link: '/instagram',\n    icon: () => <SfIconInstagram />,\n  },\n];\n\nconst bottomLinks = [\n  {\n    label: '\u04AE\u0439\u043B\u0447\u0438\u043B\u0433\u044D\u044D\u043D\u0438\u0439 \u043D\u04E9\u0445\u0446\u04E9\u043B',\n    link: '/tos',\n  },\n];\n\nexport default function Footer({collections}: { collections: RootLoaderData['collections'] }) {\n\n  return (\n    <>\n      <footer className=\"pt-10 bg-neutral-100 border-t-2 mt-20\">\n        <div className=\"grid justify-center grid-cols-[1fr_1fr] md:grid-cols-[repeat(4,1fr)] px-4 md:px-6 pb-10 max-w-[1536px] mx-auto\">\n          {collections.map((collection) => (\n            <div className=\"grid grid-cols xs:pb-4\" key={collection.id}>\n              <div className=\"ml-4 text-lg font-medium leading-7 text-neutral-900 font-body\">\n                {collection.name}\n              </div>\n              {(collection.children || []).map((children) => (\n                <SfListItem\n                  className=\"py-2 !bg-transparent typography-text-sm font-body\"\n                  key={`${collection.id}-${children.id}`}\n                >\n                  <SfLink\n                    className=\"no-underline text-neutral-600 hover:underline hover:!text-neutral-900 active:underline active:!text-neutral-900\"\n                    variant=\"secondary\"\n                    href={'/t/' + children.slug}\n                  >\n                    {children.name}\n                  </SfLink>\n                </SfListItem>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div className=\"bg-neutral-900 justify-end px-4 py-10 md:flex md:py-6 max-w-[1536px] mx-auto\">\n          <div className=\"flex justify-center py-2 gap-x-4 md:self-start\">\n            {socialMedia.map(({ icon: Icon, label, link }) => (\n              <SfButton\n                key={label}\n                square\n                as=\"a\"\n                variant=\"tertiary\"\n                className=\"text-white active:text-white hover:text-white hover:!bg-neutral-500 active:bg-transparent\"\n                href={link}\n                aria-label={`Go to ${label} page`}\n              >\n                <Icon />\n              </SfButton>\n            ))}\n          </div>\n          <div className=\"flex items-center justify-center gap-6 py-2 my-4 md:ml-auto md:my-0\">\n            {bottomLinks.map(({ label, link }) => (\n              <SfLink\n                key={label}\n                variant=\"secondary\"\n                className=\"text-white/50 no-underline typography-text-sm active:text-white active:underline hover:text-white hover:underline\"\n                href={link}\n              >\n                {label}\n              </SfLink>\n            ))}\n          </div>\n          <p className=\"flex items-center justify-center py-2 leading-5 text-center typography-text-sm text-white/50 font-body md:ml-6\">\n            @ 2023 superb.mn\n          </p>\n        </div>\n      </footer>\n    </>\n  );\n}\n", "import { useEffect, useRef } from 'react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { updateCustomerEmailAddress } from '~/providers/account/account';\n\ntype LoaderReturnType = {\n  success: boolean;\n  error?: string;\n};\n\nexport async function loader({\n  request,\n}: DataFunctionArgs): Promise<LoaderReturnType> {\n  const url = new URL(request.url);\n  const token = url.searchParams.get('token');\n  if (!token) {\n    return {\n      success: false,\n      error: 'Verification token was not provided!',\n    };\n  }\n\n  const result = await updateCustomerEmailAddress(token, { request });\n  if (result.__typename !== 'Success') {\n    return { success: false, error: result.message };\n  }\n  return { success: true };\n}\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const redirectTarget = body.get('redirect') as string;\n\n  return redirect(redirectTarget);\n}\n\nexport default function VerifyEmailAddressChangeTokenPage() {\n  const [searchParams] = useSearchParams();\n  const result = useLoaderData<LoaderReturnType>();\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!result.success || !btnRef.current) {\n      return;\n    }\n\n    const submitBtn = btnRef.current;\n    setTimeout(() => submitBtn.click(), 5000);\n  }, [result]);\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {result.success ? (\n            <div className=\"rounded-md bg-green-100 p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-700\">\n                    \u0422\u0430\u043D\u044B \u0448\u0438\u043D\u044D \u0438\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0430\u043C\u0436\u0438\u043B\u0442\u0442\u0430\u0439 \u0431\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u043B\u0430\u0430.\n                    5 \u0441\u0435\u043A\u0443\u043D\u0434\u044B\u043D \u0434\u043E\u0442\u043E\u0440 \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u0445\u0443\u0443\u0434\u0430\u0441 \u0440\u0443\u0443 \u043E\u0447\u0438\u043D\u043E ...\n                  </p>\n                </div>\n                <form method=\"post\">\n                  <input\n                    type=\"hidden\"\n                    name=\"redirect\"\n                    value={searchParams.get('redirectTo') || '/sign-in'}\n                  />\n                  <button\n                    ref={btnRef}\n                    type=\"submit\"\n                    style={{ display: 'none ' }}\n                  />\n                </form>\n              </div>\n            </div>\n          ) : (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon\n                    className=\"h-5 w-5 text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{result.error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import gql from 'graphql-tag';\nimport {\n  CreateAddressInput,\n  LoginMutation,\n  LogoutMutation,\n  RegisterCustomerAccountMutation,\n  RegisterCustomerAccountMutationVariables,\n  UpdateAddressInput,\n  UpdateCustomerInput,\n  VerifyCustomerAccountMutation,\n} from '~/generated/graphql';\nimport { QueryOptions, sdk, WithHeaders } from '~/graphqlWrapper';\n\nexport const login = async (\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  options: QueryOptions,\n): Promise<WithHeaders<LoginMutation['login']>> => {\n  return sdk.login({ email, password, rememberMe }, options).then((res) => ({\n    ...res.login,\n    _headers: res._headers,\n  }));\n};\n\nexport const logout = async (\n  options: QueryOptions,\n): Promise<WithHeaders<LogoutMutation['logout']>> => {\n  return sdk.logout({}, options).then((res) => ({\n    ...res.logout,\n    _headers: res._headers,\n  }));\n};\n\nexport const registerCustomerAccount = async (\n  options: QueryOptions,\n  variables: RegisterCustomerAccountMutationVariables,\n): Promise<\n  WithHeaders<RegisterCustomerAccountMutation['registerCustomerAccount']>\n> => {\n  return sdk.registerCustomerAccount(variables, options).then((res) => ({\n    ...res.registerCustomerAccount,\n    _headers: res._headers,\n  }));\n};\n\nexport const verifyCustomerAccount = async (\n  options: QueryOptions,\n  token: string,\n  password?: string,\n): Promise<\n  WithHeaders<VerifyCustomerAccountMutation['verifyCustomerAccount']>\n> => {\n  return sdk\n    .verifyCustomerAccount({ token, password }, options)\n    .then((res) => ({\n      ...res.verifyCustomerAccount,\n      _headers: res._headers,\n    }));\n};\n\nexport async function updateCustomer(\n  input: UpdateCustomerInput,\n  options: QueryOptions,\n) {\n  return sdk.updateCustomer({ input }, options);\n}\n\nexport async function requestUpdateCustomerEmailAddress(\n  password: string,\n  newEmailAddress: string,\n  options: QueryOptions,\n) {\n  return sdk\n    .requestUpdateCustomerEmailAddress({ password, newEmailAddress }, options)\n    .then((res) => res.requestUpdateCustomerEmailAddress);\n}\n\nexport async function updateCustomerEmailAddress(\n  token: string,\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerEmailAddress({ token }, options)\n    .then((res) => res.updateCustomerEmailAddress);\n}\n\nexport async function updateCustomerAddress(\n  input: UpdateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerAddress({ input }, options)\n    .then((res) => res.updateCustomerAddress);\n}\n\nexport async function createCustomerAddress(\n  input: CreateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk\n    .createCustomerAddress({ input }, options)\n    .then((res) => res.createCustomerAddress);\n}\n\nexport async function deleteCustomerAddress(id: string, options: QueryOptions) {\n  return sdk\n    .deleteCustomerAddress({ id }, options)\n    .then((res) => res.deleteCustomerAddress);\n}\n\nexport async function updateCustomerPassword(\n  input: { currentPassword: string; newPassword: string },\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerPassword(input, options)\n    .then((res) => res.updateCustomerPassword);\n}\n\ngql`\n  mutation login($email: String!, $password: String!, $rememberMe: Boolean) {\n    login(username: $email, password: $password, rememberMe: $rememberMe) {\n      __typename\n      ... on CurrentUser {\n        id\n        identifier\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation logout {\n    logout {\n      success\n    }\n  }\n`;\n\ngql`\n  mutation registerCustomerAccount($input: RegisterCustomerInput!) {\n    registerCustomerAccount(input: $input) {\n      __typename\n      ... on Success {\n        success\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation verifyCustomerAccount($token: String!, $password: String) {\n    verifyCustomerAccount(token: $token, password: $password) {\n      __typename\n      ... on CurrentUser {\n        id\n        identifier\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomer($input: UpdateCustomerInput!) {\n    updateCustomer(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation requestUpdateCustomerEmailAddress(\n    $password: String!\n    $newEmailAddress: String!\n  ) {\n    requestUpdateCustomerEmailAddress(\n      password: $password\n      newEmailAddress: $newEmailAddress\n    ) {\n      __typename\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerEmailAddress($token: String!) {\n    updateCustomerEmailAddress(token: $token) {\n      __typename\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerAddress($input: UpdateAddressInput!) {\n    updateCustomerAddress(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation createCustomerAddress($input: CreateAddressInput!) {\n    createCustomerAddress(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation deleteCustomerAddress($id: ID!) {\n    deleteCustomerAddress(id: $id) {\n      success\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerPassword(\n    $currentPassword: String!\n    $newPassword: String!\n  ) {\n    updateCustomerPassword(\n      currentPassword: $currentPassword\n      newPassword: $newPassword\n    ) {\n      __typename\n      ... on Success {\n        success\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n", "import {\n  addItemToOrder,\n  adjustOrderLine,\n  getActiveOrder,\n  removeOrderLine,\n  setCustomerForOrder,\n  setOrderShippingAddress,\n  setOrderShippingMethod,\n} from '~/providers/orders/order';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport {\n  CreateAddressInput,\n  CreateCustomerInput,\n  ErrorCode,\n  ErrorResult,\n  OrderDetailFragment,\n} from '~/generated/graphql';\nimport { sessionStorage } from '~/servers/session.server';\nimport { shippingFormDataIsValid } from '~/utils/validation';\nimport {\n  addPaymentToOrder,\n  getNextOrderStates,\n  transitionOrderToState,\n} from '~/providers/checkout/checkout';\n\nexport type CartLoaderData = Awaited<ReturnType<typeof loader>>;\n\nexport async function loader({ request }: DataFunctionArgs) {\n  return {\n    activeOrder: await getActiveOrder({ request }),\n  };\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n  const formAction = body.get('action');\n  let activeOrder: OrderDetailFragment | undefined = undefined;\n  let error: ErrorResult = {\n    errorCode: ErrorCode.NoActiveOrderError,\n    message: '',\n  };\n  switch (formAction) {\n    case 'setCheckoutShipping':\n      if (shippingFormDataIsValid(body)) {\n        const shippingFormData = Object.fromEntries<any>(\n          body.entries(),\n        ) as CreateAddressInput;\n        const result = await setOrderShippingAddress(\n          {\n            city: shippingFormData.city,\n            company: shippingFormData.company,\n            countryCode: shippingFormData.countryCode,\n            customFields: shippingFormData.customFields,\n            fullName: shippingFormData.fullName,\n            phoneNumber: shippingFormData.phoneNumber,\n            postalCode: shippingFormData.postalCode,\n            province: shippingFormData.province,\n            streetLine1: shippingFormData.streetLine1,\n            streetLine2: shippingFormData.streetLine2,\n          },\n          { request },\n        );\n        if (result.setOrderShippingAddress.__typename === 'Order') {\n          activeOrder = result.setOrderShippingAddress;\n        } else {\n          error = result.setOrderShippingAddress;\n        }\n      }\n      break;\n    case 'setOrderCustomer': {\n      const customerData = Object.fromEntries<any>(\n        body.entries(),\n      ) as CreateCustomerInput;\n      const result = await setCustomerForOrder(\n        {\n          emailAddress: customerData.emailAddress,\n          firstName: customerData.firstName,\n          lastName: customerData.lastName,\n        },\n        { request },\n      );\n      if (result.setCustomerForOrder.__typename === 'Order') {\n        activeOrder = result.setCustomerForOrder;\n      } else {\n        error = result.setCustomerForOrder;\n      }\n      break;\n    }\n    case 'setShippingMethod': {\n      const shippingMethodId = body.get('shippingMethodId');\n      if (typeof shippingMethodId === 'string') {\n        const result = await setOrderShippingMethod(shippingMethodId, {\n          request,\n        });\n        if (result.setOrderShippingMethod.__typename === 'Order') {\n          activeOrder = result.setOrderShippingMethod;\n        } else {\n          error = result.setOrderShippingMethod;\n        }\n      }\n      break;\n    }\n    case 'removeItem': {\n      const lineId = body.get('lineId');\n      const result = await removeOrderLine(lineId?.toString() ?? '', {\n        request,\n      });\n      if (result.removeOrderLine.__typename === 'Order') {\n        activeOrder = result.removeOrderLine;\n      } else {\n        error = result.removeOrderLine;\n      }\n      break;\n    }\n    case 'adjustItem': {\n      const lineId = body.get('lineId');\n      const quantity = body.get('quantity');\n      if (lineId && quantity != null) {\n        const result = await adjustOrderLine(lineId?.toString(), +quantity, {\n          request,\n        });\n        if (result.adjustOrderLine.__typename === 'Order') {\n          activeOrder = result.adjustOrderLine;\n        } else {\n          error = result.adjustOrderLine;\n        }\n      }\n      break;\n    }\n    case 'addItemToOrder': {\n      const variantId = body.get('variantId')?.toString();\n      const quantity = Number(body.get('quantity')?.toString() ?? 1);\n      if (!variantId || !(quantity > 0)) {\n        throw new Error(\n          `Invalid input: variantId ${variantId}, quantity ${quantity}`,\n        );\n      }\n      const result = await addItemToOrder(variantId, quantity, {\n        request,\n      });\n      if (result.addItemToOrder.__typename === 'Order') {\n        activeOrder = result.addItemToOrder;\n      } else {\n        error = result.addItemToOrder;\n      }\n      break;\n    }\n    case 'addPaymentToOrder': {\n    }\n    default:\n    // Don't do anything\n  }\n  let headers: ResponseInit['headers'] = {};\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n  session.flash('activeOrderError', error);\n  headers = {\n    'Set-Cookie': await sessionStorage.commitSession(session),\n  };\n  return json(\n    { activeOrder: activeOrder || (await getActiveOrder({ request })) },\n    {\n      headers,\n    },\n  );\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { CreateAddressInput, CreateCustomerInput } from '~/generated/graphql';\n\nexport function getActiveOrder(options: QueryOptions) {\n  return sdk\n    .activeOrder(undefined, options)\n    .then(({ activeOrder }) => activeOrder);\n}\n\nexport function getOrderByCode(code: string, options: QueryOptions) {\n  return sdk\n    .orderByCode({ code }, options)\n    .then(({ orderByCode }) => orderByCode);\n}\n\nexport function addItemToOrder(\n  productVariantId: string,\n  quantity: number,\n  options: QueryOptions,\n) {\n  return sdk.addItemToOrder(\n    {\n      productVariantId,\n      quantity,\n    },\n    options,\n  );\n}\n\nexport function removeOrderLine(lineId: string, options: QueryOptions) {\n  return sdk.removeOrderLine({ orderLineId: lineId }, options);\n}\n\nexport function adjustOrderLine(\n  lineId: string,\n  quantity: number,\n  options: QueryOptions,\n) {\n  return sdk.adjustOrderLine({ orderLineId: lineId, quantity }, options);\n}\n\nexport function setCustomerForOrder(\n  input: CreateCustomerInput,\n  options: QueryOptions,\n) {\n  return sdk.setCustomerForOrder({ input }, options);\n}\n\nexport function setOrderShippingAddress(\n  input: CreateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk.setOrderShippingAddress({ input }, options);\n}\n\nexport function setOrderShippingMethod(\n  shippingMethodId: string,\n  options: QueryOptions,\n) {\n  return sdk.setOrderShippingMethod({ shippingMethodId }, options);\n}\n\ngql`\n  mutation setCustomerForOrder($input: CreateCustomerInput!) {\n    setCustomerForOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation setOrderShippingAddress($input: CreateAddressInput!) {\n    setOrderShippingAddress(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\ngql`\n  mutation setOrderShippingMethod($shippingMethodId: ID!) {\n    setOrderShippingMethod(shippingMethodId: $shippingMethodId) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation addPaymentToOrder($input: PaymentInput!) {\n    addPaymentToOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation addItemToOrder($productVariantId: ID!, $quantity: Int!) {\n    addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation removeOrderLine($orderLineId: ID!) {\n    removeOrderLine(orderLineId: $orderLineId) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation adjustOrderLine($orderLineId: ID!, $quantity: Int!) {\n    adjustOrderLine(orderLineId: $orderLineId, quantity: $quantity) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  fragment OrderDetail on Order {\n    __typename\n    id\n    code\n    active\n    createdAt\n    state\n    currencyCode\n    totalQuantity\n    subTotal\n    subTotalWithTax\n    taxSummary {\n      description\n      taxRate\n      taxTotal\n    }\n    shippingWithTax\n    totalWithTax\n    customer {\n      id\n      firstName\n      lastName\n      emailAddress\n    }\n    shippingAddress {\n      fullName\n      streetLine1\n      streetLine2\n      company\n      city\n      province\n      postalCode\n      countryCode\n      phoneNumber\n    }\n    shippingLines {\n      shippingMethod {\n        id\n        name\n      }\n      priceWithTax\n    }\n    lines {\n      id\n      unitPriceWithTax\n      linePriceWithTax\n      quantity\n      featuredAsset {\n        id\n        preview\n      }\n      productVariant {\n        id\n        name\n        price\n        product {\n          id\n          slug\n        }\n      }\n    }\n    payments {\n      id\n      state\n      method\n      amount\n      metadata\n    }\n  }\n`;\n\ngql`\n  query activeOrder {\n    activeOrder {\n      ...OrderDetail\n    }\n  }\n`;\n\ngql`\n  query orderByCode($code: String!) {\n    orderByCode(code: $code) {\n      ...OrderDetail\n    }\n  }\n`;\n", "import { ShippingFormData } from '~/types';\n\nexport function shippingFormDataIsValid(\n  data: FormData | Record<string, string>,\n): boolean {\n  const shippingFormData = (\n    data instanceof FormData ? Object.fromEntries<any>(data.entries()) : data\n  ) as ShippingFormData;\n  return !!(\n    shippingFormData.streetLine1 &&\n    shippingFormData.city &&\n    shippingFormData.countryCode &&\n    shippingFormData.postalCode\n  );\n}\n\nexport function replaceEmptyString(input: string | undefined | null) {\n  if (!input || input.trim().length == 0) {\n    return '-';\n  }\n  return input;\n}", "import { CheckCircleIcon } from '@heroicons/react/24/outline';\nimport { Form } from '@remix-run/react';\nimport { redirect } from '@remix-run/server-runtime';\n\nexport async function action() {\n  return redirect('/');\n}\n\nexport default function SuccessPage() {\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md border-2 rounded-md border-green-600\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <Form className=\"space-y-6\" method=\"post\">\n            <div>\n              <div className=\"flex justify-center\">\n                <div className=\"flex-grow\">\n                  <CheckCircleIcon\n                    className=\"h-20 w-20 m-auto mb-2 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              </div>\n              <p className=\"text-center mb-5\">\n                \u0422\u0430\u043D\u044B \u0431\u04AF\u0440\u0442\u0433\u044D\u043B \u0430\u043C\u0436\u0438\u043B\u0442\u0442\u0430\u0439 \u04AF\u04AF\u0441\u043B\u044D\u044D. \u0411\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u0443\u0443\u043B\u0430\u0445 \u0445\u043E\u043B\u0431\u043E\u043E\u0441 \u0431\u04AF\u0445\u0438\u0439 \u0438\u043C\u044D\u0439\u043B\u0438\u0439\u0433\n                \u0442\u0430\u043D\u044B \u0431\u04AF\u0440\u0442\u0433\u04AF\u04AF\u043B\u0441\u044D\u043D \u0438\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0440\u0443\u0443 \u0438\u043B\u0433\u044D\u044D\u0441\u044D\u043D \u0431\u0430\u0439\u043D\u0430.\n              </p>\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n              >\n                \u042D\u0445\u043B\u044D\u043B \u0445\u0443\u0443\u0434\u0430\u0441 \u0440\u0443\u0443 \u043E\u0447\u0438\u0445\n              </button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { ArrowPathIcon, XCircleIcon } from '@heroicons/react/24/solid';\nimport { Link, useFetcher, useSearchParams } from '@remix-run/react';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { ErrorResult } from '~/generated/graphql';\nimport { Input } from '~/components/Input';\nimport { passwordValidator } from '~/validators';\n\nimport { action } from \"~/route-containers/authentication/reset-password.server\";\nexport { action };\n\n\nexport default function PasswordResetPage() {\n  const [searchParams] = useSearchParams();\n  const fetcher = useFetcher<ErrorResult>();\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0441\u044D\u0440\u0433\u044D\u044D\u0445</h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          \u042D\u0441\u0432\u044D\u043B{' '}\n          <Link\n            to=\"/sign-up\"\n            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n          >\n            \u0448\u0438\u043D\u044D \u0431\u04AF\u0440\u0442\u0433\u044D\u043B \u04AF\u04AF\u0441\u0433\u044D\u0445\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <ValidatedForm validator={passwordValidator} fetcher={fetcher} id=\"passwordResetForm\" method=\"POST\" action=\"/password-reset\">\n            <fieldset disabled={fetcher.state !== 'idle'} className=\"space-y-6\">\n              <input\n                type=\"hidden\"\n                name=\"redirectTo\"\n                value={searchParams.get('redirectTo') ?? undefined}\n              />\n              <div>\n                <Input\n                  label=\"\u0418\u043C\u044D\u0439\u043B\"\n                  name=\"email\"\n                  required\n                  autoComplete=\"email\"\n                 />\n              </div>\n\n              {fetcher.data && fetcher.state === 'idle' && (\n                <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <XCircleIcon\n                        className=\"h-5 w-5 text-red-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        \u0410\u043B\u0434\u0430\u0430\n                      </h3>\n                      <p className=\"text-sm text-red-700 mt-2\">\n                        \u0421\u0438\u0441\u0442\u0435\u043C\u0438\u0439\u043D \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u0441\u0430\u043D \u0442\u0443\u043B \u0442\u0430 \u0445\u044D\u0441\u044D\u0433 \u0445\u0443\u0433\u0430\u0446\u0430\u0430\u043D\u044B \u0434\u0430\u0440\u0430\u0430 \u0434\u0430\u0445\u0438\u043D \u043E\u0440\u043E\u043B\u0434\u043E\u043D\u043E \u0443\u0443!\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  <span className='flex gap-4 items-center'>\n                    {fetcher.state !== 'idle' && <ArrowPathIcon className=\"animate-spin h-5 w-5 text-gray-500\" />}\n                    \u041D\u0443\u0443\u0446 \u04AF\u0433 \u0441\u044D\u0440\u0433\u044D\u044D\u0445\n                  </span>\n                </button>\n              </div>\n            </fieldset>\n          </ValidatedForm>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport React from 'react';\nimport { useField } from 'remix-validated-form';\nimport FormElement from './FormElement';\n\ntype InputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'placeholder'\n> & {\n  label?: string;\n  name: string;\n};\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ name, label, required, ...props }, ref) => {\n    const { error, getInputProps } = useField(name);\n\n    return (\n      <FormElement name={name} label={label} required={required}>\n        <input\n          ref={ref}\n          {...props}\n          {...getInputProps()}\n          className={clsx(\n            'block w-full py-2 px-4 shadow-sm border bg-white rounded-md text-base sm:text-sm text-gray-900 border-gray-300 placeholder-gray-500',\n            'focus:ring-primary-500 focus:border-primary-500 focus:outline-none focus:ring-2 focus:placeholder-gray-400',\n            {\n              'border-rose-500 focus:border-rose-500': error,\n            },\n            props.className,\n          )}\n        >\n          {props.children}\n        </input>\n      </FormElement>\n    );\n  },\n);\n", "import clsx from 'clsx';\nimport React, { PropsWithChildren } from 'react';\nimport { useField } from 'remix-validated-form';\n\ntype FormElementProps = {\n  name: string;\n  label?: string;\n  required?: boolean;\n};\n\nconst FormElement: React.FC<PropsWithChildren<FormElementProps>> = ({\n  children,\n  label,\n  name,\n  required = false,\n}) => {\n  const { error } = useField(name);\n\n  return (\n    <div>\n      {label && (\n        <label htmlFor={name} className={clsx('text-sm text-gray-500')}>\n          {label}\n          {required && <span className=\"text-rose-500\">*</span>}\n        </label>\n      )}\n      <div className={label && \"mt-1\"}>{children}</div>\n      {error && (\n        <div className=\"pt-1 text-rose-500 text-sm\">\n          <span>{error}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormElement;", "import { withZod } from \"@remix-validated-form/with-zod\";\nimport { z } from \"zod\";\n\nexport const passwordValidator = withZod(\n  z.object({\n    email: z.string().min(1, { message: \"\u0418\u043C\u044D\u0439\u043B \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430!\" }).email(\"\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430!\"),\n  })\n);\n\n\nexport const emailValidator = withZod(\n  z.object({\n    email: z.string().min(1, { message: \"\u0418\u043C\u044D\u0439\u043B \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430!\" }).email(\"\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430!\"),\n  })\n);\n\n\nexport const loginValidator = withZod(\n  z.object({\n    email: z.string().min(1, { message: \"\u0418\u043C\u044D\u0439\u043B \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430!\" }).email(\"\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430!\"),\n    password: z.string().min(1, { message: \"\u041D\u0443\u0443\u0446 \u04AF\u0433\u044D\u044D \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443!\" }),\n  })\n);", "import { ActionArgs, json } from \"@remix-run/node\";\nimport { validationError } from \"remix-validated-form\";\nimport { passwordValidator } from \"~/validators\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  let [formData] = await Promise.all([\n    request.formData(),\n  ]);\n\n  const validationResult = await passwordValidator.validate(formData);\n  if (validationResult.error) return validationError(validationResult.error);\n\n  try {\n  } catch(error) {\n    console.error(error);\n  }\n\n  return json({});\n}", "import { Form, Link, useActionData, useSearchParams } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { registerCustomerAccount } from '~/providers/account/account';\nimport { XCircleIcon } from '@heroicons/react/24/solid';\nimport {\n  extractRegistrationFormValues,\n  RegisterValidationErrors,\n  validateRegistrationForm,\n} from '~/utils/registration-helper';\n\nexport async function action({ params, request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const fieldErrors = validateRegistrationForm(body);\n  if (Object.keys(fieldErrors).length !== 0) {\n    return fieldErrors;\n  }\n\n  const variables = extractRegistrationFormValues(body);\n  const result = await registerCustomerAccount({ request }, variables);\n  if (result.__typename === 'Success') {\n    return redirect('/sign-up/success');\n  } else {\n    const formError: RegisterValidationErrors = {\n      form: result.errorCode,\n    };\n    return json(formError, { status: 401 });\n  }\n}\n\nexport default function SignUpPage() {\n  const [searchParams] = useSearchParams();\n  const formErrors = useActionData<RegisterValidationErrors>();\n\n  return (\n    <>\n      <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\n            \u0411\u04AF\u0440\u0442\u0433\u04AF\u04AF\u043B\u044D\u0445\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            \u042D\u0441\u0432\u044D\u043B{' '}\n            <Link\n              to=\"/sign-in\"\n              className=\"font-medium text-primary-600 hover:text-primary-500\"\n            >\n              \u04E9\u04E9\u0440\u0438\u0439\u043D \u0431\u04AF\u0440\u0442\u0433\u044D\u043B\u044D\u044D\u0440 \u043D\u044D\u0432\u0442\u0440\u044D\u0445\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <Form className=\"space-y-6\" method=\"post\">\n              <input\n                type=\"hidden\"\n                name=\"redirectTo\"\n                value={searchParams.get('redirectTo') ?? undefined}\n              />\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.email && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.email}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"firstName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  First name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    autoComplete=\"given-name\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"lastName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Last name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    autoComplete=\"family-name\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.password && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.password}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label\n                  htmlFor=\"repeatPassword\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Repeat Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"repeatPassword\"\n                    name=\"repeatPassword\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.repeatPassword && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.repeatPassword}\n                    </div>\n                  )}\n                </div>\n              </div>\n              {formErrors?.form && (\n                <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <XCircleIcon\n                        className=\"h-5 w-5 text-red-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        We ran into a problem while creating your account!\n                      </h3>\n                      <p className=\"text-sm text-red-700 mt-2\">\n                        {formErrors.form}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  \u0411\u04AF\u0440\u0442\u0433\u04AF\u04AF\u043B\u044D\u0445\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { RegisterCustomerAccountMutationVariables } from '~/generated/graphql';\n\nconst EMAIL_REGEX = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n\nexport type RegisterValidationErrors = {\n  form?: string;\n  email?: string;\n  password?: string;\n  repeatPassword?: string;\n};\n\nexport const validateRegistrationForm = (\n  formData: FormData,\n): RegisterValidationErrors => {\n  const errors: RegisterValidationErrors = {};\n  const email = formData.get('email');\n  const password = formData.get('password');\n  const repeatPassword = formData.get('repeatPassword');\n\n  if (!email || typeof email !== 'string' || !email.match(EMAIL_REGEX)) {\n    errors.email = 'A valid e-mail address is required.';\n  }\n  if (!password || typeof password !== 'string' || password.length < 4) {\n    errors.password = 'Minimum password length is 4 symbols.';\n  }\n  if (!repeatPassword || typeof repeatPassword !== 'string') {\n    errors.repeatPassword = 'Please repeat password!';\n  }\n  if (repeatPassword !== password) {\n    errors.repeatPassword = 'Passwords do not match!';\n  }\n\n  console.log(errors);\n  return errors;\n};\n\nexport const extractRegistrationFormValues = (\n  formData: FormData,\n): RegisterCustomerAccountMutationVariables => {\n  const input: RegisterCustomerAccountMutationVariables['input'] = {\n    emailAddress: formData.get('email') as string,\n    firstName: (formData.get('firstName') as string) || void 0,\n    lastName: (formData.get('lastName') as string) || void 0,\n    password: formData.get('password') as string,\n  };\n\n  return { input };\n};\n", "export default function TrackOrderPage() {\n  return (\n    <>\n      Track Order\n    </>\n  );\n}", "import { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { logout } from '~/providers/account/account';\n\nexport async function action({ request }: DataFunctionArgs) {\n  const result = await logout({ request });\n  return redirect('/', { headers: result._headers });\n}\n\nexport async function loader() {\n  return redirect('/');\n}\n", "import { ActionArgs } from \"@remix-run/node\";\nimport { withZod } from \"@remix-validated-form/with-zod\";\nimport { z } from \"zod\";\n\nexport const validator = withZod(\n  z.object({\n    email: z.string().min(1, { message: \"\u0418\u043C\u044D\u0439\u043B \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430!\" }).email(\"\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430!\"),\n  })\n);\n\nexport const action = async ({ request }: ActionArgs) => {\n  const body = await request.formData();\n  const email = body.get('email');\n}\n ", "import { ChevronRightIcon } from '@heroicons/react/24/solid';\nimport { Outlet, useLocation, useOutletContext } from '@remix-run/react';\nimport { CartContents } from '~/components/cart/CartContents';\nimport { OutletContext } from '~/types';\nimport { classNames } from '~/utils/class-names';\nimport { CartTotals } from '~/components/cart/CartTotals';\n\nconst steps = [\n  { name: '\u0425\u04AF\u0440\u0433\u044D\u043B\u0442', state: 'shipping' },\n  { name: '\u0422\u04E9\u043B\u0431\u04E9\u0440', state: 'payment' },\n  { name: '\u0411\u0430\u044F\u0440\u043B\u0430\u043B\u0430\u0430', state: 'confirmation' },\n];\n\nexport default function Checkout() {\n  const outletContext = useOutletContext<OutletContext>();\n  const { activeOrder, adjustOrderLine, removeItem } = outletContext;\n  const location = useLocation();\n  let state = 'shipping';\n  if (location.pathname === '/checkout/payment') {\n    state = 'payment';\n  } else if (location.pathname.startsWith('/checkout/confirmation')) {\n    state = 'confirmation';\n  }\n  let isConfirmationPage = state === 'confirmation';\n\n  return (\n    <div className=\"bg-gray-50\">\n      <div\n        className={classNames(\n          isConfirmationPage ? 'lg:max-w-3xl mx-auto' : 'lg:max-w-7xl',\n          'max-w-2xl mx-auto pt-8 pb-24 px-4 sm:px-6 lg:px-8',\n        )}\n      >\n        <h2 className=\"sr-only\">Checkout</h2>\n        <nav\n          aria-label=\"Progress\"\n          className=\"hidden sm:block pb-8 mb-8 border-b\"\n        >\n          <ol role=\"list\" className=\"flex space-x-4 justify-center\">\n            {steps.map((step, stepIdx) => (\n              <li key={step.name} className=\"flex items-center\">\n                {step.state === state ? (\n                  <span aria-current=\"page\" className=\"text-primary-600\">\n                    {step.name}\n                  </span>\n                ) : (\n                  <span>{step.name}</span>\n                )}\n\n                {stepIdx !== steps.length - 1 ? (\n                  <ChevronRightIcon\n                    className=\"w-5 h-5 text-gray-300 ml-4\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n              </li>\n            ))}\n          </ol>\n        </nav>\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16\">\n          <div className={isConfirmationPage ? 'lg:col-span-2' : ''}>\n            <Outlet context={outletContext} />\n          </div>\n\n          {/* Order summary */}\n          {!isConfirmationPage && (\n            <div className=\"mt-10 lg:mt-0\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n                \u0417\u0430\u0445\u0438\u0430\u043B\u0433\u044B\u043D \u043C\u044D\u0434\u044D\u044D\u043B\u044D\u043B\n              </h2>\n\n              <CartContents\n                orderLines={activeOrder?.lines ?? []}\n                currencyCode={activeOrder?.currencyCode!}\n                editable={state === 'shipping'}\n                removeItem={removeItem}\n                adjustOrderLine={adjustOrderLine}\n              ></CartContents>\n              <CartTotals order={activeOrder}></CartTotals>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Price } from '~/components/products/Price';\nimport { OrderDetailFragment } from '~/generated/graphql';\n\nexport function CartTotals({ order }: { order?: OrderDetailFragment | null }) {\n  return (\n    <dl className=\"border-t mt-6 border-gray-200 py-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <dt className=\"text-sm\">\u0414\u04AF\u043D</dt>\n        <dd className=\"text-sm font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.subTotalWithTax}\n            currencyCode={order?.currencyCode}\n          />\n        </dd>\n      </div>\n      <div className=\"flex items-center justify-between\">\n        <dt className=\"text-sm\">\u0425\u04AF\u0440\u0433\u044D\u043B\u0442</dt>\n        <dd className=\"text-sm font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.shippingWithTax ?? 0}\n            currencyCode={order?.currencyCode}\n          />\n        </dd>\n      </div>\n      <div className=\"flex items-center justify-between border-t border-gray-200 pt-6\">\n        <dt className=\"text-base font-medium\">\u041D\u0438\u0439\u0442 \u0434\u04AF\u043D</dt>\n        <dd className=\"text-base font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.totalWithTax}\n            currencyCode={order?.currencyCode}\n          />\n        </dd>\n      </div>\n    </dl>\n  );\n}\n", "import { DataFunctionArgs } from '@remix-run/server-runtime';\nimport { getOrderByCode } from '~/providers/orders/order';\nimport { useLoaderData } from '@remix-run/react';\nimport { CartContents } from '~/components/cart/CartContents';\nimport { CartTotals } from '~/components/cart/CartTotals';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { InformationCircleIcon } from '@heroicons/react/24/solid';\nimport { useRevalidator } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport { OrderDetailFragment } from '~/generated/graphql';\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  try {\n    const order = await getOrderByCode(params.orderCode!, { request });\n    return {\n      order,\n      error: false,\n    };\n  } catch (ex) {\n    return {\n      order: null,\n      error: true,\n    };\n  }\n}\n\nexport default function CheckoutConfirmation() {\n  const { order, error } = useLoaderData<typeof loader>();\n  const revalidator = useRevalidator();\n  const [retries, setRetries] = useState(1);\n\n  const orderNotFound = !order && !error;\n  const orderErrored = !order && error;\n  const maxRetries = 5;\n  const retriesExhausted = retries >= maxRetries;\n  const retryTimeout = 2500;\n\n  const retry = () => {\n    if (!window) return;\n    setRetries(retries + 1);\n    window.setTimeout(() => {\n      if (retries > maxRetries) return;\n      revalidator.revalidate();\n    }, retryTimeout);\n  };\n\n  useEffect(() => {\n    if (orderErrored) {\n      retry();\n    }\n  }, [order]);\n\n  useEffect(() => {\n    if (\n      revalidator.state === 'idle' &&\n      orderErrored &&\n      retries <= maxRetries &&\n      retries > 1\n    ) {\n      retry();\n    }\n  }, [revalidator.state]);\n\n  if (orderNotFound) {\n    return (\n      <div>\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          No matching order found!\n        </h2>\n      </div>\n    );\n  }\n\n  if (orderErrored && retriesExhausted) {\n    return (\n      <div>\n        <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          <XCircleIcon className=\"text-red-600 w-8 h-8 sm:w-12 sm:h-12\"></XCircleIcon>\n          <span>An error occured!</span>\n        </h2>\n        <p className=\"text-lg text-gray-700\">\n          Unfortunately your payment could not be processed or this confirmation\n          link has expired.\n        </p>\n      </div>\n    );\n  }\n\n  if (orderErrored) {\n    return (\n      <div>\n        <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          Please wait while we process your order...\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        <CheckCircleIcon className=\"text-green-600 w-8 h-8 sm:w-12 sm:h-12\"></CheckCircleIcon>\n        <span>\u0411\u0430\u044F\u0440\u043B\u0430\u043B\u0430\u0430</span>\n      </h2>\n      <p className=\"text-lg text-gray-700\">\n        \u0422\u0430\u043D\u044B <span className=\"font-bold\">{order!.code}</span> \u0434\u0443\u0433\u0430\u0430\u0440\u0442\u0430\u0439 \u0437\u0430\u0445\u0438\u0430\u043B\u0433\u044B\u0433 \u0445\u04AF\u043B\u044D\u044D\u043D \u0430\u0432\u043B\u0430\u0430!\n      </p>\n      {order!.active && (\n        <div className=\"rounded-md bg-blue-50 p-4 my-8\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <InformationCircleIcon\n                className=\"h-5 w-5 text-blue-400\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n              <p className=\"text-sm text-blue-700\">\n                {' '}\n                Note: your payment is still being processed. You will receive an\n                email confirmation once the payment has completed.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"mt-12\">\n        <div className=\"mb-6\">\n          <CartContents\n            orderLines={order!.lines}\n            currencyCode={order!.currencyCode}\n            editable={false}\n          />\n        </div>\n        <CartTotals order={order as OrderDetailFragment}></CartTotals>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData, useOutletContext } from '@remix-run/react';\nimport { ErrorCode, ErrorResult } from '~/generated/graphql';\nimport { OutletContext } from '~/types';\n\nimport { action, loader } from \"~/route-containers/checkout/payment.server\";\nimport { DirectDepositPayment } from '~/components/checkout/DirectDepositPayment';\nexport { action, loader };\n\n\nexport default function CheckoutPayment() {\n  const {\n    eligiblePaymentMethods,\n    error,\n  } = useLoaderData();\n  const { activeOrderFetcher, activeOrder } = useOutletContext<OutletContext>();\n\n  const paymentError = getPaymentError(error);\n\n  return (\n    <div className=\"flex flex-col items-center divide-gray-200 divide-y\">\n      {eligiblePaymentMethods.map((paymentMethod: any) =>\n        <div className=\"py-12\" key={paymentMethod.id}>\n          <DirectDepositPayment\n            paymentMethod={paymentMethod}\n            paymentError={paymentError}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction getPaymentError(error?: ErrorResult): string | undefined {\n  if (!error || !error.errorCode) {\n    return undefined;\n  }\n  switch (error.errorCode) {\n    case ErrorCode.OrderPaymentStateError:\n    case ErrorCode.IneligiblePaymentMethodError:\n    case ErrorCode.PaymentFailedError:\n    case ErrorCode.PaymentDeclinedError:\n    case ErrorCode.OrderStateTransitionError:\n    case ErrorCode.NoActiveOrderError:\n      return error.message;\n  }\n}\n", "import { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport {\n    addPaymentToOrder,\n    getEligiblePaymentMethods,\n    getNextOrderStates,\n    transitionOrderToState\n} from '~/providers/checkout/checkout';\nimport { getActiveOrder } from '~/providers/orders/order';\nimport { sessionStorage } from '~/servers/session.server';\n\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n  const activeOrder = await getActiveOrder({ request });\n\n  //check if there is an active order if not redirect to homepage\n  if (\n    !session ||\n    !activeOrder ||\n    !activeOrder.active ||\n    activeOrder.lines.length === 0\n  ) {\n    return redirect('/');\n  }\n\n  const { eligiblePaymentMethods } = await getEligiblePaymentMethods({\n    request,\n  });\n  const error = session.get('activeOrderError');\n  return {\n    eligiblePaymentMethods,\n    error,\n  };\n}\n\n\nexport async function action({ params, request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const paymentMethodCode = body.get('paymentMethodCode');\n  const paymentNonce = body.get('paymentNonce');\n  if (typeof paymentMethodCode === 'string') {\n    const { nextOrderStates } = await getNextOrderStates({\n      request,\n    });\n    if (nextOrderStates.includes('ArrangingPayment')) {\n      const transitionResult = await transitionOrderToState(\n        'ArrangingPayment',\n        { request },\n      );\n      if (transitionResult.transitionOrderToState?.__typename !== 'Order') {\n        throw new Response('Not Found', {\n          status: 400,\n          statusText: transitionResult.transitionOrderToState?.message,\n        });\n      }\n    }\n\n    const result = await addPaymentToOrder(\n      { method: paymentMethodCode, metadata: { nonce: paymentNonce } },\n      { request },\n    );\n    if (result.addPaymentToOrder.__typename === 'Order') {\n      return redirect(\n        `/checkout/confirmation/${result.addPaymentToOrder.code}`,\n      );\n    } else {\n      throw new Response('Not Found', {\n        status: 400,\n        statusText: result.addPaymentToOrder?.message,\n      });\n    }\n  }\n}", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { PaymentInput } from '~/generated/graphql';\n\nexport function getAvailableCountries(options: QueryOptions) {\n  return sdk.availableCountries({}, options);\n}\n\nexport function getEligibleShippingMethods(options: QueryOptions) {\n  return sdk.eligibleShippingMethods({}, options);\n}\n\nexport function getEligiblePaymentMethods(options: QueryOptions) {\n  return sdk.eligiblePaymentMethods({}, options);\n}\n\nexport function generateBraintreeClientToken(options: QueryOptions) {\n  return sdk.generateBraintreeClientToken({}, options);\n}\n\nexport function createStripePaymentIntent(options: QueryOptions) {\n  return sdk.createStripePaymentIntent({}, options);\n}\n\nexport function getNextOrderStates(options: QueryOptions) {\n  return sdk.nextOrderStates({}, options);\n}\n\nexport function addPaymentToOrder(input: PaymentInput, options: QueryOptions) {\n  return sdk.addPaymentToOrder({ input }, options);\n}\n\nexport function transitionOrderToState(state: string, options: QueryOptions) {\n  return sdk.transitionOrderToState({ state }, options);\n}\n\ngql`\n  query eligibleShippingMethods {\n    eligibleShippingMethods {\n      id\n      name\n      description\n      metadata\n      price\n      priceWithTax\n    }\n  }\n`;\n\ngql`\n  query eligiblePaymentMethods {\n    eligiblePaymentMethods {\n      id\n      code\n      name\n      description\n      eligibilityMessage\n      isEligible\n    }\n  }\n`;\n\ngql`\n  query nextOrderStates {\n    nextOrderStates\n  }\n`;\n\ngql`\n  query availableCountries {\n    availableCountries {\n      id\n      name\n      code\n    }\n  }\n`;\n\ngql`\n  mutation addPaymentToOrder($input: PaymentInput!) {\n    addPaymentToOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation transitionOrderToState($state: String!) {\n    transitionOrderToState(state: $state) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation createStripePaymentIntent {\n    createStripePaymentIntent\n  }\n`;\n\ngql`\n  query generateBraintreeClientToken {\n    generateBraintreeClientToken\n  }\n`;\n", "import { CreditCardIcon, XCircleIcon } from '@heroicons/react/24/solid';\nimport { Form } from '@remix-run/react';\nimport { EligiblePaymentMethodsQuery } from '~/generated/graphql';\nimport { HighlightedButton } from '../HighlightedButton';\n\nexport function DirectDepositPayment({\n  paymentMethod,\n  paymentError,\n}: {\n  paymentMethod: EligiblePaymentMethodsQuery['eligiblePaymentMethods'][number];\n  paymentError?: string;\n}) {\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-gray-600 text-sm p-6\">\n        \u0422\u0430 \u0442\u04E9\u043B\u0431\u04E9\u0440\u0438\u0439\u043D \u0445\u044D\u0440\u044D\u0433\u0441\u044D\u043B\u044D\u044D \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443?\n      </p>\n      {paymentError && (\n        <div className=\"rounded-md bg-red-50 p-4 mb-8\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <XCircleIcon\n                className=\"h-5 w-5 text-red-400\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                \u0422\u04E9\u043B\u0431\u04E9\u0440\u0438\u0439\u0433 \u0445\u04AF\u043B\u044D\u044D\u043D \u0430\u0432\u0430\u0445\u0430\u0434 \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430!\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">{paymentError}</div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Form method=\"post\">\n        <input\n          type=\"hidden\"\n          name=\"paymentMethodCode\"\n          value={paymentMethod.code}\n        />\n        <HighlightedButton>\n          <CreditCardIcon className=\"w-5 h-5\"></CreditCardIcon>\n          <span>\u0414\u0430\u043D\u0441\u0430\u0430\u0440 \u0442\u04E9\u043B\u04E9\u0445</span>\n        </HighlightedButton>\n      </Form>\n    </div>\n  );\n}\n", "import { ArrowPathIcon } from '@heroicons/react/24/outline';\nimport { SfButton } from '@storefront-ui/react';\n\ntype HighlightedButtonProps = React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>> & {\n  isSubmitting?: boolean;\n}\n\nexport function HighlightedButton(\n  { isSubmitting = false, ...props }: HighlightedButtonProps,\n) {\n  return (\n    <SfButton\n      disabled={isSubmitting}\n      {...props}\n    >\n      {props.children}\n      {isSubmitting && <ArrowPathIcon className='w-4 h-4 animate-spin'></ArrowPathIcon>}\n    </SfButton>\n  );\n}\n", "import { FormEvent, useState } from 'react';\nimport { LockClosedIcon } from '@heroicons/react/24/solid';\nimport {\n  Form,\n  useLoaderData,\n  useNavigate,\n  useOutletContext,\n} from '@remix-run/react';\nimport { OutletContext } from '~/types';\nimport { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport {\n  getAvailableCountries,\n  getEligibleShippingMethods,\n} from '~/providers/checkout/checkout';\nimport { shippingFormDataIsValid } from '~/utils/validation';\nimport { sessionStorage } from '~/servers/session.server';\nimport { classNames } from '~/utils/class-names';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\nimport { AddressForm } from '~/components/account/AddressForm';\nimport { ShippingMethodSelector } from '~/components/checkout/ShippingMethodSelector';\nimport { ShippingAddressSelector } from '~/components/checkout/ShippingAddressSelector';\nimport { getActiveOrder } from '~/providers/orders/order';\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n\n  const activeOrder = await getActiveOrder({ request });\n  \n  //check if there is an active order if not redirect to homepage\n  if (\n    !session ||\n    !activeOrder ||\n    !activeOrder.active ||\n    activeOrder.lines.length === 0\n  ) {\n    return redirect('/');\n  }\n  const { availableCountries } = await getAvailableCountries({ request });\n  const { eligibleShippingMethods } = await getEligibleShippingMethods({\n    request,\n  });\n  const { activeCustomer } = await getActiveCustomerAddresses({ request });\n  const error = session.get('activeOrderError');\n  return {\n    availableCountries,\n    eligibleShippingMethods,\n    activeCustomer,\n    error,\n  };\n}\n\nexport default function CheckoutShipping() {\n  const { availableCountries, eligibleShippingMethods, activeCustomer, error } =\n    useLoaderData<typeof loader>();\n  const { activeOrderFetcher, activeOrder } = useOutletContext<OutletContext>();\n  const [customerFormChanged, setCustomerFormChanged] = useState(false);\n  const [addressFormChanged, setAddressFormChanged] = useState(false);\n  const [selectedAddressIndex, setSelectedAddressIndex] = useState(0);\n  let navigate = useNavigate();\n\n  const { customer, shippingAddress } = activeOrder ?? {};\n  const isSignedIn = !!activeCustomer?.id;\n  const addresses = activeCustomer?.addresses ?? [];\n  const defaultFullName =\n    shippingAddress?.fullName ??\n    (customer ? `${customer.firstName} ${customer.lastName}` : ``);\n  const canProceedToPayment =\n    customer &&\n    ((shippingAddress?.streetLine1 && shippingAddress?.postalCode) ||\n      selectedAddressIndex != null) &&\n    activeOrder?.shippingLines?.length &&\n    activeOrder?.lines?.length;\n\n  const submitCustomerForm = (event: FormEvent<HTMLFormElement>) => {\n    const formData = new FormData(event.currentTarget);\n    const { emailAddress, firstName, lastName } = Object.fromEntries<any>(\n      formData.entries(),\n    );\n    const isValid = event.currentTarget.checkValidity();\n    if (\n      customerFormChanged &&\n      isValid &&\n      emailAddress &&\n      firstName &&\n      lastName\n    ) {\n      activeOrderFetcher.submit(formData, {\n        method: 'post',\n        action: '/api/active-order',\n      });\n      setCustomerFormChanged(false);\n    }\n  };\n  const submitAddressForm = (event: FormEvent<HTMLFormElement>) => {\n    const formData = new FormData(event.currentTarget);\n    const isValid = event.currentTarget.checkValidity();\n    if (addressFormChanged && isValid) {\n      setShippingAddress(formData);\n    }\n  };\n  const submitSelectedAddress = (index: number) => {\n    const selectedAddress = activeCustomer?.addresses?.[index];\n    if (selectedAddress) {\n      setSelectedAddressIndex(index);\n      const formData = new FormData();\n      Object.keys(selectedAddress).forEach((key) =>\n        formData.append(key, (selectedAddress as any)[key]),\n      );\n      formData.append('countryCode', selectedAddress.country.code);\n      formData.append('action', 'setCheckoutShipping');\n      setShippingAddress(formData);\n    }\n  };\n\n  function setShippingAddress(formData: FormData) {\n    if (shippingFormDataIsValid(formData)) {\n      activeOrderFetcher.submit(formData, {\n        method: 'post',\n        action: '/api/active-order',\n      });\n      setAddressFormChanged(false);\n    }\n  }\n\n  const submitSelectedShippingMethod = (value?: string) => {\n    if (value) {\n      activeOrderFetcher.submit(\n        {\n          action: 'setShippingMethod',\n          shippingMethodId: value,\n        },\n        {\n          method: 'post',\n          action: '/api/active-order',\n        },\n      );\n    }\n  };\n\n  function navigateToPayment() {\n    navigate('./payment');\n  }\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"text-lg font-medium text-gray-900\">\n          \u0417\u0430\u0445\u0438\u0430\u043B\u0430\u0433\u0447\u0438\u0439\u043D \u043C\u044D\u0434\u044D\u044D\u043B\u044D\u043B\n        </h2>\n\n        {isSignedIn ? (\n          <div>\n            <p className=\"mt-2 text-gray-600\">\n              {customer?.firstName} {customer?.lastName}\n            </p>\n            <p>{customer?.emailAddress}</p>\n          </div>\n        ) : (\n          <Form\n            method=\"post\"\n            action=\"/api/active-order\"\n            onBlur={submitCustomerForm}\n            onChange={() => setCustomerFormChanged(true)}\n            hidden={isSignedIn}\n          >\n            <input type=\"hidden\" name=\"action\" value=\"setOrderCustomer\" />\n            <div className=\"mt-4\">\n              <label\n                htmlFor=\"emailAddress\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                \u0418\u043C\u044D\u0439\u043B\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  type=\"email\"\n                  id=\"emailAddress\"\n                  name=\"emailAddress\"\n                  autoComplete=\"email\"\n                  defaultValue={customer?.emailAddress}\n                  className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                />\n              </div>\n              {error?.errorCode === 'EMAIL_ADDRESS_CONFLICT_ERROR' && (\n                <p className=\"mt-2 text-sm text-red-600\" id=\"email-error\">\n                  {error.message}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n              <div>\n                <label\n                  htmlFor=\"firstName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  \u041D\u044D\u0440\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    autoComplete=\"given-name\"\n                    defaultValue={customer?.firstName}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"lastName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  \u041E\u0432\u043E\u0433\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    autoComplete=\"family-name\"\n                    defaultValue={customer?.lastName}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </div>\n\n      <Form\n        method=\"post\"\n        action=\"/api/active-order\"\n        onBlur={submitAddressForm}\n        onChange={() => setAddressFormChanged(true)}\n      >\n        <input type=\"hidden\" name=\"action\" value=\"setCheckoutShipping\" />\n        <div className=\"mt-10 border-t border-gray-200 pt-10\">\n          <h2 className=\"text-lg font-medium text-gray-900\">\n            \u0425\u04AF\u0440\u0433\u044D\u043B\u0442\u0438\u0439\u043D \u0445\u0430\u044F\u0433\n          </h2>\n        </div>\n        {isSignedIn && activeCustomer.addresses?.length ? (\n          <div>\n            <ShippingAddressSelector\n              addresses={activeCustomer.addresses}\n              selectedAddressIndex={selectedAddressIndex}\n              onChange={submitSelectedAddress}\n            />\n          </div>\n        ) : (\n          <AddressForm\n            availableCountries={activeOrder ? availableCountries : undefined}\n            address={shippingAddress}\n            defaultFullName={defaultFullName}\n          />\n        )}\n      </Form>\n\n      <div className=\"mt-10 border-t border-gray-200 pt-10\">\n        <ShippingMethodSelector\n          eligibleShippingMethods={eligibleShippingMethods}\n          currencyCode={activeOrder?.currencyCode}\n          shippingMethodId={activeOrder?.shippingLines[0]?.shippingMethod.id}\n          onChange={submitSelectedShippingMethod}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        disabled={!canProceedToPayment}\n        onClick={navigateToPayment}\n        className={classNames(\n          canProceedToPayment\n            ? 'bg-indigo-600 hover:bg-indigo-700'\n            : 'bg-gray-400',\n          'flex w-full items-center justify-center space-x-2 mt-24 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500',\n        )}\n      >\n        <LockClosedIcon className=\"w-5 h-5\"></LockClosedIcon>\n        <span>\u04AE\u0440\u0433\u044D\u043B\u0436\u043B\u04AF\u04AF\u043B\u044D\u0445</span>\n      </button>\n    </div>\n  );\n}\n", "import { AvailableCountriesQuery, OrderAddress } from '~/generated/graphql';\n\nexport function AddressForm({\n  address,\n  defaultFullName,\n  availableCountries,\n}: {\n  address?: OrderAddress | null;\n  defaultFullName?: string;\n  availableCountries?: AvailableCountriesQuery['availableCountries'];\n}) {\n  return (\n    <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n      <div>\n        <label\n          htmlFor=\"fullName\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          \u041D\u044D\u0440\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            name=\"fullName\"\n            defaultValue={defaultFullName}\n            autoComplete=\"given-name\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"company\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          \u041A\u043E\u043C\u043F\u0430\u043D\u0438\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"company\"\n            id=\"company\"\n            defaultValue={address?.company ?? ''}\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"streetLine1\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          \u0425\u0430\u044F\u0433\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"streetLine1\"\n            id=\"streetLine1\"\n            defaultValue={address?.streetLine1 ?? ''}\n            autoComplete=\"street-address\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"countryCode\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          \u0425\u043E\u0442 / \u0410\u0439\u043C\u0430\u0433\n        </label>\n        <div className=\"mt-1\">\n          {availableCountries && (\n            <select\n              id=\"countryCode\"\n              name=\"countryCode\"\n              defaultValue={address?.countryCode ?? 'ulaanbaatar'}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n            >\n              {availableCountries.map((item) => (\n                <option key={item.id} value={item.code}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n\n      {/* <div>\n        <label\n          htmlFor=\"province\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          State / Province\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"province\"\n            id=\"province\"\n            defaultValue={address?.province ?? ''}\n            autoComplete=\"address-level1\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div> */}\n\n      {/* <div>\n        <label\n          htmlFor=\"postalCode\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          Postal code\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"postalCode\"\n            id=\"postalCode\"\n            defaultValue={address?.postalCode ?? ''}\n            autoComplete=\"postal-code\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n\n      </div> */}\n\n      <div>\n        <label\n          htmlFor=\"phoneNumber\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          \u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"phoneNumber\"\n            id=\"phoneNumber\"\n            defaultValue={address?.phoneNumber ?? ''}\n            autoComplete=\"tel\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { RadioGroup } from '@headlessui/react';\nimport { classNames } from '~/utils/class-names';\nimport { Price } from '~/components/products/Price';\nimport { CheckCircleIcon } from '@heroicons/react/24/solid';\nimport * as React from 'react';\nimport {\n  CurrencyCode,\n  EligibleShippingMethodsQuery,\n} from '~/generated/graphql';\n\nexport function ShippingMethodSelector({\n  eligibleShippingMethods,\n  currencyCode,\n  shippingMethodId,\n  onChange,\n}: {\n  eligibleShippingMethods: EligibleShippingMethodsQuery['eligibleShippingMethods'];\n  shippingMethodId: string | undefined;\n  onChange: (value?: string) => void;\n  currencyCode?: CurrencyCode;\n}) {\n  return (\n    <RadioGroup value={shippingMethodId} onChange={onChange}>\n      <RadioGroup.Label className=\"text-lg font-medium text-gray-900\">\n        \u0425\u04AF\u0440\u0433\u044D\u043B\u0442\u0438\u0439\u043D \u0442\u04E9\u0440\u04E9\u043B\n      </RadioGroup.Label>\n\n      <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n        {eligibleShippingMethods.map((shippingMethod) => (\n          <RadioGroup.Option\n            key={shippingMethod.id}\n            value={shippingMethod.id}\n            className={({ checked, active }) =>\n              classNames(\n                checked ? 'border-transparent' : 'border-gray-300',\n                active ? 'ring-2 ring-indigo-500' : '',\n                'relative bg-white border rounded-lg shadow-sm p-4 flex cursor-pointer focus:outline-none',\n              )\n            }\n          >\n            {({ checked, active }) => (\n              <>\n                <span className=\"flex-1 flex\">\n                  <span className=\"flex flex-col\">\n                    <RadioGroup.Label\n                      as=\"span\"\n                      className=\"block text-sm font-medium text-gray-900\"\n                    >\n                      {shippingMethod.name}\n                    </RadioGroup.Label>\n                    <RadioGroup.Description\n                      as=\"span\"\n                      className=\"mt-6 text-sm font-medium text-gray-900\"\n                    >\n                      <Price\n                        priceWithTax={shippingMethod.priceWithTax}\n                        currencyCode={currencyCode}\n                      ></Price>\n                    </RadioGroup.Description>\n                  </span>\n                </span>\n                {checked ? (\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-indigo-600\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n                <span\n                  className={classNames(\n                    active ? 'border' : 'border-2',\n                    checked ? 'border-indigo-500' : 'border-transparent',\n                    'absolute -inset-px rounded-lg pointer-events-none',\n                  )}\n                  aria-hidden=\"true\"\n                />\n              </>\n            )}\n          </RadioGroup.Option>\n        ))}\n      </div>\n    </RadioGroup>\n  );\n}\n", "import { RadioGroup } from '@headlessui/react';\nimport { CheckCircleIcon } from '@heroicons/react/24/solid';\nimport {\n  ActiveCustomerAddressesQuery\n} from '~/generated/graphql';\nimport { classNames } from '~/utils/class-names';\n\nexport type SelectedAddress = NonNullable<\n  NonNullable<ActiveCustomerAddressesQuery['activeCustomer']>['addresses']\n>[number];\n\nexport function ShippingAddressSelector({\n  addresses,\n  selectedAddressIndex,\n  onChange,\n}: {\n  addresses: SelectedAddress[];\n  selectedAddressIndex: number;\n  onChange: (value: number) => void;\n}) {\n  return (\n    <RadioGroup value={selectedAddressIndex} onChange={onChange}>\n      <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n        {(addresses || []).map((address, index) => (\n          <RadioGroup.Option\n            key={index}\n            value={index}\n            className={({ checked, active }) =>\n              classNames(\n                checked ? 'border-transparent' : 'border-gray-300',\n                active ? 'ring-2 ring-indigo-500' : '',\n                'relative bg-white border rounded-lg shadow-sm p-4 flex cursor-pointer focus:outline-none',\n              )\n            }\n          >\n            {({ checked, active }) => (\n              <>\n                <span className=\"flex-1 flex\">\n                  <span className=\"flex flex-col\">\n                    <RadioGroup.Label\n                      as=\"span\"\n                      className=\"block text-sm font-medium text-gray-900\"\n                    >\n                      {address.fullName} - {address.phoneNumber}\n                    </RadioGroup.Label>\n                    <RadioGroup.Description\n                      as=\"span\"\n                      className=\"mt-6 text-sm text-gray-800\"\n                    >\n                      <ul>\n                        <li>{address.streetLine1},</li>\n                        {/* <li>{address.streetLine2}</li> */}\n                        {/* <li>{address.city}</li> */}\n                        {/* <li>{address.province}</li> */}\n                        {/* <li>{address.postalCode}</li> */}\n                        <li>{address.country.name}</li>\n                      </ul>\n                    </RadioGroup.Description>\n                  </span>\n                </span>\n                {checked ? (\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-indigo-600\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n                <span\n                  className={classNames(\n                    active ? 'border' : 'border-2',\n                    checked ? 'border-indigo-500' : 'border-transparent',\n                    'absolute -inset-px rounded-lg pointer-events-none',\n                  )}\n                  aria-hidden=\"true\"\n                />\n              </>\n            )}\n          </RadioGroup.Option>\n        ))}\n      </div>\n    </RadioGroup>\n  );\n}\n", "import {\n  KeyIcon,\n  MapPinIcon,\n  ShoppingBagIcon,\n  UserCircleIcon\n} from '@heroicons/react/24/solid';\nimport { Link, Outlet, useLocation } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { getActiveCustomerDetails } from '~/providers/customer/customer';\nimport { classNames } from '~/utils/class-names';\n\nconst subNavigation = [\n  { name: '\u041F\u0440\u043E\u0444\u0430\u0439\u043B', href: '/account', icon: UserCircleIcon },\n  { name: '\u0417\u0430\u0445\u0438\u0430\u043B\u0433\u0430', href: '/account/orders', icon: ShoppingBagIcon },\n  { name: '\u0425\u0430\u044F\u0433', href: '/account/addresses', icon: MapPinIcon },\n  { name: '\u041D\u0443\u0443\u0446 \u04AF\u0433', href: '/account/password', icon: KeyIcon },\n]\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerDetails({ request });\n  if (!activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({ activeCustomer });\n}\n\nexport default function AccountDashboard() {\n  const location = useLocation();\n  return (\n    <main className=\"mx-auto max-w-7xl pb-10 lg:py-12 lg:px-8\">\n      <div className=\"lg:grid lg:grid-cols-12 lg:gap-x-5\">\n        <aside className=\"py-6 px-2 sm:px-6 lg:col-span-3 lg:py-0 lg:px-0\">\n          <nav className=\"space-y-1\">\n            {subNavigation.map((item) => (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={classNames(\n                  item.href === location.pathname\n                    ? 'bg-gray-50 text-orange-600 hover:bg-white'\n                    : 'text-gray-900 hover:text-gray-900 hover:bg-gray-50',\n                  'group rounded-md px-3 py-2 flex items-center text-sm font-medium'\n                )}\n                aria-current={item.href === location.pathname ? 'page' : undefined}\n              >\n                <item.icon\n                  className={classNames(\n                    item.href === location.pathname ? 'text-orange-500' : 'text-gray-400 group-hover:text-gray-500',\n                    'flex-shrink-0 -ml-1 mr-3 h-6 w-6'\n                  )}\n                  aria-hidden=\"true\"\n                />\n                <span className=\"truncate\">{item.name}</span>\n              </Link>\n            ))}\n          </nav>\n        </aside>\n\n        <div className=\"space-y-6 sm:px-6 lg:col-span-9 lg:px-0\">\n          <Outlet />\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import {\n  Outlet, useLoaderData\n} from '@remix-run/react';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport AddAddressCard from '~/components/account/AddAddressCard';\nimport EditAddressCard from '~/components/account/EditAddressCard';\nimport { Address, ErrorCode, ErrorResult } from '~/generated/graphql';\nimport { deleteCustomerAddress, updateCustomerAddress } from '~/providers/account/account';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const res = await getActiveCustomerAddresses({ request });\n  const activeCustomerAddresses = res.activeCustomer;\n  return json({ activeCustomerAddresses });\n}\n\nexport async function action({ request }: DataFunctionArgs) {\n  const formData = await request.formData();\n  const id = formData.get('id') as string | null;\n  const _action = formData.get('_action');\n\n  // Verify that id is set\n  if (!id || id.length === 0) {\n    return json<ErrorResult>(\n      {\n        errorCode: ErrorCode.IdentifierChangeTokenInvalidError, // TODO: I dont think this error is 100% appropriate - decide later\n        message: \"Parameter 'id' is missing\"\n      },\n      {\n        status: 400, // Bad request\n      },\n    );\n  }\n\n  if (_action === \"setDefaultShipping\") {\n    updateCustomerAddress({ id, defaultShippingAddress: true }, { request });\n    return null;\n  }\n\n  if (_action === \"setDefaultBilling\") {\n    updateCustomerAddress({ id, defaultBillingAddress: true }, { request });\n    return null;\n  }\n\n  if (_action === \"deleteAddress\") {\n    const { success } = await deleteCustomerAddress(id, { request });\n    return json(null, { status: success ? 200 : 400 });\n  }\n\n  return json<ErrorResult>(\n    {\n      message: 'An unknown error occurred',\n      errorCode: ErrorCode.UnknownError,\n    },\n    {\n      status: 400,\n    },\n  );\n}\n\nexport default function AccountAddresses() {\n  const { activeCustomerAddresses } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <Outlet></Outlet>\n      <div className=\"w-full\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 flex-1 mt-4\">\n          <AddAddressCard />\n          {activeCustomerAddresses?.addresses!.map((address) => {\n            return (\n              <EditAddressCard\n                address={address as Address}\n                key={address.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { PlusIcon } from '@heroicons/react/24/outline';\nimport { Link } from '@remix-run/react';\n\nexport default function AddAddressCard() {\n  return (\n    <>\n      <Link\n        preventScrollReset\n        className=\"border border-gray-200 p-5 min-h-[220px] h-full w-full flex flex-col justify-between\"\n        to=\"/account/addresses/new\"\n      >\n        <span className=\"text-base-semi\">\u0425\u0430\u044F\u0433 \u043D\u044D\u043C\u044D\u0445</span>\n        <PlusIcon className='w-6 h-6'></PlusIcon>\n      </Link>\n    </>\n  );\n};", "import { ArrowPathIcon, CreditCardIcon, PencilIcon, TrashIcon, TruckIcon } from '@heroicons/react/24/outline';\nimport { Link, useFetcher } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { useState } from 'react';\nimport { Address, ErrorResult } from '~/generated/graphql';\nimport { ErrorMessage } from '../ErrorMessage';\nimport { SfButton } from '@storefront-ui/react';\nimport { HighlightedButton } from '../HighlightedButton';\nimport Modal from '../modal/Modal';\n\ntype EditAddressProps = {\n  address: Address;\n  isActive?: boolean;\n};\n\nexport default function EditAddressCard({\n  address,\n  isActive = false,\n}: EditAddressProps) {\n\n  const setShipping = useFetcher();\n  const setBilling = useFetcher();\n  const deleteAddress = useFetcher<ErrorResult>();\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState<boolean>(false);\n\n  return (\n    <>\n      {/* Note: Only allow closing when it isnt loading to prevent accidental closing via outside-click */}\n      <Modal isOpen={isDeleteModalVisible} close={() => setDeleteModalVisible(deleteAddress.state === 'idle' ? false : true)}>\n        <deleteAddress.Form method=\"post\" preventScrollReset>\n          <Modal.Title>\u0425\u0430\u044F\u0433 \u0443\u0441\u0442\u0433\u0430\u0445</Modal.Title>\n          <Modal.Body>\n            <div className=\"space-y-4 my-4\">\n              \u0422\u0430 \u044D\u043D\u044D \u0445\u0430\u044F\u0433\u0438\u0439\u0433 \u0443\u0441\u0442\u0433\u0430\u0445\u044B\u0433 \u0445\u04AF\u0441\u0447 \u0431\u0430\u0439\u043D\u0430 \u0443\u0443?\n              <input type=\"hidden\" name=\"id\" value={address.id} />\n              {deleteAddress.data && (\n                <ErrorMessage\n                  heading='\u0425\u0430\u044F\u0433\u0438\u0439\u0433 \u0443\u0441\u0442\u0433\u0430\u0436 \u0447\u0430\u0434\u0441\u0430\u043D\u0433\u04AF\u0439!'\n                  message={deleteAddress.data?.message ?? '\u0410\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430!'}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <SfButton type=\"button\"\n              variant=\"tertiary\"\n              onClick={() => setDeleteModalVisible(false)}\n              disabled={deleteAddress.state !== 'idle'}\n            >\n              \u0426\u0443\u0446\u043B\u0430\u0445\n            </SfButton>\n            <HighlightedButton\n              type=\"submit\"\n              name='_action'\n              value='deleteAddress'\n              disabled={deleteAddress.state !== 'idle'}\n              isSubmitting={deleteAddress.state !== 'idle'}\n            >\n              \u0422\u0438\u0439\u043C\n            </HighlightedButton>\n          </Modal.Footer>\n        </deleteAddress.Form>\n      </Modal>\n      <div\n        className={clsx(\n          'border border-gray-200 p-5 min-h-[220px] h-full w-full flex flex-col justify-between gap-8 transition-colors',\n          {\n            'border-gray-900': isActive,\n          },\n        )}\n      >\n        <div className=\"flex justify-between\">\n          {/* Customer Data Section */}\n          <div className=\"flex flex-col\">\n            <span className=\"text-left text-base-semi\">{address.fullName}</span>\n            {address.company && (\n              <span className=\"text-small-regular text-gray-700\">\n                {address.company}\n              </span>\n            )}\n            <div className=\"flex flex-col text-left text-base-regular mt-2\">\n              <span>\n                {address.streetLine1},\n                {/* {address.streetLine2 && <span>, {address.streetLine2}</span>} */}\n              </span>\n              {/* <span>\n                {address.postalCode}, {address.city}\n              </span> */}\n              <span>\n                {/* {address.province && `${address.province}, `} */}\n                {address.country?.code?.toUpperCase()}\n              </span>\n            </div>\n          </div>\n          {/* Default Shipping/Billing Section */}\n          {(address.defaultShippingAddress || address.defaultBillingAddress) && (\n            <div className='text-end text-gray-500 uppercase tracking-wider'>\n              <span className=\"block text-sm font-medium\">\u04AE\u043D\u0434\u0441\u044D\u043D</span>\n              <span className=\"block text-xs mt-1\">\n                {address.defaultShippingAddress && \"\u0445\u04AF\u0440\u0433\u044D\u043B\u0442\u0438\u0439\u043D \u0445\u0430\u044F\u0433\"}\n                {address.defaultShippingAddress && address.defaultBillingAddress && <><br />&amp;&nbsp;</>}\n                {address.defaultBillingAddress && \"\u0442\u04E9\u043B\u0431\u04E9\u0440\u0438\u0439\u043D \u0445\u0430\u044F\u0433\"}</span>\n            </div>\n          )}\n        </div>\n        {/* CRUD Actions */}\n        <div className=\"flex flex-col md:flex-row items-start gap-4\">\n          <div className='flex items-center gap-4'>\n            <Link\n              role=\"button\"\n              preventScrollReset\n              className=\"text-gray-700 flex items-center gap-x-2\"\n              to={`/account/addresses/${address.id}`}\n            >\n              <PencilIcon className=\"w-4 h-4\"></PencilIcon>\n              \u0437\u0430\u0441\u0430\u0445\n            </Link>\n            <button type=\"button\"\n              title=\"Delete this address\"\n              className=\"text-gray-700 flex items-center gap-x-2\"\n              disabled={deleteAddress.state !== \"idle\"}\n              onClick={() => setDeleteModalVisible(true)}\n            >\n              {deleteAddress.state === \"idle\" ?\n                <TrashIcon className=\"w-4 h-4\"></TrashIcon>\n                :\n                <ArrowPathIcon className='w-4 h-4 animate-spin'></ArrowPathIcon>\n              }\n              \u0443\u0441\u0442\u0433\u0430\u0445\n            </button>\n          </div>\n          {(!address.defaultShippingAddress || !address.defaultBillingAddress) && (\n            <div>\n              <span className='text-gray-500 flex gap-4'>\n                {/* Default shipping */}\n                {!address.defaultShippingAddress && (\n                  <setShipping.Form method='post'>\n                    <input type=\"hidden\" name=\"id\" value={address.id} />\n                    <button name=\"_action\" value=\"setDefaultShipping\" type=\"submit\"\n                      title=\"Set as default shipping address\"\n                      className='text-gray-700 flex items-center gap-2'\n                      disabled={setShipping.state !== \"idle\"}\n                    >\n                      {setShipping.state === \"idle\" ?\n                        <TruckIcon className=\"w-4 h-4\"></TruckIcon>\n                        :\n                        <ArrowPathIcon className='w-4 h-4 animate-spin'></ArrowPathIcon>\n                      }\n                      \u0445\u04AF\u0440\u0433\u044D\u043B\u0442\n                    </button>\n                  </setShipping.Form>\n                )}\n\n                {!address.defaultBillingAddress && (\n                  <setBilling.Form method='post'>\n                    <input type=\"hidden\" name=\"id\" value={address.id} />\n                    <button name=\"_action\" value=\"setDefaultBilling\" type=\"submit\"\n                      title=\"Set as default billing address\"\n                      className='text-gray-700 flex items-center gap-2'\n                      disabled={setBilling.state !== \"idle\"}\n                    >\n                      {setBilling.state === \"idle\" ?\n                        <CreditCardIcon className=\"w-4 h-4\"></CreditCardIcon>\n                        :\n                        <ArrowPathIcon className='w-4 h-4 animate-spin'></ArrowPathIcon>\n                      }\n                      \u0442\u04E9\u043B\u0431\u04E9\u0440\n                    </button>\n                  </setBilling.Form>\n                )}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { XCircleIcon } from '@heroicons/react/24/solid';\n\nexport function ErrorMessage({\n  heading,\n  message,\n}: {\n  heading: string;\n  message: string;\n}) {\n  return (\n    <div className=\"rounded-md bg-red-50 p-4 max-w-lg\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">{heading}</h3>\n          <p className=\"text-sm text-red-700 mt-2\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/solid';\nimport { ModalProvider, useModal } from './modal-context';\nimport clsx from 'clsx';\nimport React, { Fragment, PropsWithChildren } from 'react';\n\ntype ModalProps = {\n  isOpen: boolean;\n  close: () => void;\n  size?: 'small' | 'medium' | 'large';\n  afterClose?: () => void;\n  afterOpen?: () => void;\n};\n\nconst Modal: React.FC<PropsWithChildren<ModalProps>> & {\n  Title: React.FC<PropsWithChildren>;\n  Description: React.FC<PropsWithChildren>;\n  Body: React.FC<PropsWithChildren>;\n  Footer: React.FC<PropsWithChildren>;\n} = ({ isOpen, close, size = 'medium', children, afterClose, afterOpen }) => {\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[75]\" onClose={close}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n          afterEnter={afterOpen}\n          afterLeave={afterClose}\n        >\n          <div className=\"fixed inset-0 bg-gray-700 bg-opacity-75 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel\n                className={clsx(\n                  'flex flex-col justify-start w-full h-full overflow-auto transform bg-white p-10 text-left align-middle shadow-xl transition-all',\n                  {\n                    'max-w-md': size === 'small',\n                    'max-w-xl': size === 'medium',\n                    'max-w-3xl': size === 'large',\n                  },\n                )}\n              >\n                <ModalProvider close={close}>{children}</ModalProvider>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst Title: React.FC<PropsWithChildren> = ({ children }) => {\n  const { close } = useModal();\n\n  return (\n    <Dialog.Title className=\"flex items-center justify-between\">\n      <div className=\"text-large-semi\">{children}</div>\n      <div>\n        <button onClick={close} type=\"button\">\n          {/* <X size={20} /> */}\n          <XMarkIcon className=\"w-6 h-6\"></XMarkIcon>\n        </button>\n      </div>\n    </Dialog.Title>\n  );\n};\n\nconst Description: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <Dialog.Description className=\"flex text-small-regular text-gray-700 items-center justify-center pt-2 pb-4 h-full\">\n      {children}\n    </Dialog.Description>\n  );\n};\n\nconst Body: React.FC<PropsWithChildren> = ({ children }) => {\n  return <div className=\"flex-1\">{children}</div>;\n};\n\nconst Footer: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <div className=\"flex items-center justify-end gap-x-4\">{children}</div>\n  );\n};\n\nModal.Title = Title;\nModal.Description = Description;\nModal.Body = Body;\nModal.Footer = Footer;\n\nexport default Modal;\n", "import React, { createContext, useContext } from \"react\"\n\ninterface ModalContext {\n  close: () => void\n}\n\nconst ModalContext = createContext<ModalContext | null>(null)\n\ninterface ModalProviderProps {\n  children?: React.ReactNode\n  close: () => void\n}\n\nexport const ModalProvider = ({ children, close }: ModalProviderProps) => {\n  return (\n    <ModalContext.Provider\n      value={{\n        close,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  )\n}\n\nexport const useModal = () => {\n  const context = useContext(ModalContext)\n  if (context === null) {\n    throw new Error(\"useModal must be used within a ModalProvider\")\n  }\n  return context\n}\n", "import {\n  useActionData,\n  useLoaderData,\n  useNavigate,\n  useSubmit,\n  useNavigation,\n} from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { useRef, useEffect } from 'react';\nimport { validationError } from 'remix-validated-form';\nimport Modal from '~/components/modal/Modal';\nimport { SfButton } from '@storefront-ui/react';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Address } from '~/generated/graphql';\nimport useToggleState from '~/utils/use-toggle-state';\nimport CustomerAddressForm, {\n  validator,\n} from '~/components/account/CustomerAddressForm';\nimport { updateCustomerAddress } from '~/providers/account/account';\nimport { getAvailableCountries } from '~/providers/checkout/checkout';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\n\nexport async function loader({ request, params }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerAddresses({ request });\n  const address = activeCustomer?.addresses?.find(\n    (address) => address.id === params.addressId,\n  );\n\n  if (!address) {\n    return redirect('/account/addresses');\n  }\n\n  const { availableCountries } = await getAvailableCountries({ request });\n\n  return json({ address, availableCountries });\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { data } = result;\n  await updateCustomerAddress(\n    {\n      id: params.addressId!,\n      city: data.city,\n      company: data.company,\n      countryCode: data.countryCode,\n      fullName: data.fullName,\n      phoneNumber: data.phone,\n      postalCode: data.postalCode,\n      province: data.province,\n      streetLine1: data.streetLine1,\n      streetLine2: data.streetLine2,\n    },\n    { request },\n  );\n\n  return json({\n    saved: true,\n  });\n}\n\nexport default function EditAddress() {\n  const { address, availableCountries } = useLoaderData<typeof loader>();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const { state, close } = useToggleState(true);\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const submit = useSubmit();\n\n  useEffect(() => {\n    if (actionData?.saved) {\n      close();\n    }\n  }, [actionData]);\n\n  const submitForm = () => {\n    submit(formRef.current);\n  };\n\n  const afterClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <Modal isOpen={state} close={close} afterClose={afterClose}>\n        <Modal.Title>\u0425\u0430\u044F\u0433 \u0437\u0430\u0441\u0430\u0445</Modal.Title>\n        <Modal.Body>\n          <CustomerAddressForm\n            address={address as Address}\n            availableCountries={availableCountries}\n            formRef={formRef}\n            submit={submitForm}\n          ></CustomerAddressForm>\n        </Modal.Body>\n        <Modal.Footer>\n          <SfButton type=\"button\" variant=\"tertiary\" onClick={close}>\n            \u0426\u0443\u0446\u043B\u0430\u0445\n          </SfButton>\n          <HighlightedButton\n            isSubmitting={navigation.state === 'submitting'}\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            \u0425\u0430\u0434\u0433\u0430\u043B\u0430\u0445\n          </HighlightedButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n", "import { useState } from 'react';\n\nexport type StateType = [boolean, () => void, () => void, () => void] & {\n  state: boolean;\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n};\n\n/**\n *\n * @param initialState - boolean\n * @returns An array like object with `state`, `open`, `close`, and `toggle` properties\n *  to allow both object and array destructuring\n *\n * ```\n *  const [showModal, openModal, closeModal, toggleModal] = useToggleState()\n *  // or\n *  const { state, open, close, toggle } = useToggleState()\n * ```\n */\n\nconst useToggleState = (initialState = false) => {\n  const [state, setState] = useState<boolean>(initialState);\n\n  const close = () => {\n    setState(false);\n  };\n\n  const open = () => {\n    setState(true);\n  };\n\n  const toggle = () => {\n    setState((state) => !state);\n  };\n\n  const hookData = [state, open, close, toggle] as StateType;\n  hookData.state = state;\n  hookData.open = open;\n  hookData.close = close;\n  hookData.toggle = toggle;\n  return hookData;\n};\n\nexport default useToggleState;\n", "import { withZod } from '@remix-validated-form/with-zod';\nimport { z } from 'zod';\nimport { RefObject } from 'react';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { Address, AvailableCountriesQuery } from '~/generated/graphql';\nimport { Input } from '~/components/Input';\nimport { Select } from '~/components/Select';\n\nexport const validator = withZod(\n  z.object({\n    fullName: z.string().min(1, { message: '\u041D\u044D\u0440 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    city: z.string().optional(),\n    countryCode: z.string().min(1, { message: '\u0425\u043E\u0442 / \u0410\u0439\u043C\u0430\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    postalCode: z.string().optional(),\n    province: z.string().optional(),\n    streetLine1: z.string().min(1, { message: '\u0425\u0430\u044F\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    streetLine2: z.string().optional(),\n    phone: z.string().min(1, { message: \"\u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430\" }),\n    company: z.string().optional(),\n  }),\n);\n\nexport default function CustomerAddressForm({\n  address,\n  formRef,\n  submit,\n  availableCountries,\n}: {\n  address?: Address;\n  formRef: RefObject<HTMLFormElement>;\n  submit: () => void;\n  availableCountries: AvailableCountriesQuery['availableCountries'];\n}) {\n  return (\n    <ValidatedForm\n      id=\"editAddressForm\"\n      validator={validator}\n      formRef={formRef}\n      method=\"post\"\n      onSubmit={submit}\n      defaultValues={{\n        fullName: address?.fullName || undefined,\n        city: address?.city || undefined,\n        streetLine1: address?.streetLine1 || undefined,\n        streetLine2: address?.streetLine2 || undefined,\n        countryCode: address?.country?.code || undefined,\n        postalCode: address?.postalCode || undefined,\n        phone: address?.phoneNumber || undefined,\n        company: address?.company || undefined,\n        province: address?.province || undefined,\n      }}\n    >\n      <input type=\"hidden\" name=\"intent\" value=\"updateAddress\" />\n      <div className=\"grid grid-cols-1 gap-y-2 my-8\">\n        <Input\n          label=\"\u041D\u044D\u0440\"\n          name=\"fullName\"\n          required\n          autoComplete=\"full-name\"\n        />\n        <Input label=\"\u041A\u043E\u043C\u043F\u0430\u043D\u0438\" name=\"company\" />\n        <Input label=\"\u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440\" name=\"phone\" autoComplete=\"phone\" required />\n        <Input\n          label=\"\u0425\u0430\u044F\u0433\"\n          name=\"streetLine1\"\n          required\n          autoComplete=\"address-line1\"\n        />\n        {/* <Input\n          label=\"Apartment, suite, etc.\"\n          name=\"streetLine2\"\n          autoComplete=\"address-line2\"\n        /> */}\n        {/* <input type=\"hidden\" name=\"postalcode\" value=\"210200\" />\n        <input type=\"hidden\" name=\"city\" value=\"ub\" /> */}\n        {/* <div className=\"grid grid-cols-[144px_1fr] gap-x-2\">\n          <Input\n            label=\"Postal code\"\n            name=\"postalCode\"\n            required\n            autoComplete=\"postal-code\"\n          />\n          <Input label=\"City\" name=\"city\" required autoComplete=\"locality\" />\n        </div> */}\n        {/* <Input\n          label=\"Province / State\"\n          name=\"province\"\n          autoComplete=\"address-level1\"\n        /> */}\n        <Select\n          name=\"countryCode\"\n          autoComplete=\"country\"\n          placeholder=\"-- \u0421\u043E\u043D\u0433\u043E\u0445 --\"\n          defaultValue=\"ulaanbaatar\"\n          required\n          label=\"\u0425\u043E\u0442 / \u0410\u0439\u043C\u0430\u0433\"\n        >\n          {availableCountries?.map((country) => (\n            <option key={country.id} value={country.code}>\n              {country.name}\n            </option>\n          ))}\n        </Select>\n        <input type=\"submit\" hidden />\n      </div>\n    </ValidatedForm>\n  );\n}\n", "import React, { SelectHTMLAttributes } from 'react';\nimport { useField } from 'remix-validated-form';\nimport FormElement from './FormElement';\n\nexport type SelectProps = {\n  placeholder?: string;\n  noPlaceholder?: boolean;\n  label?: string;\n  name: string;\n} & SelectHTMLAttributes<HTMLSelectElement>;\n\nexport const Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n  ({\n    name,\n    label,\n    required,\n    defaultValue,\n    placeholder = 'Select...',\n    noPlaceholder = false,\n    children,\n    ...props\n  }, ref) => {\n    const { getInputProps } = useField(name);\n\n    return (\n      <FormElement name={name} label={label} required={required}>\n        <select\n          ref={ref}\n          {...props}\n          defaultValue={defaultValue}\n          className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          {...getInputProps({})}\n        >\n          {!noPlaceholder && (\n            <option value=\"\">{placeholder}</option>\n          )}\n          {children}\n        </select>\n      </FormElement>\n    );\n  },\n);\n", "import {\n  useActionData,\n  useLoaderData,\n  useNavigate,\n  useNavigation,\n  useSubmit,\n} from '@remix-run/react';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport { useRef, useEffect } from 'react';\nimport { validationError } from 'remix-validated-form';\nimport Modal from '~/components/modal/Modal';\nimport { SfButton } from '@storefront-ui/react';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport useToggleState from '~/utils/use-toggle-state';\nimport CustomerAddressForm, {\n  validator,\n} from '~/components/account/CustomerAddressForm';\nimport { createCustomerAddress } from '~/providers/account/account';\nimport { getAvailableCountries } from '~/providers/checkout/checkout';\n\nexport async function loader({ request, params }: DataFunctionArgs) {\n  const { availableCountries } = await getAvailableCountries({ request });\n\n  return json({ availableCountries });\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { data } = result;\n  await createCustomerAddress(\n    {\n      city: data.city,\n      company: data.company,\n      countryCode: data.countryCode,\n      fullName: data.fullName,\n      phoneNumber: data.phone,\n      postalCode: data.postalCode,\n      province: data.province,\n      streetLine1: data.streetLine1,\n      streetLine2: data.streetLine2,\n    },\n    { request },\n  );\n\n  return json({\n    saved: true,\n  });\n}\n\nexport default function NewAddress() {\n  const { availableCountries } = useLoaderData<typeof loader>();\n  const navigation = useNavigation();\n  const actionData = useActionData();\n  const navigate = useNavigate();\n  const { state, close } = useToggleState(true);\n\n  const formRef = useRef<HTMLFormElement>(null);\n  const submit = useSubmit();\n\n  useEffect(() => {\n    if (actionData?.saved) {\n      close();\n    }\n  }, [actionData]);\n\n  const submitForm = () => {\n    submit(formRef.current);\n  };\n\n  const afterClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <Modal isOpen={state} close={close} afterClose={afterClose}>\n        <Modal.Title>\u0425\u0430\u044F\u0433 \u043D\u044D\u043C\u044D\u0445</Modal.Title>\n\n        <Modal.Body>\n          <CustomerAddressForm\n            availableCountries={availableCountries}\n            formRef={formRef}\n            submit={submitForm}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <SfButton type=\"button\" variant=\"tertiary\" onClick={close}>\n            \u0426\u0443\u0446\u043B\u0430\u0445\n          </SfButton>\n          <HighlightedButton\n            isSubmitting={navigation.state === 'submitting'}\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            \u0425\u0430\u0434\u0433\u0430\u043B\u0430\u0445\n          </HighlightedButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n", "import { PencilIcon } from '@heroicons/react/24/outline';\nimport { useActionData, useNavigation } from '@remix-run/react';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { useEffect, useRef, useState } from 'react';\nimport { ValidatedForm, validationError } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { SfButton } from '@storefront-ui/react';\nimport { ErrorMessage } from '~/components/ErrorMessage';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Input } from '~/components/Input';\nimport { SuccessMessage } from '~/components/SuccessMessage';\nimport { updateCustomerPassword } from '~/providers/account/account';\nimport {\n  isErrorResult,\n  isValidationErrorResponseData,\n} from '~/utils/validation-helper';\n\nexport const validator = withZod(\n  z\n    .object({\n      currentPassword: z.string().min(1, { message: '\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n      newPassword: z.string().min(1, { message: '\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n      confirmPassword: z.string().min(1, { message: '\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    })\n    .refine(\n      ({ newPassword, confirmPassword }) => newPassword === confirmPassword,\n      {\n        path: ['confirmPassword'],\n        message: '\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0442\u043E\u0445\u0438\u0440\u043E\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430',\n      },\n    ),\n);\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { currentPassword, newPassword } = result.data;\n\n  const res = await updateCustomerPassword(\n    { currentPassword, newPassword },\n    { request },\n  );\n\n  if (res.__typename !== 'Success') {\n    return json(res, { status: 401 });\n  }\n\n  return json(res);\n}\n\nexport default function AccountPassword() {\n  const [editing, setEditing] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const actionDataHook = useActionData<typeof action>();\n  const { state } = useNavigation();\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (isValidationErrorResponseData(actionDataHook)) {\n      // no additional handling\n      return;\n    }\n\n    if (isErrorResult(actionDataHook)) {\n      // set error message\n      setErrorMessage(actionDataHook.message);\n      setIsSaved(false);\n      return;\n    }\n\n    if (actionDataHook?.success) {\n      // show success message and reset form\n      setErrorMessage(undefined);\n      setIsSaved(true);\n      setEditing(false);\n      formRef.current?.reset();\n    }\n  }, [actionDataHook]);\n\n  return (\n    <ValidatedForm validator={validator} method=\"post\" formRef={formRef}>\n      <div className=\"p-4 space-y-4\">\n        {editing && (\n          <>\n            <div className=\"gap-4 grid grid-cols-1 md:grid-cols-2\">\n              <div>\n                <Input\n                  required\n                  label=\"\u041E\u0434\u043E\u043E\u0433\u0438\u0439\u043D \u043D\u0443\u0443\u0446 \u04AF\u0433\"\n                  name=\"currentPassword\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n            <div className=\"gap-4 grid grid-cols-1 md:grid-cols-2\">\n              <div>\n                <Input\n                  required\n                  label=\"\u0428\u0438\u043D\u044D \u043D\u0443\u0443\u0446 \u04AF\u0433\"\n                  name=\"newPassword\"\n                  type=\"password\"\n                />\n              </div>\n              <div>\n                <Input\n                  required\n                  label=\"\u0411\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u0443\u0443\u043B\u0430\u0445 \u043D\u0443\u0443\u0446 \u04AF\u0433\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n          </>\n        )}\n        {isSaved && (\n          <SuccessMessage\n            heading=\"\u0410\u043C\u0436\u0438\u043B\u0442\u0442\u0430\u0439!\"\n            message=\"\u0422\u0430\u043D\u044B \u043D\u0443\u0443\u0446 \u04AF\u0433 \u0448\u0438\u043D\u044D\u0447\u043B\u044D\u0433\u0434\u043B\u044D\u044D.\"\n          />\n        )}\n        {errorMessage && (\n          <ErrorMessage\n            heading=\"\u0410\u043B\u0434\u0430\u0430! \u041D\u0443\u0443\u0446 \u04AF\u0433 \u0448\u0438\u043D\u044D\u0447\u043B\u044D\u0445\u044D\u0434 \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430.\"\n            message=\"\u041E\u0434\u043E\u043E\u0433\u0438\u0439\u043D \u043D\u0443\u0443\u0446 \u04AF\u0433 \u0442\u043E\u0445\u0438\u0440\u043E\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430!\"\n          />\n        )}\n        {editing ? (\n          <div className=\"flex gap-3\">\n            <HighlightedButton type=\"submit\" isSubmitting={state === 'submitting'}>\n              \u041D\u0443\u0443\u0446 \u04AF\u0433\u044D\u044D \u0441\u043E\u043B\u0438\u0445\n            </HighlightedButton>\n            <SfButton variant=\"tertiary\" type=\"reset\" onClick={() => setEditing(false)}>\n              \u0426\u0443\u0446\u043B\u0430\u0445\n            </SfButton>\n          </div>\n        ) : (\n          <>\n            <HighlightedButton type=\"button\" onClick={() => setEditing(true)}>\n              <PencilIcon className=\"w-4 h-4\" /> \u041D\u0443\u0443\u0446 \u04AF\u0433\u044D\u044D \u0441\u043E\u043B\u0438\u0445\n            </HighlightedButton>\n          </>\n        )}\n      </div>\n    </ValidatedForm>\n  );\n}\n", "import { CheckIcon } from '@heroicons/react/24/solid';\n\nexport function SuccessMessage({\n  heading,\n  message,\n}: {\n  heading: string;\n  message: string;\n}) {\n  return (\n    <div className=\"rounded-md bg-green-50 p-4 max-w-lg\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <CheckIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-green-800\">{heading}</h3>\n          <p className=\"text-sm text-green-700 mt-2\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { ValidationErrorResponseData } from \"remix-validated-form\";\nimport { ErrorResult } from \"~/generated/graphql\";\n\nexport function isErrorResult(input: any): input is ErrorResult {\n    return input && (input as ErrorResult).message !== undefined && (input as ErrorResult).errorCode !== undefined;\n}\n\nexport function isValidationErrorResponseData(input: any): input is ValidationErrorResponseData {\n    return input && (input as ValidationErrorResponseData).fieldErrors !== undefined;\n}", "import { ArrowPathIcon } from '@heroicons/react/24/solid';\nimport { useLoaderData, useNavigation, useSubmit } from '@remix-run/react';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { Button } from '~/components/Button';\nimport { Select } from '~/components/Select';\nimport OrderHistoryItem from '~/components/account/OrderHistoryItem';\nimport { ALLOWED_PAGINATION_LIMITS } from '~/constants';\n\nimport { loader, orderPaginationValidator } from \"~/route-containers/account/orders.server\";\nexport { loader, orderPaginationValidator };\n\n\nexport default function AccountHistory() {\n  const { orderList, appliedPaginationLimit, appliedPaginationPage } =\n    useLoaderData<typeof loader>();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const showingOrdersFrom =\n    (appliedPaginationPage - 1) * appliedPaginationLimit + 1;\n  const showingOrdersTo = showingOrdersFrom + orderList.items.length - 1;\n\n  return (\n    <div className=\"pt-10 relative\">\n      {/* Loading-Overlay */}\n      {navigation.state !== 'idle' && (\n        <div className=\"absolute top-0 left-0 w-full h-full z-100 bg-white bg-opacity-75\"></div>\n      )}\n\n      {orderList.items.length === 0 && (\n        <div className=\"py-16 text-3xl text-center italic text-gray-300 select-none flex justify-center items-center\">\n          {orderList.totalItems === 0\n            ? 'Your future orders will appear here'\n            : 'No more orders, end reached'}\n        </div>\n      )}\n      {/* The actual orders */}\n      {orderList.items?.map((item) => (\n        // TODO: CHECK THIS ERROR OUT\n        <OrderHistoryItem\n          key={item.code}\n          order={item}\n          isInitiallyExpanded={false}\n          className=\"mb-10\"\n        />\n      ))}\n\n      {/* Pagination */}\n      <div className=\"flex flex-row justify-between items-center gap-4\">\n        <span className=\"self-start text-gray-500 text-sm xs:ml-4 mt-2\">\n          \u041D\u0438\u0439\u0442 {orderList.totalItems} \u0437\u0430\u0445\u0438\u0430\u043B\u0433\u044B\u043D {showingOrdersFrom} - {showingOrdersTo} \u0445\u0430\u0440\u0443\u0443\u043B\u0436 \u0431\u0430\u0439\u043D\u0430\n        </span>\n        <ValidatedForm\n          className=\"flex flex-col md:flex-row justify-center items-end md:items-center gap-4 lg:gap-6\"\n          validator={orderPaginationValidator}\n          method=\"get\"\n          onChange={(e) =>\n            submit(e.currentTarget, { preventScrollReset: true })\n          }\n          preventScrollReset\n        >\n          <span className=\"flex gap-4 items-center\">\n            {navigation.state !== 'idle' && (\n              <ArrowPathIcon className=\"animate-spin h-6 w-6 text-gray-500\" />\n            )}\n            <Select\n              name=\"limit\"\n              required\n              noPlaceholder\n              defaultValue={appliedPaginationLimit}\n            >\n              {Array.from(ALLOWED_PAGINATION_LIMITS).map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n            </Select>\n          </span>\n\n          <div className=\"flex\" role=\"group\">\n            <Button\n              name=\"page\"\n              type=\"submit\"\n              value={appliedPaginationPage - 1}\n              disabled={\n                appliedPaginationPage <= 1 || navigation.state !== 'idle'\n              }\n              className=\"!text-sm rounded-r-none border-r-0\"\n            >\n              \u04E8\u043C\u043D\u04E9\u0445\n            </Button>\n            <Button\n              name=\"page\"\n              type=\"submit\"\n              value={appliedPaginationPage + 1}\n              disabled={\n                appliedPaginationPage * appliedPaginationLimit >=\n                  orderList.totalItems || navigation.state !== 'idle'\n              }\n              className=\"!text-sm rounded-l-none\"\n            >\n              \u0414\u0430\u0440\u0430\u0430\u0445\n            </Button>\n          </div>\n        </ValidatedForm>\n      </div>\n    </div>\n  );\n}\n", "import clsx from 'clsx';\n\nexport function Button(\n  props: React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>>,\n) {\n  return (\n    <button\n      {...props}\n      className={clsx(\n        'hover:text-black hover:bg-gray-50 focus:outline-none focus:z-10 focus:ring-2 focus:ring-offset-0 focus:ring-gray-800',\n        'bg-white border rounded-md py-2 px-4 text-base font-medium text-black',\n        'flex items-center justify-around gap-2',\n        'disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-400',\n        props.className,\n      )}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "import { useState } from 'react';\nimport { Button } from '~/components/Button';\nimport { Price } from '~/components/products/Price';\nimport { ActiveCustomerOrderListQuery } from '~/generated/graphql';\nimport { OrderStateBadge } from '~/components/account/OrderStateBadge';\nimport { ChevronRightIcon } from '@heroicons/react/24/solid';\nimport { EllipsisVerticalIcon } from '@heroicons/react/24/outline';\nimport { Link } from '@remix-run/react';\n\ntype OrderHistoryItemProps = {\n  order?: NonNullable<ActiveCustomerOrderListQuery['activeCustomer']>['orders']['items'][number];\n  isInitiallyExpanded?: boolean;\n  areDetailsInitiallyExpanded?: boolean;\n  className?: string;\n};\n\nexport default function OrderHistoryItem({\n  order,\n  isInitiallyExpanded = false,\n  areDetailsInitiallyExpanded = false,\n  className,\n}: OrderHistoryItemProps) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(isInitiallyExpanded);\n  const [areDetailsExpanded, setAreDetailsExpanded] = useState<boolean>(\n    areDetailsInitiallyExpanded,\n  );\n  const [isLineCalcExpanded, setIsLineCalcExpanded] = useState<boolean>(false);\n\n  return (\n    <div className={`border rounded-lg ${className}`}>\n      {/* Upper Summary */}\n      <div\n        className=\"p-4 lg:p-6\n            flex flex-row justify-between items-center\n            bg-gray-50 border-b\n        \"\n      >\n        {/* Infos */}\n        <div className=\"flex flex-col md:flex-row gap-4 md:gap-8 lg:gap-16 text-sm\">\n          {/* Info - Order number */}\n          <div>\n            <span className=\"block font-medium\">\u0417\u0430\u0445\u0438\u0430\u043B\u0433\u044B\u043D \u0434\u0443\u0433\u0430\u0430\u0440</span>\n            <span className=\"text-gray-500\">{order?.code || '--'}</span>\n          </div>\n          {/* Info - Date */}\n          <div>\n            <span className=\"block font-medium\">\u041E\u0433\u043D\u043E\u043E</span>\n            <span\n              className=\"text-gray-500\"\n              title={new Date(order?.orderPlacedAt).toLocaleString()}\n            >\n              {order?.orderPlacedAt\n                ? new Date(order.orderPlacedAt).toLocaleDateString(undefined, {\n                    day: 'numeric',\n                    month: 'long',\n                    year: 'numeric',\n                  })\n                : '--'}\n            </span>\n          </div>\n          {/* Info - Total sum */}\n          <div>\n            <span className=\"block font-medium\">\u041D\u0438\u0439\u0442 \u0434\u04AF\u043D</span>\n            <span className=\"text-gray-500\">\n              <Price\n                currencyCode={order?.currencyCode}\n                priceWithTax={order?.totalWithTax}\n              ></Price>\n            </span>\n          </div>\n        </div>\n\n        {/* Status + Actions */}\n        <div className=\"gap-4 lg:gap-6 flex flex-col items-end justify-between md:flex-row md:items-center self-start\">\n          <OrderStateBadge state={order?.state} />\n          <div className=\"flex\" role=\"group\">\n            <Button\n              title=\"Actions for this order (Not implemented)\"\n              className=\"bg-white text-sm rounded-r-none border-r-0\"\n            >\n              <span className=\"text-xs hidden\">Actions</span>\n              <EllipsisVerticalIcon className=\"w-5 h-5\" />\n            </Button>\n            <Button\n              className=\"bg-white text-sm rounded-l-none\"\n              onClick={() => setIsExpanded(!isExpanded)}\n              title=\"Expand this order\"\n            >\n              <ChevronRightIcon\n                className={`w-5 h-5 transition-transform duration-100 ${\n                  isExpanded && 'rotate-90'\n                }`}\n              />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Collapsable details */}\n      {isExpanded && (\n        <div className=\"flex flex-col\">\n          {order?.lines.map((line, key) => (\n            <div\n              key={key}\n              className=\"p-4 lg:p-6 border-b flex flex-row gap-8 justify-between group\"\n            >\n              {/* Product */}\n              <div className=\"inline-flex justify-center items-center justify gap-4\">\n                <Link\n                  to={`/products/${line.productVariant.product.slug}`}\n                  className=\"hover:opacity-50 transition-opacity\"\n                >\n                  <img\n                    src={line.featuredAsset?.source}\n                    className=\"w-24 h-24 object-cover rounded-md\"\n                  />\n                </Link>\n                <span className=\"flex flex-1 flex-col gap-0\">\n                  {/* Product name */}\n                  <Link\n                    to={`/products/${line.productVariant.product.slug}`}\n                    className=\"text-black text-sm font-semibold line-clamp-3 md:line-clamp-2 max-w-md hover:text-black/50\"\n                    title={line.productVariant.name}\n                  >\n                    {line.productVariant.name}\n                  </Link>\n                  {/* Price and quantity */}\n                  <button\n                    className=\"inline-flex gap-2 items-center w-fit text-gray-500 text-sm mt-1\"\n                    onClick={() => setIsLineCalcExpanded(!isLineCalcExpanded)}\n                  >\n                    {isLineCalcExpanded && (\n                      <>\n                        <span title=\"Quantity\">{line.quantity}</span>\n                        <span className=\"text-gray-300 select-none\">\u00D7</span>\n                        <span title=\"Price per unit\">\n                          <Price\n                            currencyCode={line.productVariant.currencyCode}\n                            priceWithTax={line.discountedUnitPriceWithTax}\n                          ></Price>\n                        </span>\n                        <span className=\"text-gray-300 select-none\">\u039E</span>\n                      </>\n                    )}\n                    <span title=\"Subtotal\">\n                      <Price\n                        currencyCode={line.productVariant.currencyCode}\n                        priceWithTax={line.discountedLinePriceWithTax}\n                      ></Price>\n                    </span>\n                  </button>\n                  {/* Shipment status */}\n                  <span className=\"text-gray-500 text-xs mt-2 tracking-wide\">\n                    {line.fulfillments &&\n                      line.fulfillments.length === 0 &&\n                      'Not shipped yet'}\n                    {line.fulfillments?.map((f, i) => (\n                      <span\n                        key={i}\n                        className=\"block\"\n                        title={new Date(f.updatedAt).toLocaleString()}\n                      >\n                        {f.state}:{' '}\n                        {new Intl.DateTimeFormat(undefined, {\n                          dateStyle: 'medium',\n                        }).format(new Date(f.updatedAt))}\n                      </span>\n                    ))}\n                  </span>\n                </span>\n              </div>\n            </div>\n          ))}\n\n          {/* Per order actions */}\n          <div className=\"p-2 lg:py-3 lg:px-6 flex justify-end gap-2 lg:gap-6\">\n            <Button onClick={() => setAreDetailsExpanded(!areDetailsExpanded)}>\n              <span className=\"text-xs\">\u0414\u044D\u043B\u0433\u044D\u0440\u044D\u043D\u0433\u04AF\u0439</span>\n              <ChevronRightIcon\n                className={`w-5 h-5 transition-transform duration-100 ${\n                  areDetailsExpanded && 'rotate-90'\n                }`}\n              />\n            </Button>\n          </div>\n\n          {/* More details - Could be expanded with shipping adresses, payment option, etc. */}\n          {areDetailsExpanded && (\n            <div className=\"p-2 lg:p-3 grid grid-cols-2 gap-1 text-sm max-w-sm self-center md:self-end\">\n              <h6 className=\"font-medium col-span-full\">\u0422\u04E9\u043B\u0431\u04E9\u0440\u0438\u0439\u043D \u0437\u0430\u0434\u0430\u0440\u0433\u0430\u0430</h6>\n              <span>\u0411\u0430\u0440\u0430\u0430\u043D\u044B \u043D\u0438\u0439\u0442 \u0434\u04AF\u043D:</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.subTotalWithTax}\n                ></Price>\n              </span>\n\n              <span>\u0425\u04AF\u0440\u0433\u044D\u043B\u0442:</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.shippingLines.reduce(\n                    (acc, s) => acc + s.priceWithTax,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              {/* <span>Total before tax:</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.taxSummary.reduce(\n                    (acc, t) => acc + t.taxBase,\n                    0,\n                  )}\n                ></Price>\n              </span> */}\n\n              {/* <span>Estimated tax:</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.taxSummary.reduce(\n                    (acc, t) => acc + t.taxTotal,\n                    0,\n                  )}\n                ></Price>\n              </span> */}\n\n              <span>\u0414\u04AF\u043D:</span>\n              {order?.totalWithTax && order.discounts ? (\n                <span className=\"text-end\">\n                  <Price\n                    currencyCode={order?.currencyCode}\n                    priceWithTax={\n                      order.totalWithTax -\n                      order?.discounts.reduce(\n                        (acc, curr) => acc + curr.amountWithTax,\n                        0,\n                      )\n                    }\n                  ></Price>\n                </span>\n              ) : (\n                <span className=\"text-end\">--</span>\n              )}\n\n              <span>\u041A\u0443\u043F\u043E\u043D\u044B \u0445\u04E9\u043D\u0433\u04E9\u043B\u04E9\u043B\u0442:</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.discounts.reduce(\n                    (acc, curr) => acc + curr.amountWithTax,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              <span className=\"font-medium\">\u041D\u0438\u0439\u0442 \u0434\u04AF\u043D:</span>\n              <span className=\"font-medium text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.totalWithTax}\n                ></Price>\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n", "// Copied from https://www.vendure.io/docs/typescript-api/orders/order-state/\ntype OrderState = | 'Created'\n    | 'Draft'\n    | 'AddingItems'\n    | 'ArrangingPayment'\n    | 'PaymentAuthorized'\n    | 'PaymentSettled'\n    | 'PartiallyShipped'\n    | 'Shipped'\n    | 'PartiallyDelivered'\n    | 'Delivered'\n    | 'Modifying'\n    | 'ArrangingAdditionalPayment'\n    | 'Cancelled'\n\n// Lookup can be replaced once theres i18n support, for now simply pick with a fallback\nconst map = new Map<string, string>([\n    ['Draft', 'Draft'],\n    ['AddingItems', 'Adding items'],\n    ['ArrangingPayment', '\u0422\u04E9\u043B\u0431\u04E9\u0440 \u0445\u04AF\u043B\u044D\u044D\u0433\u0434\u044D\u0436 \u0431\u0430\u0439\u0433\u0430\u0430'],            // Awaiting payment\n    ['PaymentAuthorized', '\u0422\u04E9\u043B\u0431\u04E9\u0440 \u0448\u0430\u043B\u0433\u0430\u0436 \u0431\u0430\u0439\u0433\u0430\u0430'],              // Payment authorized\n    ['PaymentSettled', '\u0422\u04E9\u043B\u0431\u04E9\u0440 \u0442\u04E9\u043B\u04E9\u0433\u0434\u0441\u04E9\u043D'],                     // Payment settled\n    ['PartiallyShipped', '\u0425\u044D\u0441\u044D\u0433\u0447\u043B\u044D\u043D \u0445\u04AF\u0440\u0433\u044D\u043B\u0442\u044D\u043D\u0434 \u0433\u0430\u0440\u0441\u0430\u043D'],        // Partially shipped\n    ['Shipped', '\u0425\u04AF\u0440\u0433\u044D\u043B\u0442\u044D\u043D\u0434 \u0433\u0430\u0440\u0441\u0430\u043D'],                           // Shipped\n    ['PartiallyDelivered', '\u0425\u044D\u0441\u044D\u0433\u0447\u043B\u044D\u043D \u0445\u04AF\u0440\u0433\u044D\u0433\u0434\u0441\u044D\u043D'],             // Partially delivered\n    ['Delivered', '\u0425\u04AF\u0440\u0433\u044D\u0436 \u04E9\u0433\u0441\u04E9\u043D'],                              // Delivered\n    ['Modifying', '\u04E8\u04E9\u0440\u0447\u043B\u04E9\u0433\u0434\u04E9\u0436 \u0431\u0430\u0439\u0433\u0430\u0430'],                         // Modifying\n    ['ArrangingAdditionalPayment', '\u0422\u04E9\u043B\u0431\u04E9\u0440 \u0445\u04AF\u043B\u044D\u044D\u0436 \u0431\u0443\u0439'],        // Awaiting payment\n    ['Cancelled', '\u0426\u0443\u0446\u043B\u0430\u0433\u0434\u0441\u0430\u043D'],                                // Cancelled\n    ['Unknown', 'Unknown'],                                     // Unknown \n]);\n\nexport function OrderStateBadge({ state }: { state?: string }) {\n    \n    let label = map.get(state ?? \"Unknown\") ?? \"Unknown\";\n    let colorClasses = '';\n    switch (state as OrderState) {\n        default:\n        case \"Draft\":\n        case \"AddingItems\":\n            colorClasses = \"bg-gray-100 text-gray-800\";\n            break;\n        case \"PaymentAuthorized\":\n        case \"PaymentSettled\":\n        case \"Shipped\":\n            colorClasses = \"bg-blue-100 text-blue-800\";\n            break;\n        case \"Delivered\":\n            colorClasses = \"bg-green-100 text-green-800\";\n            break;\n        case \"PartiallyShipped\":\n        case \"PartiallyDelivered\":\n        case \"Modifying\":\n        case \"ArrangingPayment\":\n        case \"ArrangingAdditionalPayment\":\n            colorClasses = \"bg-yellow-100 text-yellow-800\";\n            break;\n        case \"Cancelled\":\n            colorClasses = \"bg-red-100 text-red-800\";\n            break;\n    }\n\n    return (\n        <span className={`text-xs font-medium px-2.5 py-0.5 rounded uppercase whitespace-nowrap ${colorClasses}`}>{label}</span>\n    );\n\n}\n", "import { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { z } from 'zod';\nimport { OrderListOptions, SortOrder } from '~/generated/graphql';\nimport { getActiveCustomerOrderList } from '~/providers/customer/customer';\n\nconst paginationLimitMinimumDefault = 10;\nconst allowedPaginationLimits = new Set<number>([\n  paginationLimitMinimumDefault,\n  20,\n  30,\n]);\nconst paginationLimitDerivedMax = Math.max(\n  ...Array.from(allowedPaginationLimits),\n);\n\nconst orderPaginationLimitSchema = z\n  .number({\n    required_error: 'Limit is required',\n    invalid_type_error: 'Limit must be a number',\n    coerce: true,\n  })\n  .int()\n  .min(paginationLimitMinimumDefault, {\n    message: `Limit must be at least ${paginationLimitMinimumDefault}`,\n  })\n  .max(paginationLimitDerivedMax, {\n    message: `Maximum limit is ${paginationLimitDerivedMax}`,\n  })\n  .refine((x) => allowedPaginationLimits.has(x));\n\nconst orderPaginationPageSchema = z\n  .number({\n    required_error: 'Page is required',\n    invalid_type_error: 'Page must be a number',\n    coerce: true,\n  })\n  .int()\n  .min(1, { message: 'Page must be at least 1' })\n  .max(1000, { message: \"Page can't be over 1000\" });\n\nconst orderPaginationSchema = z.object({\n  limit: orderPaginationLimitSchema,\n  page: orderPaginationPageSchema,\n});\n\nexport const orderPaginationValidator = withZod(orderPaginationSchema);\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const url = new URL(request.url);\n  // Careful params are user controllable data - never blindly trust it!\n  // Use the .default fallbacks in case that params are undefined i.e. `null`\n  const limit = url.searchParams.get('limit') ?? paginationLimitMinimumDefault;\n  const page = url.searchParams.get('page') ?? 1;\n\n  // Validate, if we fail we redirect to default params\n  // We could provide error information but under normal usage this shouldnt happen because\n  // we also validate on client side, which means we should only land here if the user\n  // opens a manually modified or no longer supported url\n  const zodResult = orderPaginationSchema.safeParse({ limit, page });\n  if (!zodResult.success) {\n    url.search = '';\n    return redirect(url.href);\n  }\n\n  // From here on data is safe - Construct the options for vendure\n  const orderListOptions: OrderListOptions = {\n    take: zodResult.data.limit,\n    skip: (zodResult.data.page - 1) * zodResult.data.limit, // Page is one-base-indexed so we gotta decrement first\n    sort: { createdAt: SortOrder.Desc },\n    filter: { active: { eq: false } },\n  };\n\n  const res = await getActiveCustomerOrderList(orderListOptions, { request });\n  if (!res.activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({\n    orderList: res.activeCustomer.orders,\n    appliedPaginationLimit: zodResult.data.limit,\n    appliedPaginationPage: zodResult.data.page,\n  });\n}", "import { CheckIcon, PencilIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { ExclamationTriangleIcon } from '@heroicons/react/24/solid';\nimport { useActionData, useLoaderData, useNavigation } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { useEffect, useRef, useState } from 'react';\nimport { ValidatedForm, validationError } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { SfButton } from '@storefront-ui/react';\nimport { ErrorMessage } from '~/components/ErrorMessage';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Input } from '~/components/Input';\nimport Modal from '~/components/modal/Modal';\nimport {\n  requestUpdateCustomerEmailAddress,\n  updateCustomer,\n} from '~/providers/account/account';\nimport { getActiveCustomerDetails } from '~/providers/customer/customer';\nimport useToggleState from '~/utils/use-toggle-state';\nimport { replaceEmptyString } from '~/utils/validation';\n\nenum FormIntent {\n  UpdateEmail = 'updateEmail',\n  UpdateDetails = 'updateDetails',\n}\n\nexport const profileValidator = withZod(\n  z.object({\n    title: z.string(),\n    firstName: z.string().min(1, { message: '\u041D\u044D\u0440 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    lastName: z.string().min(1, { message: '\u041E\u0432\u043E\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n    phoneNumber: z.string().min(1, { message: '\u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n  }),\n);\n\nconst changeEmailValidator = withZod(\n  z.object({\n    email: z\n      .string()\n      .min(1, { message: '\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' })\n      .email('\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430'),\n    password: z.string().min(1, { message: '\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430' }),\n  }),\n);\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerDetails({ request });\n  if (!activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({ activeCustomer });\n}\n\nfunction isFormError(err: unknown): err is FormError {\n  return (err as FormError).message !== undefined;\n}\n\nfunction isEmailSavedResponse(\n  response: unknown,\n): response is EmailSavedResponse {\n  return (response as EmailSavedResponse).newEmailAddress !== undefined;\n}\n\nfunction isCustomerUpdatedResponse(\n  response: unknown,\n): response is CustomerUpdatedResponse {\n  return (response as CustomerUpdatedResponse).customerUpdated !== undefined;\n}\n\ntype FormError = {\n  message: string;\n  intent?: string;\n};\n\ntype EmailSavedResponse = {\n  newEmailAddress: string;\n};\n\ntype CustomerUpdatedResponse = {\n  customerUpdated: true;\n};\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const intent = body.get('intent') as FormIntent | null;\n\n  const formError = (formError: FormError, init?: number | ResponseInit) => {\n    return json<FormError>(formError, init);\n  };\n\n  if (intent === FormIntent.UpdateEmail) {\n    const result = await changeEmailValidator.validate(body);\n\n    if (result.error) {\n      return validationError(result.error);\n    }\n\n    const { email, password } = result.data;\n\n    const updateResult = await requestUpdateCustomerEmailAddress(\n      password,\n      email,\n      { request },\n    );\n\n    if (updateResult.__typename !== 'Success') {\n      return formError(\n        { message: updateResult.message, intent: FormIntent.UpdateEmail },\n        {\n          status: 401,\n        },\n      );\n    }\n\n    return json<EmailSavedResponse>(\n      {\n        newEmailAddress: email,\n      },\n      { status: 200 },\n    );\n  }\n\n  if (intent === FormIntent.UpdateDetails) {\n    const result = await profileValidator.validate(body);\n\n    if (result.error) {\n      return validationError(result.error);\n    }\n\n    const { title, firstName, lastName, phoneNumber } = result.data;\n    await updateCustomer(\n      { title, firstName, lastName, phoneNumber },\n      { request },\n    );\n\n    return json({\n      customerUpdated: true,\n    });\n  }\n\n  return formError({ message: 'No valid form intent' }, { status: 401 });\n}\n\nexport default function AccountDetails() {\n  const { activeCustomer } = useLoaderData<typeof loader>();\n  const actionDataHook = useActionData<typeof action>();\n\n  const { firstName, lastName, title, phoneNumber, emailAddress } =\n    activeCustomer;\n  const fullName = `${title ? title + ' ' : ''}${firstName} ${lastName}`;\n\n  const { state } = useNavigation();\n  const [formError, setFormError] = useState<FormError>();\n  const [emailSavedResponse, setEmailSavedResponse] =\n    useState<EmailSavedResponse>();\n  const [showChangeEmailModal, openChangeEmailModal, closeChangeEmailModal] =\n    useToggleState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const emailInputRef = useRef<HTMLInputElement>(null);\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!actionDataHook) {\n      return;\n    }\n\n    if (isEmailSavedResponse(actionDataHook)) {\n      setEmailSavedResponse(actionDataHook);\n      closeChangeEmailModal();\n      return;\n    }\n\n    if (isCustomerUpdatedResponse(actionDataHook)) {\n      setIsEditing(false);\n      setFormError(undefined);\n      return;\n    }\n\n    if (isFormError(actionDataHook)) {\n      setFormError(actionDataHook);\n      return;\n    }\n  }, [actionDataHook]);\n\n  useEffect(() => {\n    formRef.current?.reset();\n  }, [isEditing]);\n\n  return (\n    <>\n      <Modal\n        isOpen={showChangeEmailModal}\n        close={() => closeChangeEmailModal()}\n        afterOpen={() => emailInputRef.current?.focus()}\n        size=\"small\"\n      >\n        <ValidatedForm validator={changeEmailValidator} method=\"post\">\n          <Modal.Title>\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433\u0430\u0430 \u0441\u043E\u043B\u0438\u0445</Modal.Title>\n          <Modal.Body>\n            <div className=\"space-y-4 my-8\">\n\n              <div className=\"rounded-md bg-yellow-50 p-4\">\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-400\" aria-hidden=\"true\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-yellow-800\">\u0410\u043D\u0445\u0430\u0430\u0440\u0443\u0443\u043B\u0433\u0430</h3>\n                    <div className=\"mt-2 text-sm text-yellow-700\">\n                      <p>\n                        \u0411\u0438\u0434 \u0442\u0430\u043D\u044B \u0448\u0438\u043D\u044D \u0438\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0440\u0443\u0443 \u0431\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u0443\u0443\u043B\u0430\u0445 <strong>\u041A\u041E\u0414</strong> \u0438\u043B\u0433\u044D\u044D\u0445 \u0431\u043E\u043B\u043D\u043E.\n                      </p><br />\n                      <p>\n                        \u041E\u0434\u043E\u043E\u0433\u0438\u0439\u043D \u0438\u043C\u044D\u0439\u043B: <strong>{emailAddress}</strong>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-1\">\n                <input\n                  type=\"hidden\"\n                  name=\"intent\"\n                  value={FormIntent.UpdateEmail}\n                />\n                <Input\n                  ref={emailInputRef}\n                  autoFocus\n                  label=\"\u0428\u0438\u043D\u044D \u0438\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433\"\n                  name=\"email\"\n                  required\n                />\n                <Input\n                  label=\"\u041D\u0443\u0443\u0446 \u04AF\u0433\"\n                  type=\"password\"\n                  name=\"password\"\n                  required\n                />\n                <input type=\"submit\" hidden />\n              </div>\n              {formError && formError.intent === FormIntent.UpdateEmail && (\n                <ErrorMessage\n                  heading=\"We ran into a problem changing your E-Mail!\"\n                  message={formError.message}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <SfButton type=\"reset\" variant=\"tertiary\" onClick={() => closeChangeEmailModal()}>\n              \u0426\u0443\u0446\u043B\u0430\u0445\n            </SfButton>\n            <HighlightedButton\n              type=\"submit\"\n              isSubmitting={state === 'submitting'}\n            >\n              \u0425\u0430\u0434\u0433\u0430\u043B\u0430\u0445\n            </HighlightedButton>\n          </Modal.Footer>\n        </ValidatedForm>\n      </Modal>\n\n      <div className=\"space-y-10 p-4 mt-5\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"col-span-2\">\n            <h3 className=\"text-sm text-gray-500\">\u0418\u043C\u044D\u0439\u043B</h3>\n            {emailSavedResponse ? (\n              <span>\n                <span className=\"italic text-gray-800\">\n                  {emailSavedResponse.newEmailAddress}\n                </span>\n                <span className=\"ml-2 bg-blue-100 text-blue-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300\">\n                  \u0438\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u0443\u0443\u043B\u0430\u0445\u044B\u0433 \u0445\u04AF\u043B\u044D\u044D\u0436 \u0431\u0430\u0439\u043D\u0430\n                </span>\n              </span>\n            ) : (\n              <span>{emailAddress}</span>\n            )}\n          </div>\n          <div className=\"col-span-2\">\n            <HighlightedButton\n              type=\"button\"\n              onClick={() => openChangeEmailModal()}\n            >\n              <PencilIcon className=\"w-4 h-4\" /> \u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u0441\u043E\u043B\u0438\u0445\n            </HighlightedButton>\n          </div>\n        </div>\n        <div className=\"border-t border-gray-200 pt-10\">\n          <ValidatedForm\n            validator={profileValidator}\n            formRef={formRef}\n            method=\"post\"\n            id=\"details\"\n            defaultValues={{\n              title: title ?? undefined,\n              firstName,\n              lastName,\n              phoneNumber: phoneNumber ?? undefined,\n            }}\n          >\n            <input\n              type=\"hidden\"\n              name=\"intent\"\n              value={FormIntent.UpdateDetails}\n            />\n            <div className=\"gap-4 grid sm:grid-cols-2\">\n              {isEditing && (\n                <div className=\"col-span-2\">\n                  <Input label=\"\u0413\u0430\u0440\u0447\u0438\u0433\" name=\"title\" className=\"sm:w-1/4\" />\n                </div>\n              )}\n              {isEditing ? (\n                <>\n                  <div>\n                    <Input label=\"\u041D\u044D\u0440\" name=\"firstName\" required />\n                  </div>\n                  <div>\n                    <Input label=\"\u041E\u0432\u043E\u0433\" name=\"lastName\" required />\n                  </div>\n                </>\n              ) : (\n                <div>\n                  <h3 className=\"text-sm text-gray-500\">\u0413\u0430\u0440\u0447\u0438\u0433</h3>\n                  {replaceEmptyString(fullName)}\n                </div>\n              )}\n\n              <div>\n                {isEditing ? (\n                  <Input label=\"\u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440\" name=\"phoneNumber\" required />\n                ) : (\n                  <div>\n                    <h3 className=\"text-sm text-gray-500\">\u0423\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440</h3>\n                    {replaceEmptyString(phoneNumber)}\n                  </div>\n                )}\n              </div>\n              <div className=\"col-span-2\">\n                {isEditing ? (\n                  <>\n                    {formError &&\n                      formError.intent === FormIntent.UpdateDetails && (\n                        <ErrorMessage\n                          heading=\"\u041F\u0440\u043E\u0444\u0430\u0439\u043B\u044B\u0433 \u0445\u0430\u0434\u0433\u0430\u043B\u0430\u0445\u0430\u0434 \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430. \u0414\u0430\u0445\u0438\u043D \u043E\u0440\u043E\u043B\u0434\u043E\u043D\u043E \u0443\u0443!\"\n                          message={formError.message}\n                        />\n                      )}\n\n                    <div className=\"flex gap-x-4\">\n                      <HighlightedButton\n                        type=\"submit\"\n                        isSubmitting={state === 'submitting'}\n                      >\n                        <CheckIcon className=\"w-4 h-4\" /> \u0425\u0430\u0434\u0433\u0430\u043B\u0430\u0445\n                      </HighlightedButton>\n\n                      <SfButton type=\"reset\" variant=\"tertiary\" onClick={() => setIsEditing(false)}>\n                        <XMarkIcon className=\"w-4 h-4\" /> \u0426\u0443\u0446\u043B\u0430\u0445\n                      </SfButton>\n                    </div>\n                  </>\n                ) : (\n                  <HighlightedButton\n                    type=\"button\"\n                    onClick={() => setIsEditing(true)}\n                  >\n                    <PencilIcon className=\"w-4 h-4\" /> \u0417\u0430\u0441\u0430\u0445\n                  </HighlightedButton>\n                )}\n              </div>\n            </div>\n          </ValidatedForm>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import {\n  DataFunctionArgs,\n  MetaFunction,\n  json,\n} from '@remix-run/server-runtime';\nimport { useState, useRef, RefObject, useEffect } from 'react';\nimport { Price } from '~/components/products/Price';\nimport { getProductBySlug } from '~/providers/products/products';\nimport {\n  FetcherWithComponents,\n  ShouldReloadFunction,\n  useCatch,\n  useLoaderData,\n  useOutletContext,\n} from '@remix-run/react';\nimport { CheckIcon, HeartIcon, PhotoIcon } from '@heroicons/react/24/solid';\nimport { Breadcrumbs } from '~/components/Breadcrumbs';\nimport { APP_META_TITLE } from '~/constants';\nimport { CartLoaderData } from '~/routes/api/active-order';\n// import { FetcherWithComponents } from '~/types';\nimport { sessionStorage } from '~/servers/session.server';\nimport { ErrorCode, ErrorResult } from '~/generated/graphql';\nimport Alert from '~/components/Alert';\nimport { StockLevelLabel } from '~/components/products/StockLevelLabel';\nimport { ScrollableContainer } from '~/components/products/ScrollableContainer';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { SfButton } from '@storefront-ui/react';\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: data?.product?.name\n      ? `${data.product.name} - ${APP_META_TITLE}`\n      : APP_META_TITLE,\n  };\n};\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  const { product } = await getProductBySlug(params.slug!, { request });\n  if (!product) {\n    throw new Response('Not Found', {\n      status: 404,\n    });\n  }\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n  const error = session.get('activeOrderError');\n  return json(\n    { product: product!, error },\n    {\n      headers: {\n        'Set-Cookie': await sessionStorage.commitSession(session),\n      },\n    },\n  );\n}\n\nexport const unstable_shouldReload: ShouldReloadFunction = () => true;\n\nexport default function ProductSlug() {\n  const { product, error } = useLoaderData<typeof loader>();\n  const caught = useCatch();\n  const { activeOrderFetcher } = useOutletContext<{\n    activeOrderFetcher: FetcherWithComponents<CartLoaderData>;\n  }>();\n  const { activeOrder } = activeOrderFetcher.data ?? {};\n  const addItemToOrderError = getAddItemToOrderError(error);\n\n  if (!product) {\n    return <div>Product not found!</div>;\n  }\n\n  const findVariantById = (id: string) =>\n    product.variants.find((v) => v.id === id);\n\n  const [selectedVariantId, setSelectedVariantId] = useState(\n    product.variants[0].id,\n  );\n  const selectedVariant = findVariantById(selectedVariantId);\n  if (!selectedVariant) {\n    setSelectedVariantId(product.variants[0].id);\n  }\n\n  const qtyInCart =\n    activeOrder?.lines.find((l) => l.productVariant.id === selectedVariantId)\n      ?.quantity ?? 0;\n\n  const asset = product.assets[0];\n  const brandName = product.facetValues.find(\n    (fv) => fv.facet.code === 'brand',\n  )?.name;\n\n  const [featuredAsset, setFeaturedAsset] = useState(\n    selectedVariant?.featuredAsset,\n  );\n\n  return (\n    <div>\n      <div className=\"max-w-6xl mx-auto px-4\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {product.name}\n        </h2>\n        <Breadcrumbs\n          items={\n            product.collections[product.collections.length - 1]?.breadcrumbs ??\n            []\n          }\n        ></Breadcrumbs>\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start mt-4 md:mt-12\">\n          {/* Image gallery */}\n          <div className=\"w-full max-w-2xl mx-auto sm:block lg:max-w-none\">\n            <span className=\"rounded-md overflow-hidden\">\n              <div className=\"w-full h-full object-center object-cover rounded-lg\">\n                <img\n                  src={\n                    (featuredAsset?.preview || product.featuredAsset?.preview) +\n                    '?w=800'\n                  }\n                  alt={product.name}\n                  className=\"w-full h-full object-center object-cover rounded-lg\"\n                />\n              </div>\n            </span>\n\n            {product.assets.length > 1 && (\n              <ScrollableContainer>\n                {product.assets.map((asset) => (\n                  <div\n                    className={`basis-1/3 md:basis-1/4 flex-shrink-0 select-none touch-pan-x rounded-lg ${\n                      featuredAsset?.id == asset.id\n                        ? 'outline outline-2 outline-primary outline-offset-[-2px]'\n                        : ''\n                    }`}\n                    onClick={() => {\n                      setFeaturedAsset(asset);\n                    }}\n                  >\n                    <img\n                      draggable=\"false\"\n                      className=\"rounded-lg select-none h-24 w-full object-cover\"\n                      src={\n                        asset.preview +\n                        '?preset=full' /* not ideal, but technically prevents loading 2 seperate images */\n                      }\n                    />\n                  </div>\n                ))}\n              </ScrollableContainer>\n            )}\n          </div>\n\n          {/* Product info */}\n          <div className=\"mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0\">\n            <div className=\"\">\n              <h3 className=\"sr-only\">Description</h3>\n\n              <div\n                className=\"text-base text-gray-700\"\n                dangerouslySetInnerHTML={{\n                  __html: product.description,\n                }}\n              />\n            </div>\n            <activeOrderFetcher.Form method=\"post\" action=\"/api/active-order\">\n              <input type=\"hidden\" name=\"action\" value=\"addItemToOrder\" />\n              {1 < product.variants.length ? (\n                <div className=\"mt-4\">\n                  <label\n                    htmlFor=\"option\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    \u0421\u043E\u043D\u0433\u043E\u0445\n                  </label>\n                  <select\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n                    id=\"productVariant\"\n                    value={selectedVariantId}\n                    name=\"variantId\"\n                    onChange={(e) => {\n                      setSelectedVariantId(e.target.value);\n\n                      const variant = findVariantById(e.target.value);\n                      if (variant) {\n                        setFeaturedAsset(variant!.featuredAsset);\n                      }\n                    }}\n                  >\n                    {product.variants.map((variant) => (\n                      <option key={variant.id} value={variant.id}>\n                        {variant.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              ) : (\n                <input\n                  type=\"hidden\"\n                  name=\"variantId\"\n                  value={selectedVariantId}\n                ></input>\n              )}\n\n              <div className=\"mt-10 flex flex-col sm:flex-row sm:items-center\">\n                <p className=\"text-3xl text-gray-900 mr-4\">\n                  <Price\n                    priceWithTax={selectedVariant?.priceWithTax}\n                    currencyCode={selectedVariant?.currencyCode}\n                  ></Price>\n                </p>\n                <div className=\"flex sm:flex-col1 align-baseline\">\n                  <button\n                    type=\"submit\"\n                    className={`max-w-xs flex-1 ${\n                      activeOrderFetcher.state !== 'idle'\n                        ? 'bg-gray-400'\n                        : qtyInCart === 0\n                        ? 'bg-indigo-600 hover:bg-indigo-700'\n                        : 'bg-green-600 active:bg-green-700 hover:bg-green-700'\n                    }\n                                     transition-colors border border-transparent rounded-md py-3 px-8 flex items-center\n                                      justify-center text-base font-medium text-white focus:outline-none\n                                      focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-primary-500 sm:w-full`}\n                    disabled={activeOrderFetcher.state !== 'idle'}\n                  >\n                    {qtyInCart ? (\n                      <span className=\"flex items-center\">\n                        <CheckIcon className=\"w-5 h-5 mr-1\" /> {qtyInCart}{' '}\n                        \u0441\u0430\u0433\u0441\u043B\u0430\u0433\u0434\u0430\u0432\n                      </span>\n                    ) : (\n                      `\u0421\u0430\u0433\u0441\u0430\u043D\u0434 \u043D\u044D\u043C\u044D\u0445`\n                    )}\n                  </button>\n\n                  <SfButton type=\"button\" className=\"ml-4 py-3 px-3\" variant=\"tertiary\" square aria-label=\"Add to favorites\">\n                    <HeartIcon\n                      className=\"h-6 w-6 flex-shrink-0\"\n                      aria-hidden=\"true\"\n                    />\n                  </SfButton>\n\n                  {/* <button\n                    type=\"button\"\n                    className=\"ml-4 py-3 px-3 rounded-md flex items-center justify-center text-gray-400 hover:bg-gray-100 hover:text-gray-500\"\n                  >\n                    <HeartIcon\n                      className=\"h-6 w-6 flex-shrink-0\"\n                      aria-hidden=\"true\"\n                    />\n                    <span className=\"sr-only\">Add to favorites</span>\n                  </button> */}\n                </div>\n              </div>\n              <div className=\"mt-2 flex items-center space-x-2\">\n                <span className=\"text-gray-500\">{selectedVariant?.sku}</span>\n                <StockLevelLabel stockLevel={selectedVariant?.stockLevel} />\n              </div>\n              {addItemToOrderError && (\n                <div className=\"mt-4\">\n                  <Alert message={addItemToOrderError} />\n                </div>\n              )}\n\n              <section className=\"mt-12 pt-12 border-t text-xs\">\n                <h3 className=\"text-gray-600 font-bold mb-2\">\n                  Shipping & Returns\n                </h3>\n                <div className=\"text-gray-500 space-y-1\">\n                  <p>\n                    Standard shipping: 3 - 5 working days. Express shipping: 1 -\n                    3 working days.\n                  </p>\n                  <p>\n                    Shipping costs depend on delivery address and will be\n                    calculated during checkout.\n                  </p>\n                  <p>\n                    Returns are subject to terms. Please see the{' '}\n                    <span className=\"underline\">returns page</span> for further\n                    information.\n                  </p>\n                </div>\n              </section>\n            </activeOrderFetcher.Form>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"mt-24\">\n        <TopReviews></TopReviews>\n      </div> */}\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        Product not found!\n      </h2>\n      <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start mt-4 md:mt-12\">\n        {/* Image gallery */}\n        <div className=\"w-full max-w-2xl mx-auto sm:block lg:max-w-none\">\n          <span className=\"rounded-md overflow-hidden\">\n            <div className=\"w-full h-96 bg-slate-200 rounded-lg flex content-center justify-center\">\n              <PhotoIcon className=\"w-48 text-white\"></PhotoIcon>\n            </div>\n          </span>\n        </div>\n\n        {/* Product info */}\n        <div className=\"mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0\">\n          <div className=\"\">We couldn't find any product at that address!</div>\n          <div className=\"flex-1 space-y-3 py-1\">\n            <div className=\"h-2 bg-slate-200 rounded\"></div>\n            <div className=\"space-y-3\">\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div className=\"h-2 bg-slate-200 rounded col-span-2\"></div>\n                <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n              </div>\n              <div className=\"h-2 bg-slate-200 rounded\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getAddItemToOrderError(error?: ErrorResult): string | undefined {\n  if (!error || !error.errorCode) {\n    return undefined;\n  }\n  switch (error.errorCode) {\n    case ErrorCode.OrderModificationError:\n    case ErrorCode.OrderLimitError:\n    case ErrorCode.NegativeQuantityError:\n    case ErrorCode.InsufficientStockError:\n      return error.message;\n  }\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { SearchQueryVariables } from '~/generated/graphql';\n\nexport function search(variables: SearchQueryVariables, options: QueryOptions) {\n  return sdk.search(variables, options);\n}\n\nexport function searchFacetValues(\n  variables: SearchQueryVariables,\n  options: QueryOptions,\n) {\n  return sdk.searchFacetValues(variables, options);\n}\n\nexport function getProductBySlug(slug: string, options: QueryOptions) {\n  return sdk.product({ slug }, options);\n}\n\nexport const detailedProductFragment = gql`\n  fragment DetailedProduct on Product {\n    id\n    name\n    description\n    collections {\n      id\n      slug\n      name\n      breadcrumbs {\n        id\n        name\n        slug\n      }\n    }\n    facetValues {\n      facet {\n        id\n        code\n        name\n      }\n      id\n      code\n      name\n    }\n    featuredAsset {\n      id\n      preview\n    }\n    assets {\n      id\n      preview\n    }\n    variants {\n      id\n      name\n      priceWithTax\n      currencyCode\n      sku\n      stockLevel\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n`;\n\ngql`\n  query product($slug: String, $id: ID) {\n    product(slug: $slug, id: $id) {\n      ...DetailedProduct\n    }\n  }\n`;\n\nexport const listedProductFragment = gql`\n  fragment ListedProduct on SearchResult {\n    productId\n    productName\n    slug\n    productAsset {\n      id\n      preview\n    }\n    currencyCode\n    priceWithTax {\n      ... on PriceRange {\n        min\n        max\n      }\n      ... on SinglePrice {\n        value\n      }\n    }\n  }\n`;\n\ngql`\n  query search($input: SearchInput!) {\n    search(input: $input) {\n      totalItems\n      items {\n        ...ListedProduct\n      }\n      facetValues {\n        count\n        facetValue {\n          id\n          name\n          facet {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n  ${listedProductFragment}\n`;\n\ngql`\n  query searchFacetValues($input: SearchInput!) {\n    search(input: $input) {\n      totalItems\n      facetValues {\n        count\n        facetValue {\n          id\n          name\n          facet {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n  ${listedProductFragment}\n`;\n", "import { HomeIcon } from '@heroicons/react/24/solid';\nimport { Link } from '@remix-run/react';\n\nexport function Breadcrumbs({\n  items,\n}: {\n  items: { name: string; slug: string; id: string }[];\n}) {\n  return (\n    <nav className=\"flex\" aria-label=\"Breadcrumb\">\n      <ol role=\"list\" className=\"flex items-center space-x-1 md:space-x-4\">\n        <li>\n          <div>\n            <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n              <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Home</span>\n            </Link>\n          </div>\n        </li>\n        {items\n          .filter((item) => item.name !== '__root_collection__')\n          .map((item, index) => (\n            <li key={item.name}>\n              <div className=\"flex items-center\">\n                <svg\n                  className=\"flex-shrink-0 h-5 w-5 text-gray-300\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  aria-hidden=\"true\"\n                >\n                  <path d=\"M5.555 17.776l8-16 .894.448-8 16-.894-.448z\" />\n                </svg>\n                <Link\n                  to={'/t/' + item.slug}\n                  className=\"ml-2 md:ml-4 text-xs md:text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                  {item.name}\n                </Link>\n              </div>\n            </li>\n          ))}\n      </ol>\n    </nav>\n  );\n}\n", "import { XCircleIcon } from '@heroicons/react/24/solid';\n\nexport default function Alert({ message }: { message: string }) {\n  return (\n    <div className=\"rounded-md bg-red-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">{message}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "export type StockLevel = 'IN_STOCK' | 'OUT_OF_STOCK' | 'LOW_STOCK';\n\nexport function StockLevelLabel({ stockLevel }: { stockLevel?: string }) {\n  let stockLevelLabel = '';\n  let badgeClasses = 'bg-gray-100 text-gray-800';\n  switch (stockLevel as StockLevel) {\n    case 'IN_STOCK':\n      stockLevelLabel = 'In stock';\n      badgeClasses = 'bg-green-100 text-green-800';\n      break;\n    case 'OUT_OF_STOCK':\n      stockLevelLabel = 'Out of stock';\n      badgeClasses = 'bg-red-100 text-red-800';\n      break;\n    case 'LOW_STOCK':\n      stockLevelLabel = 'Low stock';\n      badgeClasses = 'bg-yellow-100 text-yellow-800';\n      break;\n  }\n  return (\n    <span\n      className={\n        'inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ' +\n        badgeClasses\n      }\n    >\n      {stockLevelLabel}\n    </span>\n  );\n}\n", "import React, { ReactNode, useRef, RefObject, useEffect } from 'react';\n\nexport function ScrollableContainer({ children }: { children: ReactNode[] }) {\n  const spanRef: RefObject<HTMLSpanElement> | undefined = useRef(null);\n\n  // kindly inspired from https://htmldom.dev/drag-to-scroll/\n  let pos = {\n    top: 0,\n    left: 0,\n    x: 0,\n    y: 0,\n  };\n\n  const mouseDownHandler = (e: React.MouseEvent<HTMLSpanElement>) => {\n    const span = spanRef.current!;\n\n    pos = {\n      left: span.scrollLeft,\n      top: span.scrollTop,\n      x: e.clientX,\n      y: e.clientY,\n    };\n\n    span.style.cursor = 'grabbing';\n    span.style.userSelect = 'none';\n\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n  };\n\n  const mouseMoveHandler = (e: MouseEvent) => {\n    const span = spanRef.current!;\n\n    const dx = e.clientX - pos.x;\n    const dy = e.clientY - pos.y;\n\n    span.scrollTop = pos.top - dy;\n    span.scrollLeft = pos.left - dx;\n  };\n\n  const mouseUpHandler = () => {\n    const span = spanRef.current!;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    span.style.cursor = 'grab';\n    span.style.removeProperty('user-select');\n  };\n\n  const wheelHandler = (e: WheelEvent) => {\n    const diff = e.deltaY || e.deltaX;\n\n    spanRef.current!.scrollLeft += diff * 0.5;\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    spanRef.current!.addEventListener('wheel', wheelHandler, {\n      passive: false,\n    });\n  });\n\n  return (\n    <span\n      className=\"py-2 mt-2 flex flex-row flex-nowrap space-x-4 md:overflow-x-hidden overflow-x-auto cursor-grab touch-pan-x\"\n      ref={spanRef}\n      onMouseDown={mouseDownHandler}\n      onClickCapture={(e) => {\n        if (e.clientX != pos.x || e.clientY != pos.y) {\n          e.stopPropagation();\n        }\n      }}\n    >\n      {children}\n    </span>\n  );\n}\n", "import { ArrowPathIcon, XCircleIcon } from '@heroicons/react/24/solid';\nimport { Link, useFetcher, useSearchParams } from '@remix-run/react';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { ErrorResult } from '~/generated/graphql';\nimport { Input } from '~/components/Input';\n\nimport { action } from \"~/route-containers/authentication/login.server\";\nimport { loginValidator } from '~/validators';\nexport { action };\n\n\nexport default function SignInPage() {\n  const [searchParams] = useSearchParams();\n  const fetcher = useFetcher<ErrorResult>();\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\u041D\u044D\u0432\u0442\u0440\u044D\u0445</h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          \u042D\u0441\u0432\u044D\u043B{' '}\n          <Link\n            to=\"/sign-up\"\n            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n          >\n            \u0448\u0438\u043D\u044D \u0431\u04AF\u0440\u0442\u0433\u044D\u043B \u04AF\u04AF\u0441\u0433\u044D\u0445\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <ValidatedForm validator={loginValidator} fetcher={fetcher} id=\"signInForm\" method=\"post\">\n            <fieldset disabled={fetcher.state !== 'idle'} className=\"space-y-6\">\n              <input\n                type=\"hidden\"\n                name=\"redirectTo\"\n                value={searchParams.get('redirectTo') ?? undefined}\n              />\n              <div>\n                <Input\n                  label=\"\u0418\u043C\u044D\u0439\u043B\"\n                  name=\"email\"\n                  required\n                  autoComplete=\"email\"\n                 />\n              </div>\n\n              <div>\n                <Input\n                  label=\"\u041D\u0443\u0443\u0446 \u04AF\u0433\"\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  autoComplete=\"current-password\"\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"rememberMe\"\n                    name=\"rememberMe\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded disabled:bg-gray-300 disabled:cursor-not-allowed\"\n                    defaultChecked\n                  />\n                  <label\n                    htmlFor=\"rememberMe\"\n                    className=\"ml-2 block text-sm text-gray-900\"\n                  >\n                    \u041D\u0430\u043C\u0430\u0439\u0433 \u0441\u0430\u043D\u0430\n                  </label>\n                </div>\n\n                <div className=\"text-sm\">\n                  <Link\n                    to=\"/password-reset\"\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                  >\n                    \u041D\u0443\u0443\u0446 \u04AF\u0433\u044D\u044D \u043C\u0430\u0440\u0442\u0441\u0430\u043D \u0443\u0443?\n                  </Link>\n                </div>\n              </div>\n\n              {fetcher.data && fetcher.state === 'idle' && (\n                <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <XCircleIcon\n                        className=\"h-5 w-5 text-red-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        \u0410\u043B\u0434\u0430\u0430\n                      </h3>\n                      <p className=\"text-sm text-red-700 mt-2\">\n                        \u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u043D\u044D\u0440 \u044D\u0441\u0432\u044D\u043B \u043D\u0443\u0443\u0446 \u04AF\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430!\n                        {/* {login.data.message} */}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  <span className='flex gap-4 items-center'>\n                    {fetcher.state !== 'idle' && <ArrowPathIcon className=\"animate-spin h-5 w-5 text-gray-500\" />}\n                    \u041D\u044D\u0432\u0442\u0440\u044D\u0445\n                  </span>\n                </button>\n              </div>\n            </fieldset>\n          </ValidatedForm>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { redirect } from '@remix-run/server-runtime';\nimport { validationError } from \"remix-validated-form\";\nimport { login } from '~/providers/account/account';\nimport { loginValidator } from \"~/validators\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  let [formData] = await Promise.all([\n    request.formData(),\n  ]);\n\n  const validationResult = await loginValidator.validate(formData);\n  if (validationResult.error) return validationError(validationResult.error);\n\n  const formParam = Object.fromEntries(formData);\n  \n  const email = formParam.email.toString();\n  const password = formParam.password.toString();\n  const rememberMe = !!formParam.rememberMe;\n  const redirectTo = (formParam.redirectTo.toString() || '/account') as string;\n  const result = await login(email, password, rememberMe, { request });\n  if (result.__typename === 'CurrentUser') {\n    return redirect(redirectTo, { headers: result._headers });\n  } else {\n    return json(result, {\n      status: 401,\n    });\n  }\n}\n ", "import { useLoaderData } from '@remix-run/react';\nimport { MetaFunction } from '@remix-run/server-runtime';\nimport { useRef, useState } from 'react';\nimport { Breadcrumbs } from '~/components/Breadcrumbs';\nimport { FiltersButton } from '~/components/FiltersButton';\nimport { CollectionCard } from '~/components/collections/CollectionCard';\nimport FacetFilterControls from '~/components/facet-filter/FacetFilterControls';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { ProductCard } from '~/components/products/ProductCard';\nimport { APP_META_TITLE } from '~/constants';\n\nimport { loader } from \"~/route-containers/collections.server\";\nexport { loader };\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: data?.collection\n      ? `${data.collection?.name} - ${APP_META_TITLE}`\n      : APP_META_TITLE,\n  };\n};\n\nexport default function CollectionSlug() {\n  const { collection, result, resultWithoutFacetValueFilters, facetValueIds } =\n    useLoaderData<typeof loader>();\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  const facetValuesTracker = useRef(new FacetFilterTracker());\n  facetValuesTracker.current.update(\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  );\n  console.log(result.items);\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {collection.name}\n        </h2>\n\n        <FiltersButton\n          filterCount={facetValueIds.length}\n          onClick={() => setMobileFiltersOpen(true)}\n        />\n      </div>\n\n      {/* Breadcrumbs  */}\n      <Breadcrumbs items={collection.breadcrumbs} />\n\n      {collection.children?.length ? (\n        <div className=\"max-w-2xl mx-auto py-16 sm:py-16 lg:max-w-none border-b mb-16\">\n          <h2 className=\"text-2xl font-light text-gray-900\">\u0410\u043D\u0433\u0438\u043B\u0430\u043B</h2>\n          <div className=\"mt-6 grid max-w-xs sm:max-w-none mx-auto sm:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-4\">\n            {collection.children.map((child) => (\n              <CollectionCard\n                key={child.id}\n                collection={child}\n              />\n            ))}\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div className=\"mt-6 grid sm:grid-cols-5 gap-x-4\">\n        <FacetFilterControls\n          facetFilterTracker={facetValuesTracker.current}\n          mobileFiltersOpen={mobileFiltersOpen}\n          setMobileFiltersOpen={setMobileFiltersOpen}\n        />\n        <div className=\"sm:col-span-5 lg:col-span-4\">\n          <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n            {result.items.map((item) => (\n              <ProductCard key={item.productId} {...item} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        Collection not found!\n      </h2>\n      <div className=\"mt-6 grid sm:grid-cols-5 gap-x-4\">\n        <div className=\"space-y-6\">\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n        </div>\n        <div className=\"sm:col-span-5 lg:col-span-4\">\n          <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { FunnelIcon } from '@heroicons/react/24/solid';\n\nexport function FiltersButton({\n  filterCount,\n  onClick,\n}: {\n  filterCount: number;\n  onClick: () => void;\n}) {\n  return (\n    <button\n      type=\"button\"\n      className=\"flex space-x-2 items-center border rounded p-2 ml-4 sm:ml-6 text-gray-400 hover:text-gray-500 lg:hidden\"\n      onClick={onClick}\n    >\n      {!!filterCount ? (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-200 text-primary-800\">\n          {filterCount}\n        </span>\n      ) : (\n        ''\n      )}\n      <span>Filters</span>\n      <FunnelIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n    </button>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { CollectionsQuery } from '~/generated/graphql';\n\nexport function CollectionCard({\n  collection,\n}: {\n  collection: CollectionsQuery['collections']['items'][number];\n}) {\n  return (\n    <Link\n      to={'/t/' + collection.slug}\n      prefetch=\"intent\"\n      key={collection.id}\n      className=\"max-w-[300px] relative rounded-lg overflow-hidden hover:opacity-75 xl:w-auto\"\n    >\n      <span aria-hidden=\"true\" className=\"\">\n        <div className=\"w-full h-full object-center object-cover\">\n          <img src={collection.featuredAsset?.preview + '?w=300&h=300'} />\n        </div>\n      </span>\n      <span\n        aria-hidden=\"true\"\n        className=\"absolute w-full bottom-x-0 bottom-0 h-2/3 bg-gradient-to-t from-gray-800 opacity-50\"\n      />\n      <span className=\"absolute w-full bottom-2 mt-auto text-center text-xl font-bold text-white\">\n        {collection.name}\n      </span>\n    </Link>\n  );\n}\n", "import { Fragment, SyntheticEvent } from 'react';\nimport { Dialog, Disclosure, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { MinusSmallIcon, PlusSmallIcon } from '@heroicons/react/24/solid';\nimport { Form, useSearchParams, useSubmit } from '@remix-run/react';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\n\nexport default function FacetFilterControls({\n  facetFilterTracker,\n  mobileFiltersOpen,\n  setMobileFiltersOpen,\n}: {\n  facetFilterTracker: FacetFilterTracker;\n  mobileFiltersOpen: boolean;\n  setMobileFiltersOpen: (value: boolean) => void;\n}) {\n  const submit = useSubmit();\n  const [searchParams] = useSearchParams();\n  const q = searchParams.getAll('q');\n\n  function handleChange(event: SyntheticEvent<HTMLFormElement>) {\n    submit(event.currentTarget, { replace: false });\n  }\n\n  return (\n    <>\n      {/* Mobile filter dialog */}\n      <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-40 lg:hidden\"\n          onClose={setMobileFiltersOpen}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 flex z-40\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <Dialog.Panel className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n                <div className=\"px-4 flex items-center justify-between\">\n                  <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                  <button\n                    type=\"button\"\n                    className=\"-mr-2 w-10 h-10 bg-white p-2 rounded-md flex items-center justify-center text-gray-400\"\n                    onClick={() => setMobileFiltersOpen(false)}\n                  >\n                    <span className=\"sr-only\">Close menu</span>\n                    <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n                <Form\n                  className=\"mt-4 border-t border-gray-200\"\n                  method=\"get\"\n                  onChange={handleChange}\n                >\n                  <input type=\"hidden\" name=\"q\" value={q} />\n                  {facetFilterTracker.facetsWithValues.map((facet) => (\n                    <Disclosure\n                      as=\"div\"\n                      key={facet.id}\n                      defaultOpen={true}\n                      className=\"border-t border-gray-200 px-4 py-6\"\n                    >\n                      {({ open }) => (\n                        <>\n                          <h3 className=\"-mx-2 -my-3 flow-root\">\n                            <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                              <span className=\"font-medium text-gray-900 uppercase\">\n                                {facet.name}\n                              </span>\n                              <span className=\"ml-6 flex items-center\">\n                                {open ? (\n                                  <MinusSmallIcon\n                                    className=\"h-5 w-5\"\n                                    aria-hidden=\"true\"\n                                  />\n                                ) : (\n                                  <PlusSmallIcon\n                                    className=\"h-5 w-5\"\n                                    aria-hidden=\"true\"\n                                  />\n                                )}\n                              </span>\n                            </Disclosure.Button>\n                          </h3>\n                          <Disclosure.Panel className=\"pt-6\">\n                            <div className=\"space-y-6\">\n                              {facet.values.map((value, optionIdx) => (\n                                <div\n                                  key={value.id}\n                                  className=\"flex items-center\"\n                                >\n                                  <input\n                                    id={`filter-mobile-${facet.id}-${optionIdx}`}\n                                    name={`fvid`}\n                                    defaultValue={value.id}\n                                    type=\"checkbox\"\n                                    checked={value.selected}\n                                    onChange={() => {}}\n                                    className=\"h-4 w-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500\"\n                                  />\n                                  <label\n                                    htmlFor={`filter-mobile-${facet.id}-${optionIdx}`}\n                                    className=\"ml-3 min-w-0 flex-1 text-gray-500\"\n                                  >\n                                    {value.name}\n                                  </label>\n                                </div>\n                              ))}\n                            </div>\n                          </Disclosure.Panel>\n                        </>\n                      )}\n                    </Disclosure>\n                  ))}\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n\n      <Form method=\"get\" className=\"hidden lg:block\" onChange={handleChange}>\n        <input type=\"hidden\" name=\"q\" value={q} />\n        {facetFilterTracker.facetsWithValues.map((facet) => (\n          <Disclosure\n            as=\"div\"\n            key={facet.id}\n            defaultOpen={true}\n            className=\"border-b border-gray-200 py-6\"\n          >\n            {({ open }) => (\n              <>\n                <h3 className=\"-my-3 flow-root\">\n                  <Disclosure.Button className=\"py-3 bg-white w-full flex items-center justify-between text-sm text-gray-400 hover:text-gray-500\">\n                    <span className=\"font-medium text-gray-900 uppercase\">\n                      {facet.name}\n                    </span>\n                    <span className=\"ml-6 flex items-center\">\n                      {open ? (\n                        <MinusSmallIcon\n                          className=\"h-5 w-5\"\n                          aria-hidden=\"true\"\n                        />\n                      ) : (\n                        <PlusSmallIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                      )}\n                    </span>\n                  </Disclosure.Button>\n                </h3>\n                <Disclosure.Panel className=\"pt-6\">\n                  <div className=\"space-y-4\">\n                    {facet.values.map((value, optionIdx) => (\n                      <div key={value.id} className=\"flex items-center\">\n                        <input\n                          id={`filter-${facet.id}-${optionIdx}`}\n                          name={`fvid`}\n                          defaultValue={value.id}\n                          type=\"checkbox\"\n                          checked={value.selected}\n                          onChange={() => {}}\n                          className=\"h-4 w-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500\"\n                        />\n                        <label\n                          htmlFor={`filter-${facet.id}-${optionIdx}`}\n                          className=\"ml-3 text-sm text-gray-600\"\n                        >\n                          {value.name}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </Disclosure.Panel>\n              </>\n            )}\n          </Disclosure>\n        ))}\n      </Form>\n    </>\n  );\n}\n", "import { SearchFacetValuesQuery, SearchQuery } from '~/generated/graphql';\n\nexport interface FacetWithValues {\n  id: string;\n  name: string;\n  values: Array<{\n    id: string;\n    name: string;\n    selected: boolean;\n  }>;\n}\n\nexport class FacetFilterTracker {\n  private _facetsWithValues: FacetWithValues[] = [];\n\n  get facetsWithValues() {\n    return this._facetsWithValues;\n  }\n\n  update(\n    searchResult: SearchQuery['search'],\n    resultWithoutFacetValueFilters: SearchFacetValuesQuery['search'],\n    activeFacetValueIds: string[],\n  ) {\n    this._facetsWithValues = this.groupFacetValues(\n      resultWithoutFacetValueFilters,\n      searchResult.facetValues,\n      activeFacetValueIds,\n    );\n  }\n\n  private groupFacetValues(\n    withoutFilters: SearchFacetValuesQuery['search'],\n    current: SearchQuery['search']['facetValues'] | null,\n    activeFacetValueIds: string[],\n  ): FacetWithValues[] {\n    if (!current) {\n      return [];\n    }\n    const facetMap = new Map<string, FacetWithValues>();\n    for (const {\n      facetValue: { id, name, facet },\n      count,\n    } of withoutFilters.facetValues) {\n      if (count === withoutFilters.totalItems) {\n        continue;\n      }\n      const facetFromMap = facetMap.get(facet.id);\n      const selected = activeFacetValueIds.includes(id);\n      if (facetFromMap) {\n        facetFromMap.values.push({ id, name, selected });\n      } else {\n        facetMap.set(facet.id, {\n          id: facet.id,\n          name: facet.name,\n          values: [{ id, name, selected }],\n        });\n      }\n    }\n    return Array.from(facetMap.values());\n  }\n}\n", "import { SearchQuery } from '~/generated/graphql';\nimport { Link } from '@remix-run/react';\nimport { Price } from './Price';\n\nexport type ProductCardProps = SearchQuery['search']['items'][number];\nexport function ProductCard({\n  productAsset,\n  productName,\n  slug,\n  priceWithTax,\n  currencyCode,\n}: ProductCardProps) {\n  return (\n    <Link className=\"flex flex-col\" prefetch=\"intent\" to={`/p/${slug}`}>\n      <img\n        className=\"rounded-xl flex-grow object-cover aspect-[7/8]\"\n        alt=\"\"\n        src={productAsset?.preview + '?w=300&h=400'}\n      />\n      <div className=\"h-2\" />\n      <div className=\"text-sm text-gray-700\">{productName}</div>\n      <div className=\"text-sm font-medium text-gray-900\">\n        <Price priceWithTax={priceWithTax} currencyCode={currencyCode} />\n      </div>\n    </Link>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { sdk } from \"~/graphqlWrapper\";\nimport { filteredSearchLoader } from \"~/utils/filtered-search-loader\";\n\nexport const loader = async ({ params, request, context }: LoaderArgs) => {\n  const { result, resultWithoutFacetValueFilters, facetValueIds } =\n  await filteredSearchLoader({\n    params,\n    request,\n    context,\n  });\n  const collection = (await sdk.collection({ slug: params.slug })).collection;\n  if (!collection?.id || !collection?.name) {\n    throw new Response('Not Found', {\n      status: 404,\n    });\n  }\n\n  return json({\n    collection,\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  });\n}", "import { DataFunctionArgs } from '@remix-run/cloudflare';\nimport { search, searchFacetValues } from '~/providers/products/products';\nimport { sdk } from '~/graphqlWrapper';\n\n/**\n * This loader deals with loading product searches, which is used in both the search page and the\n * category list page.\n */\nexport async function filteredSearchLoader({\n  params,\n  request,\n}: DataFunctionArgs) {\n  const url = new URL(request.url);\n  const term = url.searchParams.get('q');\n  const facetValueIds = url.searchParams.getAll('fvid');\n  const collectionSlug = params.slug;\n\n  let resultPromises: [\n    ReturnType<typeof search>,\n    ReturnType<typeof searchFacetValues>,\n  ];\n  const searchResultPromise = search(\n    {\n      input: {\n        groupByProduct: true,\n        term,\n        facetValueIds,\n        collectionSlug: params.slug,\n      },\n    },\n    { request },\n  );\n  if (facetValueIds.length) {\n    resultPromises = [\n      searchResultPromise,\n      searchFacetValues(\n        {\n          input: {\n            groupByProduct: true,\n            term,\n            collectionSlug: params.slug,\n          },\n        },\n        { request },\n      ),\n    ];\n  } else {\n    resultPromises = [searchResultPromise, searchResultPromise];\n  }\n  const [result, resultWithoutFacetValueFilters] = await Promise.all(\n    resultPromises,\n  );\n  return {\n    term,\n    facetValueIds,\n    result: result.search,\n    resultWithoutFacetValueFilters: resultWithoutFacetValueFilters.search,\n  };\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport { ProductCard } from '~/components/products/ProductCard';\nimport { useRef, useState } from 'react';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport FacetFilterControls from '~/components/facet-filter/FacetFilterControls';\nimport { filteredSearchLoader } from '~/utils/filtered-search-loader';\nimport { FiltersButton } from '~/components/FiltersButton';\n\nexport const loader = filteredSearchLoader;\n\nexport default function Search() {\n  const { result, resultWithoutFacetValueFilters, term, facetValueIds } =\n    useLoaderData<typeof loader>();\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  const facetValuesTracker = useRef(new FacetFilterTracker());\n  facetValuesTracker.current.update(\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  );\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {term ? `Results for \"${term}\"` : 'All results'}\n        </h2>\n\n        <FiltersButton\n          filterCount={facetValueIds.length}\n          onClick={() => setMobileFiltersOpen(true)}\n        />\n      </div>\n\n      <div className=\"mt-6 grid sm:grid-cols-5 gap-x-4\">\n        <FacetFilterControls\n          facetFilterTracker={facetValuesTracker.current}\n          mobileFiltersOpen={mobileFiltersOpen}\n          setMobileFiltersOpen={setMobileFiltersOpen}\n        />\n        <div className=\"sm:col-span-5 lg:col-span-4\">\n          <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n            {result.items.map((item) => (\n              <ProductCard key={item.productId} {...item}></ProductCard>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useRef } from 'react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { verifyCustomerAccount } from '~/providers/account/account';\n\ntype LoaderReturnType = {\n  success: boolean;\n  error?: string;\n  headersJson?: string;\n};\n\nexport async function loader({\n  request,\n}: DataFunctionArgs): Promise<LoaderReturnType> {\n  const url = new URL(request.url);\n  const token = url.searchParams.get('token');\n  if (!token) {\n    return {\n      success: false,\n      error: 'Verification token was not provided!',\n    };\n  }\n\n  const result = await verifyCustomerAccount({ request }, token);\n  if (result.__typename !== 'CurrentUser') {\n    return { success: false, error: result.message };\n  }\n\n  const headersJson = JSON.stringify(Object.fromEntries(result._headers));\n  return { success: true, headersJson };\n}\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const headersJson = body.get('headers') as string;\n  const redirectTarget = body.get('redirect') as string;\n\n  if (!headersJson) {\n    return null;\n  }\n\n  const headers = new Headers();\n  const headerData = JSON.parse(headersJson);\n  Object.keys(headerData).forEach((key) => {\n    headers.set(key, headerData[key]);\n  });\n\n  return redirect(redirectTarget, { headers });\n}\n\nexport default function VerifyTokenPage() {\n  const [searchParams] = useSearchParams();\n  const result = useLoaderData<LoaderReturnType>();\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!result.success || !btnRef.current) {\n      return;\n    }\n\n    const submitBtn = btnRef.current;\n    setTimeout(() => submitBtn.click(), 5000);\n  }, [result]);\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {result.success ? (\n            <div className=\"rounded-md bg-green-100 p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-700\">\n                    \u0422\u0430\u043D\u044B \u0431\u04AF\u0440\u0442\u0433\u044D\u043B \u0430\u043C\u0436\u0438\u043B\u0442\u0442\u0430\u0439 \u0431\u0430\u0442\u0430\u043B\u0433\u0430\u0430\u0436\u043B\u0430\u0430. 5 \u0441\u0435\u043A\u0443\u043D\u0434\u044B\u043D \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u0445\u0443\u0443\u0434\u0430\u0441 \u0440\u0443\u0443 \u043E\u0447\u0438\u043D\u043E ...\n                  </p>\n                </div>\n                <form method=\"post\">\n                  <input\n                    type=\"hidden\"\n                    name=\"redirect\"\n                    value={searchParams.get('redirectTo') || '/sign-in'}\n                  />\n                  <input\n                    type=\"hidden\"\n                    name=\"headers\"\n                    value={result.headersJson}\n                  />\n                  <button\n                    ref={btnRef}\n                    type=\"submit\"\n                    style={{ display: 'none ' }}\n                  />\n                </form>\n              </div>\n            </div>\n          ) : (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon\n                    className=\"h-5 w-5 text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{result.error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport Banners from '~/components/home/Banners';\nimport { Hero } from '~/components/home/Hero';\nimport NewsletterBox from '~/components/home/NewsletterBox';\nimport ScrollableProducts from '~/components/home/ScrollableProducts';\nimport ProductCardHorizontal from '~/components/products/ProductCardHorizontal';\nimport { loader } from \"~/route-containers/home.server\";\nexport { loader };\n\nexport default function Index() {\n  const { collections } = useLoaderData<typeof loader>();\n  const headerImage = collections[0]?.featuredAsset?.preview;\n  return (\n    <>\n\n      <main>\n        <div className=\"relative\">\n          <Hero />\n        </div>\n\n        <section aria-labelledby=\"scrollable-products\" className=\"my-5 sm:pt-32 xl:max-w-7xl xl:mx-auto xl:px-8\">\n          <ScrollableProducts />\n        </section>\n\n        <section aria-labelledby=\"banners\" className=\"my-10 sm:pt-32 xl:max-w-7xl xl:mx-auto xl:px-8\">\n          <Banners />\n        </section>\n\n        <section aria-labelledby=\"today-deals\" className=\"grid grid-cols-2 gap-4 my-10 xl:max-w-7xl xl:mx-auto xl:px-8\">\n          <ProductCardHorizontal />\n          <ProductCardHorizontal />\n        </section>\n\n        <NewsletterBox />\n      </main>\n\n    </>\n  );\n}\n", "import { SfButton } from '@storefront-ui/react';\nimport classNames from 'classnames';\n\nconst displayDetails = [\n  {\n    title: 'Pack it Up',\n    subtitle: 'Be active',\n    description: 'Explore the great outdoors with our backpacks',\n    callToAction: 'Discover now',\n    image: \"https://docs.storefrontui.io/v2-react/_next/static/media/display-2.7c344e7d.png\",\n    backgroundColor: 'bg-warning-200',\n    reverse: false,\n  },\n  {\n    title: 'Sunny Days Ahead',\n    subtitle: 'Be inspired',\n    description: 'Step out in style with our sunglasses collection',\n    callToAction: 'Discover now',\n    image: \"https://docs.storefrontui.io/v2-react/_next/static/media/display.a29e408b.png\",\n    backgroundColor: 'bg-negative-200',\n    reverse: true,\n  },\n\n  {\n    title: 'Pack it Up',\n    subtitle: 'Be active',\n    description: 'Explore the great outdoors with our backpacks',\n    callToAction: 'Discover now',\n    image: \"https://docs.storefrontui.io/v2-react/_next/static/media/display-2.7c344e7d.png\",\n    backgroundColor: 'bg-warning-200',\n    reverse: true,\n  },\n  {\n    title: 'Sunny Days Ahead',\n    subtitle: 'Be inspired',\n    description: 'Step out in style with our sunglasses collection',\n    callToAction: 'Discover now',\n    image: \"https://docs.storefrontui.io/v2-react/_next/static/media/display.a29e408b.png\",\n    backgroundColor: 'bg-negative-200',\n    reverse: false,\n  },\n];\nexport default function Banners() {\n  return (\n    <div className=\"flex flex-col gap-6 md:flex-row\">\n      <div className=\"flex flex-col gap-6 md:flex-row\">\n        {displayDetails.map(\n          ({ title, subtitle, description, callToAction, image, backgroundColor, reverse }, index) => (\n            <div\n              key={`${title}-${index}`}\n              className={classNames(\n                `relative flex flex-col justify-between rounded-md md:items-center md:basis-1/2 ${backgroundColor}`,\n                { 'flex-col-reverse': reverse },\n              )}\n            >\n              <a\n                className=\"absolute w-full h-full z-1 focus-visible:outline focus-visible:rounded-lg\"\n                aria-label={title}\n                href=\"/\"\n              />\n              <div className=\"flex flex-col items-center p-4 text-center md:p-10\">\n                <p className=\"mb-2 font-bold tracking-widest uppercase typography-headline-6\">{subtitle}</p>\n                <p className=\"mb-4 font-bold typography-headline-2\">{title}</p>\n                <p className=\"mb-4 typography-text-lg\">{description}</p>\n                <SfButton className=\"font-semibold !bg-neutral-900\">{callToAction}</SfButton>\n              </div>\n              <div className=\"flex items-center w-full\">\n                <img src={image} alt={title} width=\"100%\" height=\"auto\" />\n              </div>\n            </div>\n          ),\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { classNames } from \"~/utils/class-names\"\nimport { SfButton } from '@storefront-ui/react';\nimport { Link } from \"@remix-run/react\";\n\nconst banners = [\n  {\n    image: 'https://docs.storefrontui.io/v2-react/_next/static/media/display.a29e408b.png',\n    title: 'Sunny Days Ahead',\n    subtitle: 'Be inspired',\n    description: 'Step out in style with our sunglasses collection',\n    buttonText: 'Discover now',\n    reverse: false,\n    backgroundColor: 'bg-negative-200',\n    titleClass: 'md:typography-headline-2',\n    subtitleClass: 'md:typography-headline-6',\n    descriptionClass: 'md:typography-text-lg',\n  },\n  {\n    image: 'https://docs.storefrontui.io/v2-react/_next/static/media/display-2.7c344e7d.png',\n    title: 'Pack it Up',\n    subtitle: 'Be active',\n    description: 'Explore the great outdoors with our backpacks',\n    buttonText: 'Discover now',\n    reverse: true,\n    backgroundColor: 'bg-warning-200',\n  },\n  {\n    image: 'https://docs.storefrontui.io/v2-react/_next/static/media/display-3.9d8fa544.png',\n    title: 'Fresh and Bold',\n    subtitle: 'New collection',\n    description: 'Add a pop up color to your outfit',\n    buttonText: 'Discover now',\n    reverse: false,\n    backgroundColor: 'bg-secondary-200',\n  },\n];\n\nexport function Hero() {\n  return (\n    <div className=\"flex flex-col md:flex-row flex-wrap gap-6 max-w-[1540px]\">\n      {banners.map(\n        ({ image, title, subtitle, description, buttonText, backgroundColor, reverse, titleClass, subtitleClass }) => (\n          <div\n            key={title}\n            className={classNames(\n              'relative flex md:max-w-[1536px] md:[&:not(:first-of-type)]:flex-1 md:first-of-type:w-full',\n              backgroundColor,\n            )}\n          >\n            <a\n              className=\"absolute w-full h-full z-1 focus-visible:outline focus-visible:rounded-lg\"\n              aria-label={title}\n              href=\"/\"\n            />\n            <div className='flex justify-between overflow-hidden grow'>\n              <div className=\"flex flex-col justify-center items-start p-6 lg:p-10 max-w-1/2\">\n                <p\n                  className={classNames('uppercase typography-text-xs block font-bold tracking-widest', subtitleClass || '')}\n                >\n                  {subtitle}\n                </p>\n                <h2 className={classNames('mb-4 mt-2 font-bold typography-headline-3', titleClass || '')}>{title}</h2>\n                <p className=\"typography-text-base block mb-4\">{description}</p>\n                <SfButton className=\"!bg-black\">{buttonText}</SfButton>\n              </div>\n              <img src={image} alt={title} className=\"w-1/2 self-end object-contain\" />\n            </div>\n          </div>\n        ),\n      )}\n    </div>\n  );\n}", "import { useState } from 'react';\nimport { SfButton, SfInput, SfLink, SfIconCheckCircle, SfIconClose } from '@storefront-ui/react';\nimport { SbInput } from '../form/SbInput';\nimport { ValidatedForm, useField } from 'remix-validated-form';\nimport { emailValidator } from '~/validators';\n\nexport default function NewsletterBox() {\n  const [positiveAlert, setPositiveAlert] = useState(false);\n  const [errorAlert, setErrorAlert] = useState(false);\n\n  const { error, getInputProps } = useField('email', {\n    formId: 'subscribe-form',\n  });\n\n  return (\n    <div className=\"relative\">\n      <div className=\"bg-neutral-100 p-4 sm:p-10 text-center\">\n\n        <p className=\"typography-headline-4 sm:typography-headline-3 font-bold\">\n          Subscribe and get discount on your first purchase!\n        </p>\n        <p className=\"typography-text-sm sm:typography-text-base my-2 mb-4\">\n          Be aware of upcoming sales and events. Receive gifts and special offers!\n        </p>\n\n        <ValidatedForm id=\"subscribe-form\" validator={emailValidator} className=\"grid justify-items-stretch grid-flow-row-dense grid-cols-3 grid-rows-2 gap-2 max-w-[688px] mx-auto\">\n          <div className=\"col-span-2\">\n            <SfInput\n              wrapperClassName=\"grow\"\n              placeholder=\"\u0418\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433\u0430\u0430 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443\"\n              invalid={error !== undefined}\n              {...getInputProps({ id: 'email-address' })}\n            />\n            <div className=\"flex justify-between\">\n              <div>\n                {error && (\n                  <p className=\"text-sm text-negative-700 font-medium mt-0.5\">{error}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <SfButton type=\"submit\" className=\"w-full\">\n              \u0411\u04AF\u0440\u0442\u0433\u04AF\u04AF\u043B\u044D\u0445\n            </SfButton>\n          </div>\n\n          <div className=\"typography-text-xs text-neutral-600 col-span-3\">\n            To learn how we process your data, visit our <SfLink className=\"text-neutral-600\">Privacy Notice</SfLink>. You\n            can <SfLink className=\"text-neutral-600\">unsubscribe</SfLink> at any time without costs.\n          </div>\n\n        </ValidatedForm>\n      </div>\n\n      <div className=\"absolute top-0 right-0 mx-2 mt-2 sm:mr-6\">\n        {positiveAlert && (\n          <div\n            role=\"alert\"\n            className=\"flex items-start md:items-center shadow-md max-w-[600px] bg-positive-100 pr-2 pl-4 mb-2 ring-1 ring-positive-200 typography-text-sm md:typography-text-base py-1 rounded-md\"\n          >\n            <SfIconCheckCircle className=\"mr-2 my-2 text-positive-700\" />\n            <p className=\"py-2 mr-2\">\u0422\u0430\u043D\u044B \u0438\u043C\u044D\u0439\u043B \u0430\u043C\u0436\u0438\u043B\u0442\u0442\u0430\u0439 \u0431\u04AF\u0440\u0442\u0433\u044D\u0433\u0434\u043B\u044D\u044D.</p>\n            <button\n              type=\"button\"\n              className=\"p-1.5 md:p-2 ml-auto rounded-md text-positive-700 hover:bg-positive-200 active:bg-positive-300 hover:text-positive-800 active:text-positive-900\"\n              aria-label=\"Close alert\"\n              onClick={() => setPositiveAlert(false)}\n            >\n              <SfIconClose className=\"hidden md:block\" />\n              <SfIconClose size=\"sm\" className=\"md:hidden block\" />\n            </button>\n          </div>\n        )}\n\n        {errorAlert && (\n          <div\n            role=\"alert\"\n            className=\"flex items-start md:items-center max-w-[600px] shadow-md bg-negative-100 pr-2 pl-4 ring-1 ring-negative-300 typography-text-sm md:typography-text-base py-1 rounded-md\"\n          >\n            <p className=\"py-2 mr-2\">\u042D\u043D\u044D \u0438\u043C\u044D\u0439\u043B \u0430\u043B\u044C \u0445\u044D\u0434\u0438\u0439\u043D \u0431\u04AF\u0440\u0442\u0433\u04AF\u04AF\u043B\u0441\u044D\u043D \u0431\u0430\u0439\u043D\u0430.</p>\n            <button\n              type=\"button\"\n              className=\"p-1.5 md:p-2 ml-auto rounded-md text-negative-700 hover:bg-negative-200 active:bg-negative-300 hover:text-negative-800 active:text-negative-900\"\n              aria-label=\"Close alert\"\n              onClick={() => setErrorAlert(false)}\n            >\n              <SfIconClose className=\"hidden md:block\" />\n              <SfIconClose size=\"sm\" className=\"md:hidden block\" />\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}", "import { SfScrollable } from '@storefront-ui/react';\nimport ProductCard2 from '../products/ProductCard2';\n\nexport default function ScrollableProducts() {\n  return (\n    <SfScrollable className=\"items-center w-full mt-4 mb-4 [&::-webkit-scrollbar]:hidden [-ms-overflow-style:'none'] [scrollbar-width:'none']\">\n      {Array.from({ length: 10 }, (_, i) => (\n        <div\n          key={i}\n          className=\"flex items-center justify-center text-gray-500 border border-dashed shrink-0 bg-neutral-100 border-negative-300\"\n        >\n        <ProductCard2 />\n        </div>\n      ))}\n    </SfScrollable>\n  );\n}", "import { SfButton, SfRating, SfCounter, SfLink, SfIconShoppingCart, SfIconFavorite } from '@storefront-ui/react';\n\nexport default function ProductCard2() {\n  return (\n    <div className=\"border border-neutral-200 rounded-md hover:shadow-lg max-w-[300px]\">\n      <div className=\"relative\">\n        <SfLink href=\"#\">\n          <img\n            src={`https://docs.storefrontui.io/v2-react/_next/static/media/sneakers.959597a6.png`}\n            alt=\"Great product\"\n            className=\"object-cover h-auto rounded-md aspect-square\"\n            width={300}\n            height={300}\n          />\n        </SfLink>\n        <SfButton\n          type=\"button\"\n          variant=\"tertiary\"\n          size=\"sm\"\n          square\n          className=\"absolute bottom-0 right-0 mr-2 mb-2 bg-white border border-neutral-200 !rounded-full\"\n          aria-label=\"Add to wishlist\"\n        >\n          <SfIconFavorite size=\"sm\" />\n        </SfButton>\n      </div>\n      <div className=\"p-4 border-t border-neutral-200\">\n        <SfLink href=\"#\" variant=\"secondary\" className=\"no-underline\">\n          Athletic mens walking sneakers\n        </SfLink>\n        <div className=\"flex items-center pt-1\">\n          <SfRating size=\"xs\" value={5} max={5} />\n\n          <SfLink href=\"#\" variant=\"secondary\" className=\"pl-1 no-underline\">\n            <SfCounter size=\"xs\">{123}</SfCounter>\n          </SfLink>\n        </div>\n        <p className=\"block py-2 font-normal typography-text-sm text-neutral-700\">\n          Lightweight \u2022 Non slip \u2022 Flexible outsole \u2022 Easy to wear on and off\n        </p>\n        <span className=\"block pb-2 font-bold typography-text-lg\">$2345,99</span>\n        <SfButton type=\"button\" size=\"sm\" slotPrefix={<SfIconShoppingCart size=\"sm\" />}>\n          Add to cart\n        </SfButton>\n      </div>\n    </div>\n  );\n}\n", "import { SfButton, SfIconRemove, SfLink, SfIconAdd, SfIconSell, SfIconDelete } from '@storefront-ui/react';\nimport { useCounter } from 'react-use';\nimport { useId, ChangeEvent } from 'react';\nimport { clamp } from '@storefront-ui/shared';\nimport { Link } from '@remix-run/react';\n\nexport default function ProductCardHorizontal() {\n  const inputId = useId();\n  const min = 1;\n  const max = 10;\n  const [value, { inc, dec, set }] = useCounter(min);\n  function handleOnChange(event: ChangeEvent<HTMLInputElement>) {\n    const { value: currentValue } = event.target;\n    const nextValue = parseFloat(currentValue);\n    set(Number(clamp(nextValue, min, max)));\n  }\n  return (\n    <div className=\"relative flex border-b-[1px] border-neutral-200 hover:shadow-lg min-w-[320px] max-w-[640px] p-4\">\n      <div className=\"relative overflow-hidden rounded-md w-[100px] sm:w-[176px]\">\n        <Link to=\"/\">\n          <img\n            className=\"w-full h-auto border rounded-md border-neutral-200\"\n            src={`https://docs.storefrontui.io/v2-react/_next/static/media/smartwatch.df5c0d54.png`}\n            alt=\"alt\"\n            width={300}\n            height={300}\n          />\n        </Link>\n        <div className=\"absolute top-0 left-0 text-white bg-secondary-600 py-1 pl-1.5 pr-2 text-xs font-medium\">\n          <SfIconSell size=\"xs\" className=\"mr-1\" />\n          Sale\n        </div>\n      </div>\n      <div className=\"flex flex-col pl-4 min-w-[180px] flex-1\">\n        <Link to=\"/\" className=\"no-underline typography-text-sm sm:typography-text-lg\">\n          Smartwatch Fitness Tracker\n        </Link>\n        <div className=\"my-2 sm:mb-0\">\n          <ul className=\"text-xs font-normal leading-5 sm:typography-text-sm text-neutral-700\">\n            <li>\n              <span className=\"mr-1\">Size:</span>\n              <span className=\"font-medium\">6.5</span>\n            </li>\n            <li>\n              <span className=\"mr-1\">Color:</span>\n              <span className=\"font-medium\">Red</span>\n            </li>\n          </ul>\n        </div>\n        <div className=\"items-center sm:mt-auto sm:flex\">\n          <span className=\"font-bold sm:ml-auto sm:order-1 typography-text-sm sm:typography-text-lg\">$2,345.99</span>\n          <div className=\"flex items-center justify-between mt-4 sm:mt-0\">\n            <div className=\"flex border border-neutral-300 rounded-md\">\n              <SfButton\n                type=\"button\"\n                variant=\"tertiary\"\n                square\n                className=\"rounded-r-none\"\n                disabled={value <= min}\n                aria-controls={inputId}\n                aria-label=\"Decrease value\"\n                onClick={() => dec()}\n              >\n                <SfIconRemove />\n              </SfButton>\n              <input\n                id={inputId}\n                type=\"number\"\n                role=\"spinbutton\"\n                className=\"appearance-none mx-2 w-8 text-center bg-transparent font-medium [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-inner-spin-button]:display-none [&::-webkit-inner-spin-button]:m-0 [&::-webkit-outer-spin-button]:display-none [&::-webkit-outer-spin-button]:m-0 [-moz-appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none disabled:placeholder-disabled-900 focus-visible:outline focus-visible:outline-offset focus-visible:rounded-sm\"\n                min={min}\n                max={max}\n                value={value}\n                onChange={handleOnChange}\n              />\n              <SfButton\n                type=\"button\"\n                variant=\"tertiary\"\n                square\n                className=\"rounded-l-none\"\n                disabled={value >= max}\n                aria-controls={inputId}\n                aria-label=\"Increase value\"\n                onClick={() => inc()}\n              >\n                <SfIconAdd />\n              </SfButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getCollections } from \"~/providers/collections/collections\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const collections = await getCollections(request);\n  return json({\n    collections,\n  });\n}", "export default function HelpPage() {\n  return (\n    <>\n      Help\n    </>\n  );\n}", "export default function TermsOfServicesPage() {\n  return (\n    <>\n      Terms of Services\n    </>\n  );\n}", "export default {'entry':{'module':'/build/entry.client-LQC72HR7.js','imports':['/build/_shared/chunk-HSRJ34OM.js','/build/_shared/chunk-SPFKZAFF.js','/build/_shared/chunk-7ARF2WVU.js','/build/_shared/chunk-R6ILELA2.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-E6OSUSL2.js','imports':['/build/_shared/chunk-NVCVXO26.js','/build/_shared/chunk-NTC7IO6E.js','/build/_shared/chunk-RRD5WULG.js','/build/_shared/chunk-JIRW5L4X.js','/build/_shared/chunk-JIQLJFPA.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-Y4SKLUOH.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-PL2JB5YE.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/account':{'id':'routes/account','parentId':'root','path':'account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account-P3REYNUM.js','imports':['/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/addresses':{'id':'routes/account/addresses','parentId':'routes/account','path':'addresses','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account/addresses-Q3ZRYU3K.js','imports':['/build/_shared/chunk-C6JYF7PA.js','/build/_shared/chunk-6M2FYBZD.js','/build/_shared/chunk-H26Q2CE7.js','/build/_shared/chunk-JIQLJFPA.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-Y4SKLUOH.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-PL2JB5YE.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/addresses/$addressId':{'id':'routes/account/addresses/$addressId','parentId':'routes/account/addresses','path':':addressId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account/addresses/$addressId-PZ6XAC24.js','imports':['/build/_shared/chunk-ROELMFED.js','/build/_shared/chunk-WWEZWZGS.js','/build/_shared/chunk-74N5QT2L.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/addresses/new':{'id':'routes/account/addresses/new','parentId':'routes/account/addresses','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account/addresses/new-TS55C6L4.js','imports':['/build/_shared/chunk-ROELMFED.js','/build/_shared/chunk-WWEZWZGS.js','/build/_shared/chunk-74N5QT2L.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/index':{'id':'routes/account/index','parentId':'routes/account','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/account/index-IQXN4HVF.js','imports':['/build/_shared/chunk-74N5QT2L.js','/build/_shared/chunk-ZIRDTBX6.js','/build/_shared/chunk-C6JYF7PA.js','/build/_shared/chunk-6M2FYBZD.js','/build/_shared/chunk-H26Q2CE7.js','/build/_shared/chunk-JIQLJFPA.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-Y4SKLUOH.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-PL2JB5YE.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/orders':{'id':'routes/account/orders','parentId':'routes/account','path':'orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account/orders-MZ4RHZNK.js','imports':['/build/_shared/chunk-WWEZWZGS.js','/build/_shared/chunk-NVCVXO26.js','/build/_shared/chunk-RRD5WULG.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-PL2JB5YE.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account/password':{'id':'routes/account/password','parentId':'routes/account','path':'password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account/password-2VPJCAKW.js','imports':['/build/_shared/chunk-6M2FYBZD.js','/build/_shared/chunk-H26Q2CE7.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-PL2JB5YE.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/active-order':{'id':'routes/api/active-order','parentId':'root','path':'api/active-order','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/active-order-7R4W5OW5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/logout':{'id':'routes/api/logout','parentId':'root','path':'api/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/logout-HLYN65BE.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout':{'id':'routes/checkout','parentId':'root','path':'checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout-RNSDA2ZL.js','imports':['/build/_shared/chunk-T3WGGDU3.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout/confirmation.$orderCode':{'id':'routes/checkout/confirmation.$orderCode','parentId':'routes/checkout','path':'confirmation/:orderCode','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout/confirmation.$orderCode-NTZXIJMV.js','imports':['/build/_shared/chunk-NTC7IO6E.js','/build/_shared/chunk-RRD5WULG.js','/build/_shared/chunk-JIRW5L4X.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-PL2JB5YE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout/index':{'id':'routes/checkout/index','parentId':'routes/checkout','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/checkout/index-KKBZIDI4.js','imports':['/build/_shared/chunk-ZIRDTBX6.js','/build/_shared/chunk-VCLWNTVF.js','/build/_shared/chunk-RRD5WULG.js','/build/_shared/chunk-JIRW5L4X.js','/build/_shared/chunk-Y4SKLUOH.js','/build/_shared/chunk-67DYTVMC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout/payment':{'id':'routes/checkout/payment','parentId':'routes/checkout','path':'payment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout/payment-PWALJXUW.js','imports':['/build/_shared/chunk-H26Q2CE7.js','/build/_shared/chunk-VLLRY4HI.js','/build/_shared/chunk-6GVO3GEH.js','/build/_shared/chunk-PL2JB5YE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/help':{'id':'routes/help','parentId':'root','path':'help','index':undefined,'caseSensitive':undefined,'module':'/build/routes/help-PXKYCEQO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-N5EN25CC.js','imports':['/build/_shared/chunk-F5VBLUVR.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-UHGTC3HG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/p/$slug':{'id':'routes/p/$slug','parentId':'root','path':'p/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/p/$slug-ZGQAJERZ.js','imports':['/build/_shared/chunk-42UE54TZ.js','/build/_shared/chunk-VCLWNTVF.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/password-reset':{'id':'routes/password-reset','parentId':'root','path':'password-reset','index':undefined,'caseSensitive':undefined,'module':'/build/routes/password-reset-BPTOGMIM.js','imports':['/build/_shared/chunk-F5VBLUVR.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search':{'id':'routes/search','parentId':'root','path':'search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/search-L7TR6BTE.js','imports':['/build/_shared/chunk-3OJCIEUZ.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-ZMAXV5VK.js','imports':['/build/_shared/chunk-F5VBLUVR.js','/build/_shared/chunk-IH3BNCQX.js','/build/_shared/chunk-5IH74CC5.js','/build/_shared/chunk-DDTE7OZO.js','/build/_shared/chunk-UHGTC3HG.js','/build/_shared/chunk-D67KL4RH.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/index':{'id':'routes/sign-up/index','parentId':'root','path':'sign-up','index':true,'caseSensitive':undefined,'module':'/build/routes/sign-up/index-RY4FVLIE.js','imports':['/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/success':{'id':'routes/sign-up/success','parentId':'root','path':'sign-up/success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/success-BGN7HUYN.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/subscribe':{'id':'routes/subscribe','parentId':'root','path':'subscribe','index':undefined,'caseSensitive':undefined,'module':'/build/routes/subscribe-BQPVOTWY.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/t/$slug':{'id':'routes/t/$slug','parentId':'root','path':'t/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/t/$slug-5NCE47LK.js','imports':['/build/_shared/chunk-3OJCIEUZ.js','/build/_shared/chunk-42UE54TZ.js','/build/_shared/chunk-ZNQ4M7UW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/tos':{'id':'routes/tos','parentId':'root','path':'tos','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tos-BCCKC7U4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/track-order':{'id':'routes/track-order','parentId':'root','path':'track-order','index':undefined,'caseSensitive':undefined,'module':'/build/routes/track-order-FTDHX2Q6.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/verify':{'id':'routes/verify','parentId':'root','path':'verify','index':undefined,'caseSensitive':undefined,'module':'/build/routes/verify-GXCKI2UC.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/verify-email-address-change':{'id':'routes/verify-email-address-change','parentId':'root','path':'verify-email-address-change','index':undefined,'caseSensitive':undefined,'module':'/build/routes/verify-email-address-change-V3HPF2UQ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'version':'47aa687f','hmr':undefined,'url':'/build/manifest-47AA687F.js'};", "\nimport * as entryServer from \"/workspaces/storefront/node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/verify-email-address-change.tsx\";\nimport * as route2 from \"./routes/api/active-order.tsx\";\nimport * as route3 from \"./routes/sign-up/success.tsx\";\nimport * as route4 from \"./routes/password-reset.tsx\";\nimport * as route5 from \"./routes/sign-up/index.tsx\";\nimport * as route6 from \"./routes/track-order.tsx\";\nimport * as route7 from \"./routes/api/logout.ts\";\nimport * as route8 from \"./routes/subscribe.ts\";\nimport * as route9 from \"./routes/checkout.tsx\";\nimport * as route10 from \"./routes/checkout/confirmation.$orderCode.tsx\";\nimport * as route11 from \"./routes/checkout/payment.tsx\";\nimport * as route12 from \"./routes/checkout/index.tsx\";\nimport * as route13 from \"./routes/account.tsx\";\nimport * as route14 from \"./routes/account/addresses.tsx\";\nimport * as route15 from \"./routes/account/addresses/$addressId.tsx\";\nimport * as route16 from \"./routes/account/addresses/new.tsx\";\nimport * as route17 from \"./routes/account/password.tsx\";\nimport * as route18 from \"./routes/account/orders.tsx\";\nimport * as route19 from \"./routes/account/index.tsx\";\nimport * as route20 from \"./routes/p/$slug.tsx\";\nimport * as route21 from \"./routes/sign-in.tsx\";\nimport * as route22 from \"./routes/t/$slug.tsx\";\nimport * as route23 from \"./routes/search.tsx\";\nimport * as route24 from \"./routes/verify.tsx\";\nimport * as route25 from \"./routes/index.tsx\";\nimport * as route26 from \"./routes/help.tsx\";\nimport * as route27 from \"./routes/tos.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/verify-email-address-change\": {\n      id: \"routes/verify-email-address-change\",\n      parentId: \"root\",\n      path: \"verify-email-address-change\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/api/active-order\": {\n      id: \"routes/api/active-order\",\n      parentId: \"root\",\n      path: \"api/active-order\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sign-up/success\": {\n      id: \"routes/sign-up/success\",\n      parentId: \"root\",\n      path: \"sign-up/success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/password-reset\": {\n      id: \"routes/password-reset\",\n      parentId: \"root\",\n      path: \"password-reset\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/sign-up/index\": {\n      id: \"routes/sign-up/index\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/track-order\": {\n      id: \"routes/track-order\",\n      parentId: \"root\",\n      path: \"track-order\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api/logout\": {\n      id: \"routes/api/logout\",\n      parentId: \"root\",\n      path: \"api/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/subscribe\": {\n      id: \"routes/subscribe\",\n      parentId: \"root\",\n      path: \"subscribe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/checkout\": {\n      id: \"routes/checkout\",\n      parentId: \"root\",\n      path: \"checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/checkout/confirmation.$orderCode\": {\n      id: \"routes/checkout/confirmation.$orderCode\",\n      parentId: \"routes/checkout\",\n      path: \"confirmation/:orderCode\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/checkout/payment\": {\n      id: \"routes/checkout/payment\",\n      parentId: \"routes/checkout\",\n      path: \"payment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/checkout/index\": {\n      id: \"routes/checkout/index\",\n      parentId: \"routes/checkout\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/account\": {\n      id: \"routes/account\",\n      parentId: \"root\",\n      path: \"account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/account/addresses\": {\n      id: \"routes/account/addresses\",\n      parentId: \"routes/account\",\n      path: \"addresses\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/account/addresses/$addressId\": {\n      id: \"routes/account/addresses/$addressId\",\n      parentId: \"routes/account/addresses\",\n      path: \":addressId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/account/addresses/new\": {\n      id: \"routes/account/addresses/new\",\n      parentId: \"routes/account/addresses\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/account/password\": {\n      id: \"routes/account/password\",\n      parentId: \"routes/account\",\n      path: \"password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/account/orders\": {\n      id: \"routes/account/orders\",\n      parentId: \"routes/account\",\n      path: \"orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/account/index\": {\n      id: \"routes/account/index\",\n      parentId: \"routes/account\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/p/$slug\": {\n      id: \"routes/p/$slug\",\n      parentId: \"root\",\n      path: \"p/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/t/$slug\": {\n      id: \"routes/t/$slug\",\n      parentId: \"root\",\n      path: \"t/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/search\": {\n      id: \"routes/search\",\n      parentId: \"root\",\n      path: \"search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/verify\": {\n      id: \"routes/verify\",\n      parentId: \"root\",\n      path: \"verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/help\": {\n      id: \"routes/help\",\n      parentId: \"root\",\n      path: \"help\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/tos\": {\n      id: \"routes/tos\",\n      parentId: \"root\",\n      path: \"tos\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_graphql_tag", "gql", "requester", "import_node", "gql", "import_graphql_tag", "activeChannel", "gql", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "adjustOrderLine", "import_jsx_dev_runtime", "adjustOrderLine", "import_react", "import_jsx_dev_runtime", "adjustOrderLine", "import_graphql_tag", "gql", "import_react", "import_react", "import_react_use", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "adjustOrderLine", "loader", "import_react", "import_server_runtime", "import_outline", "import_graphql_tag", "gql", "import_jsx_dev_runtime", "loader", "action", "loader", "import_graphql_tag", "gql", "import_server_runtime", "loader", "action", "action", "import_outline", "import_react", "import_server_runtime", "import_jsx_dev_runtime", "action", "import_react", "import_remix_validated_form", "import_clsx", "import_react", "import_remix_validated_form", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "React", "clsx", "import_node", "import_remix_validated_form", "action", "import_jsx_dev_runtime", "action", "import_react", "import_server_runtime", "import_solid", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "action", "loader", "import_server_runtime", "action", "loader", "action", "import_with_zod", "import_zod", "import_solid", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "adjustOrderLine", "loader", "import_react", "import_outline", "import_solid", "import_react", "import_jsx_dev_runtime", "loader", "action", "loader", "import_react", "import_server_runtime", "import_graphql_tag", "gql", "loader", "action", "import_solid", "import_react", "import_outline", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "checkout_exports", "loader", "import_react", "import_solid", "import_server_runtime", "import_jsx_dev_runtime", "import_react", "import_solid", "import_jsx_dev_runtime", "import_react", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "_a", "loader", "import_solid", "import_react", "import_server_runtime", "import_jsx_dev_runtime", "loader", "action", "loader", "import_react", "import_server_runtime", "import_outline", "import_react", "import_jsx_dev_runtime", "import_outline", "import_react", "import_clsx", "import_solid", "import_jsx_dev_runtime", "import_react", "import_react", "import_solid", "import_react", "import_jsx_dev_runtime", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "Footer", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_react", "import_server_runtime", "import_remix_validated_form", "import_react", "import_react", "state", "import_with_zod", "import_zod", "import_remix_validated_form", "import_react", "import_remix_validated_form", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "validator", "import_jsx_dev_runtime", "loader", "address", "action", "validator", "action", "loader", "import_react", "import_server_runtime", "import_remix_validated_form", "import_react", "import_jsx_dev_runtime", "loader", "action", "validator", "action", "validator", "import_outline", "import_react", "import_server_runtime", "import_with_zod", "import_remix_validated_form", "import_zod", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "validator", "action", "loader", "import_solid", "import_react", "import_remix_validated_form", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "import_solid", "import_outline", "import_react", "import_jsx_dev_runtime", "import_server_runtime", "import_with_zod", "import_zod", "loader", "import_jsx_dev_runtime", "account_exports", "action", "loader", "import_outline", "import_solid", "import_react", "import_server_runtime", "import_with_zod", "import_remix_validated_form", "import_zod", "import_jsx_dev_runtime", "loader", "action", "formError", "CatchBoundary", "loader", "meta", "unstable_shouldReload", "import_server_runtime", "import_react", "import_graphql_tag", "gql", "import_react", "import_solid", "import_solid", "import_react", "import_jsx_dev_runtime", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "meta", "loader", "unstable_shouldReload", "asset", "CatchBoundary", "action", "import_solid", "import_react", "import_remix_validated_form", "import_node", "import_server_runtime", "import_remix_validated_form", "action", "import_jsx_dev_runtime", "slug_exports", "CatchBoundary", "loader", "meta", "import_react", "import_solid", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_outline", "import_solid", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_node", "loader", "import_jsx_dev_runtime", "meta", "CatchBoundary", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "action", "loader", "import_react", "import_server_runtime", "import_outline", "import_jsx_dev_runtime", "loader", "action", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "classNames", "import_react", "import_jsx_dev_runtime", "import_react", "import_remix_validated_form", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_react_use", "import_shared", "import_jsx_dev_runtime", "import_node", "loader", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "checkout_exports", "account_exports", "slug_exports"]
}
