/*
! tailwindcss v3.3.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

button:disabled {
  cursor: not-allowed;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

/* @tailwind components; */

#app :is(.sr-only) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

#app :is(.pointer-events-none) {
  pointer-events: none;
}

#app :is(.fixed) {
  position: fixed;
}

#app :is(.absolute) {
  position: absolute;
}

#app :is(.relative) {
  position: relative;
}

#app :is(.-inset-px) {
  inset: -1px;
}

#app :is(.inset-0) {
  inset: 0px;
}

#app :is(.inset-x-0) {
  left: 0px;
  right: 0px;
}

#app :is(.inset-y-0) {
  top: 0px;
  bottom: 0px;
}

#app :is(.bottom-0) {
  bottom: 0px;
}

#app :is(.bottom-2) {
  bottom: 0.5rem;
}

#app :is(.left-0) {
  left: 0px;
}

#app :is(.right-0) {
  right: 0px;
}

#app :is(.top-0) {
  top: 0px;
}

#app :is(.top-1\/2) {
  top: 50%;
}

#app :is(.top-full) {
  top: 100%;
}

#app :is(.z-10) {
  z-index: 10;
}

#app :is(.z-20) {
  z-index: 20;
}

#app :is(.z-40) {
  z-index: 40;
}

#app :is(.z-\[75\]) {
  z-index: 75;
}

#app :is(.z-50) {
  z-index: 50;
}

#app :is(.z-auto) {
  z-index: auto;
}

#app :is(.col-span-1) {
  grid-column: span 1 / span 1;
}

#app :is(.col-span-2) {
  grid-column: span 2 / span 2;
}

#app :is(.col-span-full) {
  grid-column: 1 / -1;
}

#app :is(.col-start-2) {
  grid-column-start: 2;
}

#app :is(.row-start-1) {
  grid-row-start: 1;
}

#app :is(.-m-2) {
  margin: -0.5rem;
}

#app :is(.m-auto) {
  margin: auto;
}

#app .my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

#app .mx-auto {
  margin-left: auto;
  margin-right: auto;
}

#app .-my-2 {
  margin-top: -0.5rem;
  margin-bottom: -0.5rem;
}

#app .my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

#app .-my-6 {
  margin-top: -1.5rem;
  margin-bottom: -1.5rem;
}

#app :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

#app :is(.my-4) {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

#app :is(.my-8) {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

#app .mt-2 {
  margin-top: 0.5rem;
}

#app .mt-4 {
  margin-top: 1rem;
}

#app .mt-6 {
  margin-top: 1.5rem;
}

#app .ml-3 {
  margin-left: 0.75rem;
}

#app .ml-2 {
  margin-left: 0.5rem;
}

#app :is(.mb-10) {
  margin-bottom: 2.5rem;
}

#app :is(.mb-16) {
  margin-bottom: 4rem;
}

#app :is(.mb-4) {
  margin-bottom: 1rem;
}

#app :is(.mb-5) {
  margin-bottom: 1.25rem;
}

#app :is(.mb-6) {
  margin-bottom: 1.5rem;
}

#app :is(.mb-8) {
  margin-bottom: 2rem;
}

#app :is(.ml-2) {
  margin-left: 0.5rem;
}

#app :is(.ml-3) {
  margin-left: 0.75rem;
}

#app :is(.ml-6) {
  margin-left: 1.5rem;
}

#app :is(.ml-auto) {
  margin-left: auto;
}

#app :is(.mr-1) {
  margin-right: 0.25rem;
}

#app :is(.mr-2) {
  margin-right: 0.5rem;
}

#app :is(.mr-3) {
  margin-right: 0.75rem;
}

#app :is(.mr-4) {
  margin-right: 1rem;
}

#app :is(.mt-0) {
  margin-top: 0px;
}

#app :is(.mt-0\.5) {
  margin-top: 0.125rem;
}

#app :is(.mt-1) {
  margin-top: 0.25rem;
}

#app :is(.mt-10) {
  margin-top: 2.5rem;
}

#app :is(.mt-12) {
  margin-top: 3rem;
}

#app :is(.mt-2) {
  margin-top: 0.5rem;
}

#app :is(.mt-24) {
  margin-top: 6rem;
}

#app :is(.mt-3) {
  margin-top: 0.75rem;
}

#app :is(.mt-4) {
  margin-top: 1rem;
}

#app :is(.mt-5) {
  margin-top: 1.25rem;
}

#app :is(.mt-6) {
  margin-top: 1.5rem;
}

#app :is(.mt-8) {
  margin-top: 2rem;
}

#app :is(.mt-auto) {
  margin-top: auto;
}

#app :is(.box-content) {
  box-sizing: content-box;
}

#app :is(.line-clamp-3) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}

#app :is(.block) {
  display: block;
}

#app :is(.inline) {
  display: inline;
}

#app :is(.flex) {
  display: flex;
}

#app :is(.inline-flex) {
  display: inline-flex;
}

#app :is(.table) {
  display: table;
}

#app :is(.flow-root) {
  display: flow-root;
}

#app :is(.grid) {
  display: grid;
}

#app :is(.contents) {
  display: contents;
}

#app :is(.hidden) {
  display: none;
}

#app :is(.aspect-\[7\/8\]) {
  aspect-ratio: 7/8;
}

#app :is(.h-10) {
  height: 2.5rem;
}

#app :is(.h-16) {
  height: 4rem;
}

#app :is(.h-2) {
  height: 0.5rem;
}

#app :is(.h-2\/3) {
  height: 66.666667%;
}

#app :is(.h-20) {
  height: 5rem;
}

#app :is(.h-24) {
  height: 6rem;
}

#app :is(.h-4) {
  height: 1rem;
}

#app :is(.h-48) {
  height: 12rem;
}

#app :is(.h-5) {
  height: 1.25rem;
}

#app :is(.h-6) {
  height: 1.5rem;
}

#app :is(.h-64) {
  height: 16rem;
}

#app :is(.h-7) {
  height: 1.75rem;
}

#app :is(.h-8) {
  height: 2rem;
}

#app :is(.h-96) {
  height: 24rem;
}

#app :is(.h-full) {
  height: 100%;
}

#app :is(.h-12) {
  height: 3rem;
}

#app :is(.min-h-\[220px\]) {
  min-height: 220px;
}

#app :is(.min-h-full) {
  min-height: 100%;
}

#app :is(.w-10) {
  width: 2.5rem;
}

#app :is(.w-20) {
  width: 5rem;
}

#app :is(.w-24) {
  width: 6rem;
}

#app :is(.w-4) {
  width: 1rem;
}

#app :is(.w-48) {
  width: 12rem;
}

#app :is(.w-5) {
  width: 1.25rem;
}

#app :is(.w-6) {
  width: 1.5rem;
}

#app :is(.w-8) {
  width: 2rem;
}

#app :is(.w-auto) {
  width: auto;
}

#app :is(.w-fit) {
  width: -moz-fit-content;
  width: fit-content;
}

#app :is(.w-full) {
  width: 100%;
}

#app :is(.w-screen) {
  width: 100vw;
}

#app :is(.w-7) {
  width: 1.75rem;
}

#app .max-w-full {
  max-width: 100%;
}

#app .max-w-lg {
  max-width: 32rem;
}

#app .max-w-6xl {
  max-width: 72rem;
}

#app .max-w-2xl {
  max-width: 42rem;
}

#app :is(.max-w-3xl) {
  max-width: 48rem;
}

#app :is(.max-w-6xl) {
  max-width: 72rem;
}

#app :is(.max-w-7xl) {
  max-width: 80rem;
}

#app :is(.max-w-lg) {
  max-width: 32rem;
}

#app :is(.max-w-md) {
  max-width: 28rem;
}

#app :is(.max-w-sm) {
  max-width: 24rem;
}

#app :is(.max-w-xl) {
  max-width: 36rem;
}

#app :is(.max-w-xs) {
  max-width: 20rem;
}

#app :is(.flex-1) {
  flex: 1 1 0%;
}

#app :is(.flex-shrink-0) {
  flex-shrink: 0;
}

#app :is(.flex-grow) {
  flex-grow: 1;
}

#app :is(.basis-1\/3) {
  flex-basis: 33.333333%;
}

#app :is(.origin-top-right) {
  transform-origin: top right;
}

#app :is(.translate-x-0) {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#app :is(.translate-x-full) {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#app :is(.rotate-90) {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#app :is(.scale-100) {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#app :is(.scale-95) {
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#app :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

#app :is(.animate-spin) {
  animation: spin 1s linear infinite;
}

#app :is(.cursor-grab) {
  cursor: grab;
}

#app :is(.cursor-pointer) {
  cursor: pointer;
}

#app :is(.touch-pan-x) {
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

#app :is(.select-none) {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

#app :is(.appearance-none) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

#app :is(.grid-cols-1) {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

#app :is(.grid-cols-2) {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

#app :is(.grid-cols-3) {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

#app :is(.grid-cols-\[144px_1fr\]) {
  grid-template-columns: 144px 1fr;
}

#app :is(.flex-row) {
  flex-direction: row;
}

#app :is(.flex-col) {
  flex-direction: column;
}

#app :is(.flex-nowrap) {
  flex-wrap: nowrap;
}

#app :is(.content-center) {
  align-content: center;
}

#app :is(.items-start) {
  align-items: flex-start;
}

#app :is(.items-end) {
  align-items: flex-end;
}

#app :is(.items-center) {
  align-items: center;
}

#app :is(.justify-start) {
  justify-content: flex-start;
}

#app :is(.justify-end) {
  justify-content: flex-end;
}

#app :is(.justify-center) {
  justify-content: center;
}

#app :is(.justify-between) {
  justify-content: space-between;
}

#app :is(.justify-around) {
  justify-content: space-around;
}

#app :is(.justify-items-center) {
  justify-items: center;
}

#app :is(.gap-0) {
  gap: 0px;
}

#app :is(.gap-1) {
  gap: 0.25rem;
}

#app :is(.gap-2) {
  gap: 0.5rem;
}

#app :is(.gap-3) {
  gap: 0.75rem;
}

#app :is(.gap-4) {
  gap: 1rem;
}

#app :is(.gap-8) {
  gap: 2rem;
}

#app :is(.gap-x-2) {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

#app :is(.gap-x-4) {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

#app :is(.gap-x-6) {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

#app :is(.gap-x-8) {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
}

#app :is(.gap-y-10) {
  row-gap: 2.5rem;
}

#app :is(.gap-y-2) {
  row-gap: 0.5rem;
}

#app :is(.gap-y-4) {
  row-gap: 1rem;
}

#app :is(.gap-y-6) {
  row-gap: 1.5rem;
}

#app :is(.gap-y-8) {
  row-gap: 2rem;
}

#app :is(.space-x-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

#app :is(.space-x-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

#app :is(.space-x-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

#app :is(.space-x-8 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

#app :is(.space-y-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

#app :is(.space-y-10 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

#app :is(.space-y-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

#app :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

#app :is(.space-y-6 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

#app :is(.divide-y > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

#app :is(.divide-gray-200 > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity));
}

#app :is(.self-start) {
  align-self: flex-start;
}

#app :is(.self-center) {
  align-self: center;
}

#app :is(.self-stretch) {
  align-self: stretch;
}

#app :is(.overflow-auto) {
  overflow: auto;
}

#app :is(.overflow-hidden) {
  overflow: hidden;
}

#app :is(.overflow-x-auto) {
  overflow-x: auto;
}

#app :is(.overflow-y-auto) {
  overflow-y: auto;
}

#app :is(.overflow-y-scroll) {
  overflow-y: scroll;
}

#app :is(.truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#app .break-words {
  overflow-wrap: break-word;
}

#app .rounded-md {
  border-radius: 0.375rem;
}

#app .rounded {
  border-radius: 0.25rem;
}

#app :is(.rounded-full) {
  border-radius: 9999px;
}

#app :is(.rounded-lg) {
  border-radius: 0.5rem;
}

#app :is(.rounded-md) {
  border-radius: 0.375rem;
}

#app :is(.rounded-xl) {
  border-radius: 0.75rem;
}

#app :is(.rounded-l-none) {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}

#app :is(.rounded-r-none) {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}

#app :is(.border) {
  border-width: 1px;
}

#app :is(.border-2) {
  border-width: 2px;
}

#app :is(.border-b) {
  border-bottom-width: 1px;
}

#app :is(.border-b-2) {
  border-bottom-width: 2px;
}

#app :is(.border-l) {
  border-left-width: 1px;
}

#app :is(.border-r-0) {
  border-right-width: 0px;
}

#app :is(.border-t) {
  border-top-width: 1px;
}

#app :is(.border-gray-200) {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

#app :is(.border-gray-300) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

#app :is(.border-gray-900) {
  --tw-border-opacity: 1;
  border-color: rgb(17 24 39 / var(--tw-border-opacity));
}

#app :is(.border-green-600) {
  --tw-border-opacity: 1;
  border-color: rgb(22 163 74 / var(--tw-border-opacity));
}

#app :is(.border-indigo-600) {
  --tw-border-opacity: 1;
  border-color: rgb(79 70 229 / var(--tw-border-opacity));
}

#app :is(.border-primary-500) {
  --tw-border-opacity: 1;
  border-color: rgb(14 165 233 / var(--tw-border-opacity));
}

#app :is(.border-rose-500) {
  --tw-border-opacity: 1;
  border-color: rgb(244 63 94 / var(--tw-border-opacity));
}

#app :is(.border-transparent) {
  border-color: transparent;
}

#app :is(.border-yellow-400) {
  --tw-border-opacity: 1;
  border-color: rgb(250 204 21 / var(--tw-border-opacity));
}

#app :is(.bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

#app :is(.bg-blue-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}

#app :is(.bg-blue-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-400) {
  --tw-bg-opacity: 1;
  background-color: rgb(156 163 175 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

#app :is(.bg-green-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}

#app :is(.bg-green-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity));
}

#app :is(.bg-green-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}

#app :is(.bg-indigo-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(79 70 229 / var(--tw-bg-opacity));
}

#app :is(.bg-primary-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(186 230 253 / var(--tw-bg-opacity));
}

#app :is(.bg-primary-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(14 165 233 / var(--tw-bg-opacity));
}

#app :is(.bg-primary-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(2 132 199 / var(--tw-bg-opacity));
}

#app :is(.bg-red-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity));
}

#app :is(.bg-red-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity));
}

#app :is(.bg-slate-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
}

#app :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

#app :is(.bg-yellow-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity));
}

#app :is(.bg-yellow-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity));
}

#app :is(.bg-zinc-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity));
}

#app :is(.bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

#app :is(.bg-primary-300) {
  --tw-bg-opacity: 1;
  background-color: rgb(125 211 252 / var(--tw-bg-opacity));
}

#app :is(.bg-opacity-0) {
  --tw-bg-opacity: 0;
}

#app :is(.bg-opacity-25) {
  --tw-bg-opacity: 0.25;
}

#app :is(.bg-opacity-75) {
  --tw-bg-opacity: 0.75;
}

#app :is(.bg-gradient-to-br) {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

#app :is(.bg-gradient-to-r) {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

#app :is(.bg-gradient-to-t) {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

#app :is(.from-gray-800) {
  --tw-gradient-from: #1f2937 var(--tw-gradient-from-position);
  --tw-gradient-from-position:  ;
  --tw-gradient-to: rgb(31 41 55 / 0)  var(--tw-gradient-from-position);
  --tw-gradient-to-position:  ;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#app :is(.from-yellow-600) {
  --tw-gradient-from: #ca8a04 var(--tw-gradient-from-position);
  --tw-gradient-from-position:  ;
  --tw-gradient-to: rgb(202 138 4 / 0)  var(--tw-gradient-from-position);
  --tw-gradient-to-position:  ;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#app :is(.from-zinc-400) {
  --tw-gradient-from: #a1a1aa var(--tw-gradient-from-position);
  --tw-gradient-from-position:  ;
  --tw-gradient-to: rgb(161 161 170 / 0)  var(--tw-gradient-from-position);
  --tw-gradient-to-position:  ;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#app :is(.via-red-500) {
  --tw-gradient-via-position:  ;
  --tw-gradient-to: rgb(239 68 68 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-to-position:  ;
  --tw-gradient-stops: var(--tw-gradient-from), #ef4444 var(--tw-gradient-via-position), var(--tw-gradient-to);
}

#app :is(.to-black) {
  --tw-gradient-to: #000 var(--tw-gradient-to-position);
  --tw-gradient-to-position:  ;
}

#app :is(.to-blue-600) {
  --tw-gradient-to: #2563eb var(--tw-gradient-to-position);
  --tw-gradient-to-position:  ;
}

#app :is(.bg-clip-text) {
  -webkit-background-clip: text;
          background-clip: text;
}

#app :is(.object-cover) {
  -o-object-fit: cover;
     object-fit: cover;
}

#app :is(.object-center) {
  -o-object-position: center;
     object-position: center;
}

#app :is(.p-0) {
  padding: 0px;
}

#app :is(.p-10) {
  padding: 2.5rem;
}

#app :is(.p-2) {
  padding: 0.5rem;
}

#app :is(.p-4) {
  padding: 1rem;
}

#app :is(.p-5) {
  padding: 1.25rem;
}

#app :is(.p-6) {
  padding: 1.5rem;
}

#app :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

#app :is(.px-2\.5) {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

#app :is(.px-4) {
  padding-left: 1rem;
  padding-right: 1rem;
}

#app .py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

#app .py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

#app .px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

#app .py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

#app .px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

#app .py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

#app :is(.py-1) {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

#app :is(.py-1\.5) {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

#app :is(.py-12) {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

#app :is(.py-16) {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

#app :is(.py-2) {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

#app :is(.py-3) {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

#app :is(.py-32) {
  padding-top: 8rem;
  padding-bottom: 8rem;
}

#app :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

#app :is(.py-6) {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

#app :is(.py-8) {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

#app :is(.pb-10) {
  padding-bottom: 2.5rem;
}

#app :is(.pb-12) {
  padding-bottom: 3rem;
}

#app :is(.pb-24) {
  padding-bottom: 6rem;
}

#app :is(.pb-4) {
  padding-bottom: 1rem;
}

#app :is(.pb-8) {
  padding-bottom: 2rem;
}

#app :is(.pl-10) {
  padding-left: 2.5rem;
}

#app :is(.pl-3) {
  padding-left: 0.75rem;
}

#app :is(.pl-4) {
  padding-left: 1rem;
}

#app :is(.pr-10) {
  padding-right: 2.5rem;
}

#app :is(.pt-1) {
  padding-top: 0.25rem;
}

#app :is(.pt-10) {
  padding-top: 2.5rem;
}

#app :is(.pt-12) {
  padding-top: 3rem;
}

#app :is(.pt-2) {
  padding-top: 0.5rem;
}

#app :is(.pt-24) {
  padding-top: 6rem;
}

#app :is(.pt-6) {
  padding-top: 1.5rem;
}

#app :is(.pt-8) {
  padding-top: 2rem;
}

#app :is(.pt-px) {
  padding-top: 1px;
}

#app :is(.text-left) {
  text-align: left;
}

#app :is(.text-center) {
  text-align: center;
}

#app :is(.text-right) {
  text-align: right;
}

#app :is(.text-end) {
  text-align: end;
}

#app :is(.align-baseline) {
  vertical-align: baseline;
}

#app :is(.align-middle) {
  vertical-align: middle;
}

#app :is(.\!text-sm) {
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}

#app .text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

#app :is(.text-3xl) {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

#app .text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

#app :is(.text-6xl) {
  font-size: 3.75rem;
  line-height: 1;
}

#app :is(.text-base) {
  font-size: 1rem;
  line-height: 1.5rem;
}

#app :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

#app :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

#app :is(.text-xl) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

#app :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem;
}

#app .font-semibold {
  font-weight: 600;
}

#app .font-bold {
  font-weight: 700;
}

#app .font-medium {
  font-weight: 500;
}

#app :is(.font-light) {
  font-weight: 300;
}

#app .font-extrabold {
  font-weight: 800;
}

#app :is(.font-semibold) {
  font-weight: 600;
}

#app :is(.uppercase) {
  text-transform: uppercase;
}

#app :is(.italic) {
  font-style: italic;
}

#app :is(.leading-5) {
  line-height: 1.25rem;
}

#app :is(.tracking-normal) {
  letter-spacing: 0em;
}

#app :is(.tracking-tight) {
  letter-spacing: -0.025em;
}

#app :is(.tracking-wide) {
  letter-spacing: 0.025em;
}

#app :is(.tracking-wider) {
  letter-spacing: 0.05em;
}

#app .text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#app .text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

#app .text-primary-600 {
  --tw-text-opacity: 1;
  color: rgb(2 132 199 / var(--tw-text-opacity));
}

#app .text-red-400 {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

#app .text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}

#app .text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

#app .text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

#app :is(.text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

#app :is(.text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

#app :is(.text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

#app :is(.text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#app :is(.text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

#app :is(.text-gray-800) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

#app :is(.text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

#app :is(.text-green-400) {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}

#app :is(.text-green-700) {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity));
}

#app :is(.text-green-800) {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity));
}

#app :is(.text-indigo-600) {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity));
}

#app :is(.text-orange-500) {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity));
}

#app :is(.text-orange-600) {
  --tw-text-opacity: 1;
  color: rgb(234 88 12 / var(--tw-text-opacity));
}

#app :is(.text-primary-200) {
  --tw-text-opacity: 1;
  color: rgb(186 230 253 / var(--tw-text-opacity));
}

#app :is(.text-primary-600) {
  --tw-text-opacity: 1;
  color: rgb(2 132 199 / var(--tw-text-opacity));
}

#app :is(.text-primary-800) {
  --tw-text-opacity: 1;
  color: rgb(7 89 133 / var(--tw-text-opacity));
}

#app :is(.text-red-300) {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity));
}

#app :is(.text-red-400) {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

#app :is(.text-red-600) {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}

#app :is(.text-red-700) {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}

#app :is(.text-red-800) {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}

#app :is(.text-rose-500) {
  --tw-text-opacity: 1;
  color: rgb(244 63 94 / var(--tw-text-opacity));
}

#app :is(.text-transparent) {
  color: transparent;
}

#app :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

#app :is(.text-yellow-400) {
  --tw-text-opacity: 1;
  color: rgb(250 204 21 / var(--tw-text-opacity));
}

#app :is(.text-yellow-800) {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity));
}

#app :is(.underline) {
  text-decoration-line: underline;
}

#app :is(.placeholder-gray-400)::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity));
}

#app :is(.placeholder-gray-400)::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity));
}

#app :is(.placeholder-gray-500)::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(107 114 128 / var(--tw-placeholder-opacity));
}

#app :is(.placeholder-gray-500)::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(107 114 128 / var(--tw-placeholder-opacity));
}

#app :is(.opacity-0) {
  opacity: 0;
}

#app :is(.opacity-100) {
  opacity: 1;
}

#app :is(.opacity-50) {
  opacity: 0.5;
}

#app :is(.mix-blend-darken) {
  mix-blend-mode: darken;
}

#app :is(.shadow) {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#app :is(.shadow-sm) {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#app :is(.shadow-xl) {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#app :is(.shadow-lg) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#app :is(.outline) {
  outline-style: solid;
}

#app :is(.outline-2) {
  outline-width: 2px;
}

#app :is(.outline-offset-\[-2px\]) {
  outline-offset: -2px;
}

#app :is(.ring-2) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

#app :is(.ring-1) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

#app :is(.ring-primary-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(14 165 233 / var(--tw-ring-opacity));
}

#app :is(.ring-black) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(0 0 0 / var(--tw-ring-opacity));
}

#app :is(.ring-opacity-5) {
  --tw-ring-opacity: 0.05;
}

#app :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#app :is(.backdrop-blur-sm) {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

#app :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#app :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#app :is(.transition-colors) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#app :is(.transition-opacity) {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#app :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#app :is(.duration-100) {
  transition-duration: 100ms;
}

#app :is(.duration-150) {
  transition-duration: 150ms;
}

#app :is(.duration-200) {
  transition-duration: 200ms;
}

#app :is(.duration-300) {
  transition-duration: 300ms;
}

#app :is(.duration-75) {
  transition-duration: 75ms;
}

#app :is(.ease-in) {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

#app :is(.ease-in-out) {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

#app :is(.ease-linear) {
  transition-timing-function: linear;
}

#app :is(.ease-out) {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

#app :is(.line-clamp-3) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}

#app :is(.hover\:bg-gray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

#app :is(.hover\:bg-gray-50:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

#app :is(.hover\:bg-green-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(21 128 61 / var(--tw-bg-opacity));
}

#app :is(.hover\:bg-primary-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(2 132 199 / var(--tw-bg-opacity));
}

#app :is(.hover\:bg-primary-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(3 105 161 / var(--tw-bg-opacity));
}

#app .hover\:text-primary-500:hover {
  --tw-text-opacity: 1;
  color: rgb(14 165 233 / var(--tw-text-opacity));
}

#app .hover\:text-gray-500:hover {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#app .hover\:text-gray-700:hover {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

#app :is(.hover\:text-gray-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#app :is(.hover\:text-gray-700:hover) {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

#app :is(.hover\:text-gray-800:hover) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

#app :is(.hover\:text-gray-900:hover) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

#app :is(.hover\:text-primary-400:hover) {
  --tw-text-opacity: 1;
  color: rgb(56 189 248 / var(--tw-text-opacity));
}

#app :is(.hover\:text-primary-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(14 165 233 / var(--tw-text-opacity));
}

#app :is(.hover\:text-red-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

#app :is(.hover\:text-white:hover) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

#app :is(.hover\:text-primary-800:hover) {
  --tw-text-opacity: 1;
  color: rgb(7 89 133 / var(--tw-text-opacity));
}

#app :is(.hover\:text-indigo-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity));
}

#app :is(.hover\:opacity-50:hover) {
  opacity: 0.5;
}

#app :is(.hover\:opacity-75:hover) {
  opacity: 0.75;
}

#app :is(.focus\:z-10:focus) {
  z-index: 10;
}

#app :is(.focus\:border-primary-500:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(14 165 233 / var(--tw-border-opacity));
}

#app :is(.focus\:border-rose-500:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(244 63 94 / var(--tw-border-opacity));
}

#app :is(.focus\:border-white:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

#app :is(.focus\:border-indigo-500:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(99 102 241 / var(--tw-border-opacity));
}

#app :is(.focus\:placeholder-gray-400:focus)::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity));
}

#app :is(.focus\:placeholder-gray-400:focus)::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity));
}

#app :is(.focus\:outline-none:focus) {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

#app :is(.focus\:ring-1:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

#app :is(.focus\:ring-2:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

#app :is(.focus\:ring-gray-800:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(31 41 55 / var(--tw-ring-opacity));
}

#app :is(.focus\:ring-primary-500:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(14 165 233 / var(--tw-ring-opacity));
}

#app :is(.focus\:ring-white:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

#app :is(.focus\:ring-indigo-500:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity));
}

#app :is(.focus\:ring-offset-0:focus) {
  --tw-ring-offset-width: 0px;
}

#app :is(.focus\:ring-offset-2:focus) {
  --tw-ring-offset-width: 2px;
}

#app :is(.focus\:ring-offset-gray-50:focus) {
  --tw-ring-offset-color: #f9fafb;
}

#app :is(.focus\:ring-offset-gray-800:focus) {
  --tw-ring-offset-color: #1f2937;
}

#app :is(.active\:bg-green-700:active) {
  --tw-bg-opacity: 1;
  background-color: rgb(21 128 61 / var(--tw-bg-opacity));
}

#app :is(.disabled\:cursor-not-allowed:disabled) {
  cursor: not-allowed;
}

#app :is(.disabled\:bg-gray-200:disabled) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

#app :is(.disabled\:bg-gray-300:disabled) {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}

#app :is(.disabled\:text-gray-400:disabled) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

#app :is(.disabled\:opacity-50:disabled) {
  opacity: 0.5;
}

#app :is(.disabled\:hover\:opacity-30:hover:disabled) {
  opacity: 0.3;
}

#app :is(.group:hover .group-hover\:text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#app :is(.group:hover .group-hover\:text-gray-800) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

#app :is(.group:hover .group-hover\:opacity-75) {
  opacity: 0.75;
}

@media (prefers-color-scheme: dark) {
  #app :is(.dark\:bg-blue-900) {
    --tw-bg-opacity: 1;
    background-color: rgb(30 58 138 / var(--tw-bg-opacity));
  }

  #app :is(.dark\:text-blue-300) {
    --tw-text-opacity: 1;
    color: rgb(147 197 253 / var(--tw-text-opacity));
  }
}

@media (min-width: 640px) {
  #app :is(.sm\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #app :is(.sm\:col-span-5) {
    grid-column: span 5 / span 5;
  }

  #app :is(.sm\:mx-auto) {
    margin-left: auto;
    margin-right: auto;
  }

  #app :is(.sm\:ml-3) {
    margin-left: 0.75rem;
  }

  #app :is(.sm\:ml-6) {
    margin-left: 1.5rem;
  }

  #app :is(.sm\:mt-0) {
    margin-top: 0px;
  }

  #app :is(.sm\:mt-16) {
    margin-top: 4rem;
  }

  #app :is(.sm\:mt-4) {
    margin-top: 1rem;
  }

  #app :is(.sm\:block) {
    display: block;
  }

  #app :is(.sm\:flex) {
    display: flex;
  }

  #app :is(.sm\:hidden) {
    display: none;
  }

  #app :is(.sm\:h-12) {
    height: 3rem;
  }

  #app :is(.sm\:w-1\/4) {
    width: 25%;
  }

  #app :is(.sm\:w-12) {
    width: 3rem;
  }

  #app :is(.sm\:w-full) {
    width: 100%;
  }

  #app :is(.sm\:max-w-md) {
    max-width: 28rem;
  }

  #app :is(.sm\:max-w-none) {
    max-width: none;
  }

  #app :is(.sm\:flex-shrink-0) {
    flex-shrink: 0;
  }

  #app :is(.sm\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #app :is(.sm\:grid-cols-5) {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  #app :is(.sm\:flex-row) {
    flex-direction: row;
  }

  #app :is(.sm\:items-center) {
    align-items: center;
  }

  #app :is(.sm\:gap-x-4) {
    -moz-column-gap: 1rem;
         column-gap: 1rem;
  }

  #app :is(.sm\:space-y-4 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  }

  #app :is(.sm\:rounded-lg) {
    border-radius: 0.5rem;
  }

  #app .sm\:py-32 {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }

  #app .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  #app .sm\:py-64 {
    padding-top: 16rem;
    padding-bottom: 16rem;
  }

  #app .sm\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }

  #app :is(.sm\:px-6) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  #app :is(.sm\:py-16) {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  #app :is(.sm\:py-24) {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }

  #app :is(.sm\:py-32) {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }

  #app :is(.sm\:pt-32) {
    padding-top: 8rem;
  }

  #app :is(.sm\:text-5xl) {
    font-size: 3rem;
    line-height: 1;
  }

  #app .sm\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  #app .sm\:duration-300 {
    transition-duration: 300ms;
  }

  #app :is(.sm\:text-sm) {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

@media (min-width: 768px) {
  #app .md\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  #app .md\:ml-4 {
    margin-left: 1rem;
  }

  #app :is(.md\:mt-0) {
    margin-top: 0px;
  }

  #app :is(.md\:mt-12) {
    margin-top: 3rem;
  }

  #app :is(.md\:line-clamp-2) {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  #app :is(.md\:flex) {
    display: flex;
  }

  #app :is(.md\:grid) {
    display: grid;
  }

  #app :is(.md\:basis-1\/4) {
    flex-basis: 25%;
  }

  #app :is(.md\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #app :is(.md\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #app :is(.md\:flex-row) {
    flex-direction: row;
  }

  #app :is(.md\:items-center) {
    align-items: center;
  }

  #app :is(.md\:justify-between) {
    justify-content: space-between;
  }

  #app :is(.md\:gap-8) {
    gap: 2rem;
  }

  #app :is(.md\:space-x-4 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  #app :is(.md\:self-end) {
    align-self: flex-end;
  }

  #app :is(.md\:overflow-x-hidden) {
    overflow-x: hidden;
  }

  #app :is(.md\:text-sm) {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  #app :is(.md\:line-clamp-2) {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
}

@media (min-width: 1024px) {
  #app :is(.lg\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #app :is(.lg\:col-span-3) {
    grid-column: span 3 / span 3;
  }

  #app :is(.lg\:col-span-4) {
    grid-column: span 4 / span 4;
  }

  #app :is(.lg\:col-span-8) {
    grid-column: span 8 / span 8;
  }

  #app :is(.lg\:col-span-9) {
    grid-column: span 9 / span 9;
  }

  #app :is(.lg\:col-start-1) {
    grid-column-start: 1;
  }

  #app :is(.lg\:col-start-5) {
    grid-column-start: 5;
  }

  #app :is(.lg\:row-start-1) {
    grid-row-start: 1;
  }

  #app :is(.lg\:ml-0) {
    margin-left: 0px;
  }

  #app :is(.lg\:ml-3) {
    margin-left: 0.75rem;
  }

  #app :is(.lg\:ml-5) {
    margin-left: 1.25rem;
  }

  #app :is(.lg\:ml-6) {
    margin-left: 1.5rem;
  }

  #app :is(.lg\:ml-8) {
    margin-left: 2rem;
  }

  #app :is(.lg\:mt-0) {
    margin-top: 0px;
  }

  #app :is(.lg\:mt-2) {
    margin-top: 0.5rem;
  }

  #app :is(.lg\:mt-6) {
    margin-top: 1.5rem;
  }

  #app :is(.lg\:block) {
    display: block;
  }

  #app :is(.lg\:grid) {
    display: grid;
  }

  #app :is(.lg\:hidden) {
    display: none;
  }

  #app :is(.lg\:max-w-3xl) {
    max-width: 48rem;
  }

  #app :is(.lg\:max-w-6xl) {
    max-width: 72rem;
  }

  #app :is(.lg\:max-w-7xl) {
    max-width: 80rem;
  }

  #app :is(.lg\:max-w-none) {
    max-width: none;
  }

  #app :is(.lg\:grid-cols-12) {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  #app :is(.lg\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #app :is(.lg\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #app :is(.lg\:grid-cols-4) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  #app :is(.lg\:flex-col) {
    flex-direction: column;
  }

  #app :is(.lg\:items-start) {
    align-items: flex-start;
  }

  #app :is(.lg\:gap-16) {
    gap: 4rem;
  }

  #app :is(.lg\:gap-6) {
    gap: 1.5rem;
  }

  #app :is(.lg\:gap-x-12) {
    -moz-column-gap: 3rem;
         column-gap: 3rem;
  }

  #app :is(.lg\:gap-x-5) {
    -moz-column-gap: 1.25rem;
         column-gap: 1.25rem;
  }

  #app :is(.lg\:gap-x-8) {
    -moz-column-gap: 2rem;
         column-gap: 2rem;
  }

  #app :is(.lg\:self-stretch) {
    align-self: stretch;
  }

  #app :is(.lg\:border-0) {
    border-width: 0px;
  }

  #app :is(.lg\:p-3) {
    padding: 0.75rem;
  }

  #app :is(.lg\:p-6) {
    padding: 1.5rem;
  }

  #app :is(.lg\:px-0) {
    padding-left: 0px;
    padding-right: 0px;
  }

  #app :is(.lg\:px-6) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  #app :is(.lg\:px-8) {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  #app :is(.lg\:py-0) {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  #app :is(.lg\:py-12) {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }

  #app :is(.lg\:py-16) {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  #app :is(.lg\:py-3) {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  #app :is(.lg\:pl-0) {
    padding-left: 0px;
  }

  #app :is(.lg\:text-6xl) {
    font-size: 3.75rem;
    line-height: 1;
  }
}

@media (min-width: 1280px) {
  #app :is(.xl\:relative) {
    position: relative;
  }

  #app :is(.xl\:col-span-1) {
    grid-column: span 1 / span 1;
  }

  #app :is(.xl\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #app :is(.xl\:col-span-3) {
    grid-column: span 3 / span 3;
  }

  #app :is(.xl\:col-span-9) {
    grid-column: span 9 / span 9;
  }

  #app :is(.xl\:col-start-4) {
    grid-column-start: 4;
  }

  #app :is(.xl\:mx-auto) {
    margin-left: auto;
    margin-right: auto;
  }

  #app :is(.xl\:mt-0) {
    margin-top: 0px;
  }

  #app :is(.xl\:grid) {
    display: grid;
  }

  #app :is(.xl\:w-auto) {
    width: auto;
  }

  #app :is(.xl\:max-w-7xl) {
    max-width: 80rem;
  }

  #app :is(.xl\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #app :is(.xl\:items-start) {
    align-items: flex-start;
  }

  #app :is(.xl\:gap-8) {
    gap: 2rem;
  }

  #app :is(.xl\:gap-x-16) {
    -moz-column-gap: 4rem;
         column-gap: 4rem;
  }

  #app :is(.xl\:gap-x-8) {
    -moz-column-gap: 2rem;
         column-gap: 2rem;
  }

  #app :is(.xl\:space-x-0 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0px * var(--tw-space-x-reverse));
    margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
  }

  #app :is(.xl\:overflow-visible) {
    overflow: visible;
  }

  #app :is(.xl\:px-0) {
    padding-left: 0px;
    padding-right: 0px;
  }

  #app :is(.xl\:px-8) {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
